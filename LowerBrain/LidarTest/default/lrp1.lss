
lrp1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000094  00800200  00003bc4  00003c58  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003bc4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000128  00800294  00800294  00003cec  2**0
                  ALLOC
  3 .debug_aranges 00000280  00000000  00000000  00003cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000d87  00000000  00000000  00003f6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00009eae  00000000  00000000  00004cf3  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001ff6  00000000  00000000  0000eba1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000039e5  00000000  00000000  00010b97  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000a70  00000000  00000000  0001457c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00001bd8  00000000  00000000  00014fec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00004a82  00000000  00000000  00016bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000001a8  00000000  00000000  0001b646  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 e2 01 	jmp	0x3c4	; 0x3c4 <__ctors_end>
       4:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
       8:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
       c:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      10:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      14:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      18:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      1c:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      20:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      24:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      28:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      2c:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      30:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      34:	0c 94 8d 03 	jmp	0x71a	; 0x71a <__vector_13>
      38:	0c 94 b9 03 	jmp	0x772	; 0x772 <__vector_14>
      3c:	0c 94 61 03 	jmp	0x6c2	; 0x6c2 <__vector_15>
      40:	0c 94 b1 02 	jmp	0x562	; 0x562 <__vector_16>
      44:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <__vector_17>
      48:	0c 94 09 03 	jmp	0x612	; 0x612 <__vector_18>
      4c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__vector_19>
      50:	0c 94 85 02 	jmp	0x50a	; 0x50a <__vector_20>
      54:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__vector_21>
      58:	0c 94 59 02 	jmp	0x4b2	; 0x4b2 <__vector_22>
      5c:	0c 94 01 02 	jmp	0x402	; 0x402 <__vector_23>
      60:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      64:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      68:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      6c:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      70:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      74:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      78:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      7c:	0c 94 11 04 	jmp	0x822	; 0x822 <__vector_31>
      80:	0c 94 3d 04 	jmp	0x87a	; 0x87a <__vector_32>
      84:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <__vector_33>
      88:	0c 94 95 04 	jmp	0x92a	; 0x92a <__vector_34>
      8c:	0c 94 e5 03 	jmp	0x7ca	; 0x7ca <__vector_35>
      90:	0c 94 bf 06 	jmp	0xd7e	; 0xd7e <__vector_36>
      94:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      98:	0c 94 93 06 	jmp	0xd26	; 0xd26 <__vector_38>
      9c:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      a0:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      a4:	0c 94 ed 04 	jmp	0x9da	; 0x9da <__vector_41>
      a8:	0c 94 19 05 	jmp	0xa32	; 0xa32 <__vector_42>
      ac:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <__vector_43>
      b0:	0c 94 71 05 	jmp	0xae2	; 0xae2 <__vector_44>
      b4:	0c 94 c1 04 	jmp	0x982	; 0x982 <__vector_45>
      b8:	0c 94 c9 05 	jmp	0xb92	; 0xb92 <__vector_46>
      bc:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__vector_47>
      c0:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__vector_48>
      c4:	0c 94 4d 06 	jmp	0xc9a	; 0xc9a <__vector_49>
      c8:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__vector_50>
      cc:	0c 94 38 07 	jmp	0xe70	; 0xe70 <__vector_51>
      d0:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      d4:	0c 94 0c 07 	jmp	0xe18	; 0xe18 <__vector_53>
      d8:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      dc:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>
      e0:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__bad_interrupt>

000000e4 <_PORTB>:
      e4:	25 00 24 00 23 00                                   %.$.#.

000000ea <_PORTD>:
      ea:	2b 00 2a 00 29 00                                   +.*.).

000000f0 <_PORTE>:
      f0:	2e 00 2d 00 2c 00                                   ..-.,.

000000f6 <_PORTG>:
      f6:	34 00 33 00 32 00                                   4.3.2.

000000fc <_PORTH>:
      fc:	02 01 01 01 00 01                                   ......

00000102 <_B6>:
     102:	e4 00 40                                            ..@

00000105 <_D2>:
     105:	ea 00 04                                            ...

00000108 <_D3>:
     108:	ea 00 08                                            ...

0000010b <_E3>:
     10b:	f0 00 08                                            ...

0000010e <_E4>:
     10e:	f0 00 10                                            ...

00000111 <_E5>:
     111:	f0 00 20                                            .. 

00000114 <_E7>:
     114:	f0 00 80                                            ...

00000117 <_G5>:
     117:	f6 00 20                                            .. 

0000011a <_H0>:
     11a:	fc 00 01                                            ...

0000011d <_H1>:
     11d:	fc 00 02                                            ...

00000120 <_H3>:
     120:	fc 00 08                                            ...

00000123 <_H4>:
     123:	fc 00 10                                            ...

00000126 <_H5>:
     126:	fc 00 20                                            .. 

00000129 <_H6>:
     129:	fc 00 40                                            ..@

0000012c <PCINT_PINS>:
	...
     138:	02 01                                               ..

0000013a <__timer0Compare>:
     13a:	a3 02 00 6e 00 02 47 00 35 00 02 44 00 06 00 00     ...n..G.5..D....
     14a:	ab 02 00 6e 00 04 48 00 35 00 04 44 00 04 17 01     ...n..H.5..D....

0000015a <__timer1Compare>:
     15a:	c2 02 01 6f 00 02 88 00 36 00 02 80 00 06 00 00     ...o....6.......
     16a:	ca 02 01 6f 00 04 8a 00 36 00 04 80 00 04 02 01     ...o....6.......
     17a:	d2 02 01 6f 00 08 8c 00 36 00 08 80 00 02 00 00     ...o....6.......

0000018a <__timer2Compare>:
     18a:	e9 02 02 70 00 02 b3 00 37 00 02 b0 00 06 00 00     ...p....7.......
     19a:	f1 02 02 70 00 04 b4 00 37 00 04 b0 00 04 29 01     ...p....7.....).

000001aa <__timer3Compare>:
     1aa:	08 03 03 71 00 02 98 00 38 00 02 90 00 06 0b 01     ...q....8.......
     1ba:	10 03 03 71 00 04 9a 00 38 00 04 90 00 04 0e 01     ...q....8.......
     1ca:	18 03 03 71 00 08 9c 00 38 00 08 90 00 02 11 01     ...q....8.......

000001da <__timer4Compare>:
     1da:	2f 03 04 72 00 02 a8 00 39 00 02 a0 00 06 20 01     /..r....9..... .
     1ea:	37 03 04 72 00 04 aa 00 39 00 04 a0 00 04 23 01     7..r....9.....#.
     1fa:	3f 03 04 72 00 08 ac 00 39 00 08 a0 00 02 26 01     ?..r....9.....&.

0000020a <__timer5Compare>:
     20a:	56 03 05 73 00 02 28 01 3a 00 02 20 01 06 00 00     V..s..(.:.. ....
     21a:	5e 03 05 73 00 04 2a 01 3a 00 04 20 01 04 00 00     ^..s..*.:.. ....
     22a:	66 03 05 73 00 08 2c 01 3a 00 08 20 01 02 00 00     f..s..,.:.. ....

0000023a <pgm_Timers>:
     23a:	94 02 46 00 45 00 00 00 02 33 88 44 00 01 44 00     ..F.E....3.D..D.
     24a:	02 45 00 08 00 00 01 3a 01 6e 00 01 35 00 01 00     .E.....:.n..5...
     25a:	00 00 00 01 00 00 01 00 00 01 00 00 b3 02 84 00     ................
     26a:	81 00 ff 00 03 ff df 80 00 01 80 00 02 81 00 08     ................
     27a:	81 00 10 5a 01 6f 00 01 36 00 01 86 00 6f 00 20     ...Z.o..6....o. 
     28a:	36 00 20 81 00 40 00 00 da 02 b2 00 b1 00 00 ff     6. ..@..........
     29a:	02 33 88 b0 00 01 b0 00 02 b1 00 08 00 00 01 8a     .3..............
     2aa:	01 70 00 01 37 00 01 00 00 00 00 01 00 00 01 00     .p..7...........
     2ba:	00 01 00 00 f9 02 94 00 91 00 ff 00 03 ff df 90     ................
     2ca:	00 01 90 00 02 91 00 08 91 00 10 aa 01 71 00 01     .............q..
     2da:	38 00 01 96 00 71 00 20 38 00 20 91 00 40 14 01     8....q. 8. ..@..
     2ea:	20 03 a4 00 a1 00 ff 00 03 ff df a0 00 01 a0 00      ...............
     2fa:	02 a1 00 08 a1 00 10 da 01 72 00 01 39 00 01 a6     .........r..9...
     30a:	00 72 00 20 39 00 20 a1 00 40 00 00 47 03 24 01     .r. 9. ..@..G.$.
     31a:	21 01 ff 00 03 ff df 20 01 01 20 01 02 21 01 08     !...... .. ..!..
     32a:	21 01 10 0a 02 73 00 01 3a 00 01 26 01 73 00 20     !....s..:..&.s. 
     33a:	3a 00 20 21 01 40 00 00                             :. !.@..

00000342 <AVcc_MV>:
     342:	88 13                                               ..

00000344 <bank1_list>:
     344:	60 02 74 02                                         `.t.

00000348 <__c.2658>:
     348:	48 45 4c 4c 4f 00                                   HELLO.

0000034e <HexChars>:
     34e:	30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46     0123456789ABCDEF
	...

0000035f <c_Servos>:
     35f:	0b 0f 00 00                                         ....

00000363 <TimerPrescaleFactor>:
     363:	00 00 01 00 08 00 40 00 00 01 00 04                 ......@.....

0000036f <TimerRTCPrescaleFactor>:
     36f:	00 00 01 00 08 00 20 00 40 00 80 00 00 01 00 04     ...... .@.......

0000037f <__3bit_modes>:
     37f:	00 01 ff ff 02 03 ff ff ff ff ff 05 ff ff ff 07     ................

0000038f <__2bit_modes>:
     38f:	00 01 ff ff 02 03                                   ......

00000395 <__c.2455>:
     395:	55 73 65 72 20 45 72 72 6f 72 3a 25 64 0a 00        User Error:%d..

000003a4 <__c.2453>:
     3a4:	57 65 62 62 6f 74 4c 69 62 20 45 72 72 6f 72 3a     WebbotLib Error:
     3b4:	25 64 0a 00                                         %d..

000003b8 <c_hw_uart>:
     3b8:	72 1a 28 1b 66 1b fd 1a 2f 1b 13 1b                 r.(.f.../...

000003c4 <__ctors_end>:
     3c4:	11 24       	eor	r1, r1
     3c6:	1f be       	out	0x3f, r1	; 63
     3c8:	cf ef       	ldi	r28, 0xFF	; 255
     3ca:	d1 e2       	ldi	r29, 0x21	; 33
     3cc:	de bf       	out	0x3e, r29	; 62
     3ce:	cd bf       	out	0x3d, r28	; 61

000003d0 <__do_copy_data>:
     3d0:	12 e0       	ldi	r17, 0x02	; 2
     3d2:	a0 e0       	ldi	r26, 0x00	; 0
     3d4:	b2 e0       	ldi	r27, 0x02	; 2
     3d6:	e4 ec       	ldi	r30, 0xC4	; 196
     3d8:	fb e3       	ldi	r31, 0x3B	; 59
     3da:	02 c0       	rjmp	.+4      	; 0x3e0 <.do_copy_data_start>

000003dc <.do_copy_data_loop>:
     3dc:	05 90       	lpm	r0, Z+
     3de:	0d 92       	st	X+, r0

000003e0 <.do_copy_data_start>:
     3e0:	a4 39       	cpi	r26, 0x94	; 148
     3e2:	b1 07       	cpc	r27, r17
     3e4:	d9 f7       	brne	.-10     	; 0x3dc <.do_copy_data_loop>

000003e6 <__do_clear_bss>:
     3e6:	13 e0       	ldi	r17, 0x03	; 3
     3e8:	a4 e9       	ldi	r26, 0x94	; 148
     3ea:	b2 e0       	ldi	r27, 0x02	; 2
     3ec:	01 c0       	rjmp	.+2      	; 0x3f0 <.do_clear_bss_start>

000003ee <.do_clear_bss_loop>:
     3ee:	1d 92       	st	X+, r1

000003f0 <.do_clear_bss_start>:
     3f0:	ac 3b       	cpi	r26, 0xBC	; 188
     3f2:	b1 07       	cpc	r27, r17
     3f4:	e1 f7       	brne	.-8      	; 0x3ee <.do_clear_bss_loop>
     3f6:	0e 94 1a 0b 	call	0x1634	; 0x1634 <main>
     3fa:	0c 94 6d 1d 	jmp	0x3ada	; 0x3ada <exit>

000003fe <__bad_interrupt>:
     3fe:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000402 <__vector_23>:
		__timer5Compare,TIMSK5,TOIE5,TIFR5,TOV5,ICR5,TIMSK5,ICIE5,TIFR5,ICF5,TCCR5B,ICES5,null)
};
const uint8_t NUMBER_OF_TIMERS =  (sizeof(pgm_Timers)/sizeof(Timer));

#ifdef TIMER0_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER0_OVF_vect){
     402:	1f 92       	push	r1
     404:	0f 92       	push	r0
     406:	0f b6       	in	r0, 0x3f	; 63
     408:	0f 92       	push	r0
     40a:	11 24       	eor	r1, r1
     40c:	2f 93       	push	r18
     40e:	3f 93       	push	r19
     410:	4f 93       	push	r20
     412:	5f 93       	push	r21
     414:	6f 93       	push	r22
     416:	7f 93       	push	r23
     418:	8f 93       	push	r24
     41a:	9f 93       	push	r25
     41c:	af 93       	push	r26
     41e:	bf 93       	push	r27
     420:	ef 93       	push	r30
     422:	ff 93       	push	r31
     424:	df 93       	push	r29
     426:	cf 93       	push	r28
     428:	cd b7       	in	r28, 0x3d	; 61
     42a:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER0);
     42c:	8a e3       	ldi	r24, 0x3A	; 58
     42e:	92 e0       	ldi	r25, 0x02	; 2
     430:	0e 94 56 11 	call	0x22ac	; 0x22ac <__timer_overflowService>
}
     434:	cf 91       	pop	r28
     436:	df 91       	pop	r29
     438:	ff 91       	pop	r31
     43a:	ef 91       	pop	r30
     43c:	bf 91       	pop	r27
     43e:	af 91       	pop	r26
     440:	9f 91       	pop	r25
     442:	8f 91       	pop	r24
     444:	7f 91       	pop	r23
     446:	6f 91       	pop	r22
     448:	5f 91       	pop	r21
     44a:	4f 91       	pop	r20
     44c:	3f 91       	pop	r19
     44e:	2f 91       	pop	r18
     450:	0f 90       	pop	r0
     452:	0f be       	out	0x3f, r0	; 63
     454:	0f 90       	pop	r0
     456:	1f 90       	pop	r1
     458:	18 95       	reti

0000045a <__vector_21>:
#else
# error Missing vector definition
#endif

#ifdef TIMER0_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER0_COMPA_vect){
     45a:	1f 92       	push	r1
     45c:	0f 92       	push	r0
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	0f 92       	push	r0
     462:	11 24       	eor	r1, r1
     464:	2f 93       	push	r18
     466:	3f 93       	push	r19
     468:	4f 93       	push	r20
     46a:	5f 93       	push	r21
     46c:	6f 93       	push	r22
     46e:	7f 93       	push	r23
     470:	8f 93       	push	r24
     472:	9f 93       	push	r25
     474:	af 93       	push	r26
     476:	bf 93       	push	r27
     478:	ef 93       	push	r30
     47a:	ff 93       	push	r31
     47c:	df 93       	push	r29
     47e:	cf 93       	push	r28
     480:	cd b7       	in	r28, 0x3d	; 61
     482:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER0_COMPAREA);
     484:	8a e3       	ldi	r24, 0x3A	; 58
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     48c:	cf 91       	pop	r28
     48e:	df 91       	pop	r29
     490:	ff 91       	pop	r31
     492:	ef 91       	pop	r30
     494:	bf 91       	pop	r27
     496:	af 91       	pop	r26
     498:	9f 91       	pop	r25
     49a:	8f 91       	pop	r24
     49c:	7f 91       	pop	r23
     49e:	6f 91       	pop	r22
     4a0:	5f 91       	pop	r21
     4a2:	4f 91       	pop	r20
     4a4:	3f 91       	pop	r19
     4a6:	2f 91       	pop	r18
     4a8:	0f 90       	pop	r0
     4aa:	0f be       	out	0x3f, r0	; 63
     4ac:	0f 90       	pop	r0
     4ae:	1f 90       	pop	r1
     4b0:	18 95       	reti

000004b2 <__vector_22>:
#else
# error Missing vector definition
#endif

#ifdef TIMER0_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER0_COMPB_vect){
     4b2:	1f 92       	push	r1
     4b4:	0f 92       	push	r0
     4b6:	0f b6       	in	r0, 0x3f	; 63
     4b8:	0f 92       	push	r0
     4ba:	11 24       	eor	r1, r1
     4bc:	2f 93       	push	r18
     4be:	3f 93       	push	r19
     4c0:	4f 93       	push	r20
     4c2:	5f 93       	push	r21
     4c4:	6f 93       	push	r22
     4c6:	7f 93       	push	r23
     4c8:	8f 93       	push	r24
     4ca:	9f 93       	push	r25
     4cc:	af 93       	push	r26
     4ce:	bf 93       	push	r27
     4d0:	ef 93       	push	r30
     4d2:	ff 93       	push	r31
     4d4:	df 93       	push	r29
     4d6:	cf 93       	push	r28
     4d8:	cd b7       	in	r28, 0x3d	; 61
     4da:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER0_COMPAREB);
     4dc:	8a e4       	ldi	r24, 0x4A	; 74
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     4e4:	cf 91       	pop	r28
     4e6:	df 91       	pop	r29
     4e8:	ff 91       	pop	r31
     4ea:	ef 91       	pop	r30
     4ec:	bf 91       	pop	r27
     4ee:	af 91       	pop	r26
     4f0:	9f 91       	pop	r25
     4f2:	8f 91       	pop	r24
     4f4:	7f 91       	pop	r23
     4f6:	6f 91       	pop	r22
     4f8:	5f 91       	pop	r21
     4fa:	4f 91       	pop	r20
     4fc:	3f 91       	pop	r19
     4fe:	2f 91       	pop	r18
     500:	0f 90       	pop	r0
     502:	0f be       	out	0x3f, r0	; 63
     504:	0f 90       	pop	r0
     506:	1f 90       	pop	r1
     508:	18 95       	reti

0000050a <__vector_20>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER1_OVF_vect){
     50a:	1f 92       	push	r1
     50c:	0f 92       	push	r0
     50e:	0f b6       	in	r0, 0x3f	; 63
     510:	0f 92       	push	r0
     512:	11 24       	eor	r1, r1
     514:	2f 93       	push	r18
     516:	3f 93       	push	r19
     518:	4f 93       	push	r20
     51a:	5f 93       	push	r21
     51c:	6f 93       	push	r22
     51e:	7f 93       	push	r23
     520:	8f 93       	push	r24
     522:	9f 93       	push	r25
     524:	af 93       	push	r26
     526:	bf 93       	push	r27
     528:	ef 93       	push	r30
     52a:	ff 93       	push	r31
     52c:	df 93       	push	r29
     52e:	cf 93       	push	r28
     530:	cd b7       	in	r28, 0x3d	; 61
     532:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER1);
     534:	86 e6       	ldi	r24, 0x66	; 102
     536:	92 e0       	ldi	r25, 0x02	; 2
     538:	0e 94 56 11 	call	0x22ac	; 0x22ac <__timer_overflowService>
}
     53c:	cf 91       	pop	r28
     53e:	df 91       	pop	r29
     540:	ff 91       	pop	r31
     542:	ef 91       	pop	r30
     544:	bf 91       	pop	r27
     546:	af 91       	pop	r26
     548:	9f 91       	pop	r25
     54a:	8f 91       	pop	r24
     54c:	7f 91       	pop	r23
     54e:	6f 91       	pop	r22
     550:	5f 91       	pop	r21
     552:	4f 91       	pop	r20
     554:	3f 91       	pop	r19
     556:	2f 91       	pop	r18
     558:	0f 90       	pop	r0
     55a:	0f be       	out	0x3f, r0	; 63
     55c:	0f 90       	pop	r0
     55e:	1f 90       	pop	r1
     560:	18 95       	reti

00000562 <__vector_16>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_CAPT_vect
TIMER_INTERRUPT_HANDLER(TIMER1_CAPT_vect){
     562:	1f 92       	push	r1
     564:	0f 92       	push	r0
     566:	0f b6       	in	r0, 0x3f	; 63
     568:	0f 92       	push	r0
     56a:	11 24       	eor	r1, r1
     56c:	2f 93       	push	r18
     56e:	3f 93       	push	r19
     570:	4f 93       	push	r20
     572:	5f 93       	push	r21
     574:	6f 93       	push	r22
     576:	7f 93       	push	r23
     578:	8f 93       	push	r24
     57a:	9f 93       	push	r25
     57c:	af 93       	push	r26
     57e:	bf 93       	push	r27
     580:	ef 93       	push	r30
     582:	ff 93       	push	r31
     584:	df 93       	push	r29
     586:	cf 93       	push	r28
     588:	cd b7       	in	r28, 0x3d	; 61
     58a:	de b7       	in	r29, 0x3e	; 62
	__timer_captureService(TIMER1);
     58c:	86 e6       	ldi	r24, 0x66	; 102
     58e:	92 e0       	ldi	r25, 0x02	; 2
     590:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__timer_captureService>
}
     594:	cf 91       	pop	r28
     596:	df 91       	pop	r29
     598:	ff 91       	pop	r31
     59a:	ef 91       	pop	r30
     59c:	bf 91       	pop	r27
     59e:	af 91       	pop	r26
     5a0:	9f 91       	pop	r25
     5a2:	8f 91       	pop	r24
     5a4:	7f 91       	pop	r23
     5a6:	6f 91       	pop	r22
     5a8:	5f 91       	pop	r21
     5aa:	4f 91       	pop	r20
     5ac:	3f 91       	pop	r19
     5ae:	2f 91       	pop	r18
     5b0:	0f 90       	pop	r0
     5b2:	0f be       	out	0x3f, r0	; 63
     5b4:	0f 90       	pop	r0
     5b6:	1f 90       	pop	r1
     5b8:	18 95       	reti

000005ba <__vector_17>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER1_COMPA_vect){
     5ba:	1f 92       	push	r1
     5bc:	0f 92       	push	r0
     5be:	0f b6       	in	r0, 0x3f	; 63
     5c0:	0f 92       	push	r0
     5c2:	11 24       	eor	r1, r1
     5c4:	2f 93       	push	r18
     5c6:	3f 93       	push	r19
     5c8:	4f 93       	push	r20
     5ca:	5f 93       	push	r21
     5cc:	6f 93       	push	r22
     5ce:	7f 93       	push	r23
     5d0:	8f 93       	push	r24
     5d2:	9f 93       	push	r25
     5d4:	af 93       	push	r26
     5d6:	bf 93       	push	r27
     5d8:	ef 93       	push	r30
     5da:	ff 93       	push	r31
     5dc:	df 93       	push	r29
     5de:	cf 93       	push	r28
     5e0:	cd b7       	in	r28, 0x3d	; 61
     5e2:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER1_COMPAREA);
     5e4:	8a e5       	ldi	r24, 0x5A	; 90
     5e6:	91 e0       	ldi	r25, 0x01	; 1
     5e8:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     5ec:	cf 91       	pop	r28
     5ee:	df 91       	pop	r29
     5f0:	ff 91       	pop	r31
     5f2:	ef 91       	pop	r30
     5f4:	bf 91       	pop	r27
     5f6:	af 91       	pop	r26
     5f8:	9f 91       	pop	r25
     5fa:	8f 91       	pop	r24
     5fc:	7f 91       	pop	r23
     5fe:	6f 91       	pop	r22
     600:	5f 91       	pop	r21
     602:	4f 91       	pop	r20
     604:	3f 91       	pop	r19
     606:	2f 91       	pop	r18
     608:	0f 90       	pop	r0
     60a:	0f be       	out	0x3f, r0	; 63
     60c:	0f 90       	pop	r0
     60e:	1f 90       	pop	r1
     610:	18 95       	reti

00000612 <__vector_18>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER1_COMPB_vect){
     612:	1f 92       	push	r1
     614:	0f 92       	push	r0
     616:	0f b6       	in	r0, 0x3f	; 63
     618:	0f 92       	push	r0
     61a:	11 24       	eor	r1, r1
     61c:	2f 93       	push	r18
     61e:	3f 93       	push	r19
     620:	4f 93       	push	r20
     622:	5f 93       	push	r21
     624:	6f 93       	push	r22
     626:	7f 93       	push	r23
     628:	8f 93       	push	r24
     62a:	9f 93       	push	r25
     62c:	af 93       	push	r26
     62e:	bf 93       	push	r27
     630:	ef 93       	push	r30
     632:	ff 93       	push	r31
     634:	df 93       	push	r29
     636:	cf 93       	push	r28
     638:	cd b7       	in	r28, 0x3d	; 61
     63a:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER1_COMPAREB);
     63c:	8a e6       	ldi	r24, 0x6A	; 106
     63e:	91 e0       	ldi	r25, 0x01	; 1
     640:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     644:	cf 91       	pop	r28
     646:	df 91       	pop	r29
     648:	ff 91       	pop	r31
     64a:	ef 91       	pop	r30
     64c:	bf 91       	pop	r27
     64e:	af 91       	pop	r26
     650:	9f 91       	pop	r25
     652:	8f 91       	pop	r24
     654:	7f 91       	pop	r23
     656:	6f 91       	pop	r22
     658:	5f 91       	pop	r21
     65a:	4f 91       	pop	r20
     65c:	3f 91       	pop	r19
     65e:	2f 91       	pop	r18
     660:	0f 90       	pop	r0
     662:	0f be       	out	0x3f, r0	; 63
     664:	0f 90       	pop	r0
     666:	1f 90       	pop	r1
     668:	18 95       	reti

0000066a <__vector_19>:
#else
# error Missing vector definition
#endif

#ifdef TIMER1_COMPC_vect
TIMER_INTERRUPT_HANDLER(TIMER1_COMPC_vect){
     66a:	1f 92       	push	r1
     66c:	0f 92       	push	r0
     66e:	0f b6       	in	r0, 0x3f	; 63
     670:	0f 92       	push	r0
     672:	11 24       	eor	r1, r1
     674:	2f 93       	push	r18
     676:	3f 93       	push	r19
     678:	4f 93       	push	r20
     67a:	5f 93       	push	r21
     67c:	6f 93       	push	r22
     67e:	7f 93       	push	r23
     680:	8f 93       	push	r24
     682:	9f 93       	push	r25
     684:	af 93       	push	r26
     686:	bf 93       	push	r27
     688:	ef 93       	push	r30
     68a:	ff 93       	push	r31
     68c:	df 93       	push	r29
     68e:	cf 93       	push	r28
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER1_COMPAREC);
     694:	8a e7       	ldi	r24, 0x7A	; 122
     696:	91 e0       	ldi	r25, 0x01	; 1
     698:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     69c:	cf 91       	pop	r28
     69e:	df 91       	pop	r29
     6a0:	ff 91       	pop	r31
     6a2:	ef 91       	pop	r30
     6a4:	bf 91       	pop	r27
     6a6:	af 91       	pop	r26
     6a8:	9f 91       	pop	r25
     6aa:	8f 91       	pop	r24
     6ac:	7f 91       	pop	r23
     6ae:	6f 91       	pop	r22
     6b0:	5f 91       	pop	r21
     6b2:	4f 91       	pop	r20
     6b4:	3f 91       	pop	r19
     6b6:	2f 91       	pop	r18
     6b8:	0f 90       	pop	r0
     6ba:	0f be       	out	0x3f, r0	; 63
     6bc:	0f 90       	pop	r0
     6be:	1f 90       	pop	r1
     6c0:	18 95       	reti

000006c2 <__vector_15>:
#else
# error Missing vector definition
#endif

#ifdef TIMER2_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER2_OVF_vect){
     6c2:	1f 92       	push	r1
     6c4:	0f 92       	push	r0
     6c6:	0f b6       	in	r0, 0x3f	; 63
     6c8:	0f 92       	push	r0
     6ca:	11 24       	eor	r1, r1
     6cc:	2f 93       	push	r18
     6ce:	3f 93       	push	r19
     6d0:	4f 93       	push	r20
     6d2:	5f 93       	push	r21
     6d4:	6f 93       	push	r22
     6d6:	7f 93       	push	r23
     6d8:	8f 93       	push	r24
     6da:	9f 93       	push	r25
     6dc:	af 93       	push	r26
     6de:	bf 93       	push	r27
     6e0:	ef 93       	push	r30
     6e2:	ff 93       	push	r31
     6e4:	df 93       	push	r29
     6e6:	cf 93       	push	r28
     6e8:	cd b7       	in	r28, 0x3d	; 61
     6ea:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER2);
     6ec:	82 e9       	ldi	r24, 0x92	; 146
     6ee:	92 e0       	ldi	r25, 0x02	; 2
     6f0:	0e 94 56 11 	call	0x22ac	; 0x22ac <__timer_overflowService>
}
     6f4:	cf 91       	pop	r28
     6f6:	df 91       	pop	r29
     6f8:	ff 91       	pop	r31
     6fa:	ef 91       	pop	r30
     6fc:	bf 91       	pop	r27
     6fe:	af 91       	pop	r26
     700:	9f 91       	pop	r25
     702:	8f 91       	pop	r24
     704:	7f 91       	pop	r23
     706:	6f 91       	pop	r22
     708:	5f 91       	pop	r21
     70a:	4f 91       	pop	r20
     70c:	3f 91       	pop	r19
     70e:	2f 91       	pop	r18
     710:	0f 90       	pop	r0
     712:	0f be       	out	0x3f, r0	; 63
     714:	0f 90       	pop	r0
     716:	1f 90       	pop	r1
     718:	18 95       	reti

0000071a <__vector_13>:
#else
# error Missing vector definition
#endif

#ifdef TIMER2_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER2_COMPA_vect){
     71a:	1f 92       	push	r1
     71c:	0f 92       	push	r0
     71e:	0f b6       	in	r0, 0x3f	; 63
     720:	0f 92       	push	r0
     722:	11 24       	eor	r1, r1
     724:	2f 93       	push	r18
     726:	3f 93       	push	r19
     728:	4f 93       	push	r20
     72a:	5f 93       	push	r21
     72c:	6f 93       	push	r22
     72e:	7f 93       	push	r23
     730:	8f 93       	push	r24
     732:	9f 93       	push	r25
     734:	af 93       	push	r26
     736:	bf 93       	push	r27
     738:	ef 93       	push	r30
     73a:	ff 93       	push	r31
     73c:	df 93       	push	r29
     73e:	cf 93       	push	r28
     740:	cd b7       	in	r28, 0x3d	; 61
     742:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER2_COMPAREA);
     744:	8a e8       	ldi	r24, 0x8A	; 138
     746:	91 e0       	ldi	r25, 0x01	; 1
     748:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     74c:	cf 91       	pop	r28
     74e:	df 91       	pop	r29
     750:	ff 91       	pop	r31
     752:	ef 91       	pop	r30
     754:	bf 91       	pop	r27
     756:	af 91       	pop	r26
     758:	9f 91       	pop	r25
     75a:	8f 91       	pop	r24
     75c:	7f 91       	pop	r23
     75e:	6f 91       	pop	r22
     760:	5f 91       	pop	r21
     762:	4f 91       	pop	r20
     764:	3f 91       	pop	r19
     766:	2f 91       	pop	r18
     768:	0f 90       	pop	r0
     76a:	0f be       	out	0x3f, r0	; 63
     76c:	0f 90       	pop	r0
     76e:	1f 90       	pop	r1
     770:	18 95       	reti

00000772 <__vector_14>:
#else
# error Missing vector definition
#endif

#ifdef TIMER2_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER2_COMPB_vect){
     772:	1f 92       	push	r1
     774:	0f 92       	push	r0
     776:	0f b6       	in	r0, 0x3f	; 63
     778:	0f 92       	push	r0
     77a:	11 24       	eor	r1, r1
     77c:	2f 93       	push	r18
     77e:	3f 93       	push	r19
     780:	4f 93       	push	r20
     782:	5f 93       	push	r21
     784:	6f 93       	push	r22
     786:	7f 93       	push	r23
     788:	8f 93       	push	r24
     78a:	9f 93       	push	r25
     78c:	af 93       	push	r26
     78e:	bf 93       	push	r27
     790:	ef 93       	push	r30
     792:	ff 93       	push	r31
     794:	df 93       	push	r29
     796:	cf 93       	push	r28
     798:	cd b7       	in	r28, 0x3d	; 61
     79a:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER2_COMPAREB);
     79c:	8a e9       	ldi	r24, 0x9A	; 154
     79e:	91 e0       	ldi	r25, 0x01	; 1
     7a0:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     7a4:	cf 91       	pop	r28
     7a6:	df 91       	pop	r29
     7a8:	ff 91       	pop	r31
     7aa:	ef 91       	pop	r30
     7ac:	bf 91       	pop	r27
     7ae:	af 91       	pop	r26
     7b0:	9f 91       	pop	r25
     7b2:	8f 91       	pop	r24
     7b4:	7f 91       	pop	r23
     7b6:	6f 91       	pop	r22
     7b8:	5f 91       	pop	r21
     7ba:	4f 91       	pop	r20
     7bc:	3f 91       	pop	r19
     7be:	2f 91       	pop	r18
     7c0:	0f 90       	pop	r0
     7c2:	0f be       	out	0x3f, r0	; 63
     7c4:	0f 90       	pop	r0
     7c6:	1f 90       	pop	r1
     7c8:	18 95       	reti

000007ca <__vector_35>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER3_OVF_vect){
     7ca:	1f 92       	push	r1
     7cc:	0f 92       	push	r0
     7ce:	0f b6       	in	r0, 0x3f	; 63
     7d0:	0f 92       	push	r0
     7d2:	11 24       	eor	r1, r1
     7d4:	2f 93       	push	r18
     7d6:	3f 93       	push	r19
     7d8:	4f 93       	push	r20
     7da:	5f 93       	push	r21
     7dc:	6f 93       	push	r22
     7de:	7f 93       	push	r23
     7e0:	8f 93       	push	r24
     7e2:	9f 93       	push	r25
     7e4:	af 93       	push	r26
     7e6:	bf 93       	push	r27
     7e8:	ef 93       	push	r30
     7ea:	ff 93       	push	r31
     7ec:	df 93       	push	r29
     7ee:	cf 93       	push	r28
     7f0:	cd b7       	in	r28, 0x3d	; 61
     7f2:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER3);
     7f4:	8e eb       	ldi	r24, 0xBE	; 190
     7f6:	92 e0       	ldi	r25, 0x02	; 2
     7f8:	0e 94 56 11 	call	0x22ac	; 0x22ac <__timer_overflowService>
}
     7fc:	cf 91       	pop	r28
     7fe:	df 91       	pop	r29
     800:	ff 91       	pop	r31
     802:	ef 91       	pop	r30
     804:	bf 91       	pop	r27
     806:	af 91       	pop	r26
     808:	9f 91       	pop	r25
     80a:	8f 91       	pop	r24
     80c:	7f 91       	pop	r23
     80e:	6f 91       	pop	r22
     810:	5f 91       	pop	r21
     812:	4f 91       	pop	r20
     814:	3f 91       	pop	r19
     816:	2f 91       	pop	r18
     818:	0f 90       	pop	r0
     81a:	0f be       	out	0x3f, r0	; 63
     81c:	0f 90       	pop	r0
     81e:	1f 90       	pop	r1
     820:	18 95       	reti

00000822 <__vector_31>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_CAPT_vect
TIMER_INTERRUPT_HANDLER(TIMER3_CAPT_vect){
     822:	1f 92       	push	r1
     824:	0f 92       	push	r0
     826:	0f b6       	in	r0, 0x3f	; 63
     828:	0f 92       	push	r0
     82a:	11 24       	eor	r1, r1
     82c:	2f 93       	push	r18
     82e:	3f 93       	push	r19
     830:	4f 93       	push	r20
     832:	5f 93       	push	r21
     834:	6f 93       	push	r22
     836:	7f 93       	push	r23
     838:	8f 93       	push	r24
     83a:	9f 93       	push	r25
     83c:	af 93       	push	r26
     83e:	bf 93       	push	r27
     840:	ef 93       	push	r30
     842:	ff 93       	push	r31
     844:	df 93       	push	r29
     846:	cf 93       	push	r28
     848:	cd b7       	in	r28, 0x3d	; 61
     84a:	de b7       	in	r29, 0x3e	; 62
	__timer_captureService(TIMER3);
     84c:	8e eb       	ldi	r24, 0xBE	; 190
     84e:	92 e0       	ldi	r25, 0x02	; 2
     850:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__timer_captureService>
}
     854:	cf 91       	pop	r28
     856:	df 91       	pop	r29
     858:	ff 91       	pop	r31
     85a:	ef 91       	pop	r30
     85c:	bf 91       	pop	r27
     85e:	af 91       	pop	r26
     860:	9f 91       	pop	r25
     862:	8f 91       	pop	r24
     864:	7f 91       	pop	r23
     866:	6f 91       	pop	r22
     868:	5f 91       	pop	r21
     86a:	4f 91       	pop	r20
     86c:	3f 91       	pop	r19
     86e:	2f 91       	pop	r18
     870:	0f 90       	pop	r0
     872:	0f be       	out	0x3f, r0	; 63
     874:	0f 90       	pop	r0
     876:	1f 90       	pop	r1
     878:	18 95       	reti

0000087a <__vector_32>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER3_COMPA_vect){
     87a:	1f 92       	push	r1
     87c:	0f 92       	push	r0
     87e:	0f b6       	in	r0, 0x3f	; 63
     880:	0f 92       	push	r0
     882:	11 24       	eor	r1, r1
     884:	2f 93       	push	r18
     886:	3f 93       	push	r19
     888:	4f 93       	push	r20
     88a:	5f 93       	push	r21
     88c:	6f 93       	push	r22
     88e:	7f 93       	push	r23
     890:	8f 93       	push	r24
     892:	9f 93       	push	r25
     894:	af 93       	push	r26
     896:	bf 93       	push	r27
     898:	ef 93       	push	r30
     89a:	ff 93       	push	r31
     89c:	df 93       	push	r29
     89e:	cf 93       	push	r28
     8a0:	cd b7       	in	r28, 0x3d	; 61
     8a2:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER3_COMPAREA);
     8a4:	8a ea       	ldi	r24, 0xAA	; 170
     8a6:	91 e0       	ldi	r25, 0x01	; 1
     8a8:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     8ac:	cf 91       	pop	r28
     8ae:	df 91       	pop	r29
     8b0:	ff 91       	pop	r31
     8b2:	ef 91       	pop	r30
     8b4:	bf 91       	pop	r27
     8b6:	af 91       	pop	r26
     8b8:	9f 91       	pop	r25
     8ba:	8f 91       	pop	r24
     8bc:	7f 91       	pop	r23
     8be:	6f 91       	pop	r22
     8c0:	5f 91       	pop	r21
     8c2:	4f 91       	pop	r20
     8c4:	3f 91       	pop	r19
     8c6:	2f 91       	pop	r18
     8c8:	0f 90       	pop	r0
     8ca:	0f be       	out	0x3f, r0	; 63
     8cc:	0f 90       	pop	r0
     8ce:	1f 90       	pop	r1
     8d0:	18 95       	reti

000008d2 <__vector_33>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER3_COMPB_vect){
     8d2:	1f 92       	push	r1
     8d4:	0f 92       	push	r0
     8d6:	0f b6       	in	r0, 0x3f	; 63
     8d8:	0f 92       	push	r0
     8da:	11 24       	eor	r1, r1
     8dc:	2f 93       	push	r18
     8de:	3f 93       	push	r19
     8e0:	4f 93       	push	r20
     8e2:	5f 93       	push	r21
     8e4:	6f 93       	push	r22
     8e6:	7f 93       	push	r23
     8e8:	8f 93       	push	r24
     8ea:	9f 93       	push	r25
     8ec:	af 93       	push	r26
     8ee:	bf 93       	push	r27
     8f0:	ef 93       	push	r30
     8f2:	ff 93       	push	r31
     8f4:	df 93       	push	r29
     8f6:	cf 93       	push	r28
     8f8:	cd b7       	in	r28, 0x3d	; 61
     8fa:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER3_COMPAREB);
     8fc:	8a eb       	ldi	r24, 0xBA	; 186
     8fe:	91 e0       	ldi	r25, 0x01	; 1
     900:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     904:	cf 91       	pop	r28
     906:	df 91       	pop	r29
     908:	ff 91       	pop	r31
     90a:	ef 91       	pop	r30
     90c:	bf 91       	pop	r27
     90e:	af 91       	pop	r26
     910:	9f 91       	pop	r25
     912:	8f 91       	pop	r24
     914:	7f 91       	pop	r23
     916:	6f 91       	pop	r22
     918:	5f 91       	pop	r21
     91a:	4f 91       	pop	r20
     91c:	3f 91       	pop	r19
     91e:	2f 91       	pop	r18
     920:	0f 90       	pop	r0
     922:	0f be       	out	0x3f, r0	; 63
     924:	0f 90       	pop	r0
     926:	1f 90       	pop	r1
     928:	18 95       	reti

0000092a <__vector_34>:
#else
# error Missing vector definition
#endif

#ifdef TIMER3_COMPC_vect
TIMER_INTERRUPT_HANDLER(TIMER3_COMPC_vect){
     92a:	1f 92       	push	r1
     92c:	0f 92       	push	r0
     92e:	0f b6       	in	r0, 0x3f	; 63
     930:	0f 92       	push	r0
     932:	11 24       	eor	r1, r1
     934:	2f 93       	push	r18
     936:	3f 93       	push	r19
     938:	4f 93       	push	r20
     93a:	5f 93       	push	r21
     93c:	6f 93       	push	r22
     93e:	7f 93       	push	r23
     940:	8f 93       	push	r24
     942:	9f 93       	push	r25
     944:	af 93       	push	r26
     946:	bf 93       	push	r27
     948:	ef 93       	push	r30
     94a:	ff 93       	push	r31
     94c:	df 93       	push	r29
     94e:	cf 93       	push	r28
     950:	cd b7       	in	r28, 0x3d	; 61
     952:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER3_COMPAREC);
     954:	8a ec       	ldi	r24, 0xCA	; 202
     956:	91 e0       	ldi	r25, 0x01	; 1
     958:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     95c:	cf 91       	pop	r28
     95e:	df 91       	pop	r29
     960:	ff 91       	pop	r31
     962:	ef 91       	pop	r30
     964:	bf 91       	pop	r27
     966:	af 91       	pop	r26
     968:	9f 91       	pop	r25
     96a:	8f 91       	pop	r24
     96c:	7f 91       	pop	r23
     96e:	6f 91       	pop	r22
     970:	5f 91       	pop	r21
     972:	4f 91       	pop	r20
     974:	3f 91       	pop	r19
     976:	2f 91       	pop	r18
     978:	0f 90       	pop	r0
     97a:	0f be       	out	0x3f, r0	; 63
     97c:	0f 90       	pop	r0
     97e:	1f 90       	pop	r1
     980:	18 95       	reti

00000982 <__vector_45>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER4_OVF_vect){
     982:	1f 92       	push	r1
     984:	0f 92       	push	r0
     986:	0f b6       	in	r0, 0x3f	; 63
     988:	0f 92       	push	r0
     98a:	11 24       	eor	r1, r1
     98c:	2f 93       	push	r18
     98e:	3f 93       	push	r19
     990:	4f 93       	push	r20
     992:	5f 93       	push	r21
     994:	6f 93       	push	r22
     996:	7f 93       	push	r23
     998:	8f 93       	push	r24
     99a:	9f 93       	push	r25
     99c:	af 93       	push	r26
     99e:	bf 93       	push	r27
     9a0:	ef 93       	push	r30
     9a2:	ff 93       	push	r31
     9a4:	df 93       	push	r29
     9a6:	cf 93       	push	r28
     9a8:	cd b7       	in	r28, 0x3d	; 61
     9aa:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER4);
     9ac:	8a ee       	ldi	r24, 0xEA	; 234
     9ae:	92 e0       	ldi	r25, 0x02	; 2
     9b0:	0e 94 56 11 	call	0x22ac	; 0x22ac <__timer_overflowService>
}
     9b4:	cf 91       	pop	r28
     9b6:	df 91       	pop	r29
     9b8:	ff 91       	pop	r31
     9ba:	ef 91       	pop	r30
     9bc:	bf 91       	pop	r27
     9be:	af 91       	pop	r26
     9c0:	9f 91       	pop	r25
     9c2:	8f 91       	pop	r24
     9c4:	7f 91       	pop	r23
     9c6:	6f 91       	pop	r22
     9c8:	5f 91       	pop	r21
     9ca:	4f 91       	pop	r20
     9cc:	3f 91       	pop	r19
     9ce:	2f 91       	pop	r18
     9d0:	0f 90       	pop	r0
     9d2:	0f be       	out	0x3f, r0	; 63
     9d4:	0f 90       	pop	r0
     9d6:	1f 90       	pop	r1
     9d8:	18 95       	reti

000009da <__vector_41>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_CAPT_vect
TIMER_INTERRUPT_HANDLER(TIMER4_CAPT_vect){
     9da:	1f 92       	push	r1
     9dc:	0f 92       	push	r0
     9de:	0f b6       	in	r0, 0x3f	; 63
     9e0:	0f 92       	push	r0
     9e2:	11 24       	eor	r1, r1
     9e4:	2f 93       	push	r18
     9e6:	3f 93       	push	r19
     9e8:	4f 93       	push	r20
     9ea:	5f 93       	push	r21
     9ec:	6f 93       	push	r22
     9ee:	7f 93       	push	r23
     9f0:	8f 93       	push	r24
     9f2:	9f 93       	push	r25
     9f4:	af 93       	push	r26
     9f6:	bf 93       	push	r27
     9f8:	ef 93       	push	r30
     9fa:	ff 93       	push	r31
     9fc:	df 93       	push	r29
     9fe:	cf 93       	push	r28
     a00:	cd b7       	in	r28, 0x3d	; 61
     a02:	de b7       	in	r29, 0x3e	; 62
	__timer_captureService(TIMER4);
     a04:	8a ee       	ldi	r24, 0xEA	; 234
     a06:	92 e0       	ldi	r25, 0x02	; 2
     a08:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__timer_captureService>
}
     a0c:	cf 91       	pop	r28
     a0e:	df 91       	pop	r29
     a10:	ff 91       	pop	r31
     a12:	ef 91       	pop	r30
     a14:	bf 91       	pop	r27
     a16:	af 91       	pop	r26
     a18:	9f 91       	pop	r25
     a1a:	8f 91       	pop	r24
     a1c:	7f 91       	pop	r23
     a1e:	6f 91       	pop	r22
     a20:	5f 91       	pop	r21
     a22:	4f 91       	pop	r20
     a24:	3f 91       	pop	r19
     a26:	2f 91       	pop	r18
     a28:	0f 90       	pop	r0
     a2a:	0f be       	out	0x3f, r0	; 63
     a2c:	0f 90       	pop	r0
     a2e:	1f 90       	pop	r1
     a30:	18 95       	reti

00000a32 <__vector_42>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER4_COMPA_vect){
     a32:	1f 92       	push	r1
     a34:	0f 92       	push	r0
     a36:	0f b6       	in	r0, 0x3f	; 63
     a38:	0f 92       	push	r0
     a3a:	11 24       	eor	r1, r1
     a3c:	2f 93       	push	r18
     a3e:	3f 93       	push	r19
     a40:	4f 93       	push	r20
     a42:	5f 93       	push	r21
     a44:	6f 93       	push	r22
     a46:	7f 93       	push	r23
     a48:	8f 93       	push	r24
     a4a:	9f 93       	push	r25
     a4c:	af 93       	push	r26
     a4e:	bf 93       	push	r27
     a50:	ef 93       	push	r30
     a52:	ff 93       	push	r31
     a54:	df 93       	push	r29
     a56:	cf 93       	push	r28
     a58:	cd b7       	in	r28, 0x3d	; 61
     a5a:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER4_COMPAREA);
     a5c:	8a ed       	ldi	r24, 0xDA	; 218
     a5e:	91 e0       	ldi	r25, 0x01	; 1
     a60:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     a64:	cf 91       	pop	r28
     a66:	df 91       	pop	r29
     a68:	ff 91       	pop	r31
     a6a:	ef 91       	pop	r30
     a6c:	bf 91       	pop	r27
     a6e:	af 91       	pop	r26
     a70:	9f 91       	pop	r25
     a72:	8f 91       	pop	r24
     a74:	7f 91       	pop	r23
     a76:	6f 91       	pop	r22
     a78:	5f 91       	pop	r21
     a7a:	4f 91       	pop	r20
     a7c:	3f 91       	pop	r19
     a7e:	2f 91       	pop	r18
     a80:	0f 90       	pop	r0
     a82:	0f be       	out	0x3f, r0	; 63
     a84:	0f 90       	pop	r0
     a86:	1f 90       	pop	r1
     a88:	18 95       	reti

00000a8a <__vector_43>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER4_COMPB_vect){
     a8a:	1f 92       	push	r1
     a8c:	0f 92       	push	r0
     a8e:	0f b6       	in	r0, 0x3f	; 63
     a90:	0f 92       	push	r0
     a92:	11 24       	eor	r1, r1
     a94:	2f 93       	push	r18
     a96:	3f 93       	push	r19
     a98:	4f 93       	push	r20
     a9a:	5f 93       	push	r21
     a9c:	6f 93       	push	r22
     a9e:	7f 93       	push	r23
     aa0:	8f 93       	push	r24
     aa2:	9f 93       	push	r25
     aa4:	af 93       	push	r26
     aa6:	bf 93       	push	r27
     aa8:	ef 93       	push	r30
     aaa:	ff 93       	push	r31
     aac:	df 93       	push	r29
     aae:	cf 93       	push	r28
     ab0:	cd b7       	in	r28, 0x3d	; 61
     ab2:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER4_COMPAREB);
     ab4:	8a ee       	ldi	r24, 0xEA	; 234
     ab6:	91 e0       	ldi	r25, 0x01	; 1
     ab8:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     abc:	cf 91       	pop	r28
     abe:	df 91       	pop	r29
     ac0:	ff 91       	pop	r31
     ac2:	ef 91       	pop	r30
     ac4:	bf 91       	pop	r27
     ac6:	af 91       	pop	r26
     ac8:	9f 91       	pop	r25
     aca:	8f 91       	pop	r24
     acc:	7f 91       	pop	r23
     ace:	6f 91       	pop	r22
     ad0:	5f 91       	pop	r21
     ad2:	4f 91       	pop	r20
     ad4:	3f 91       	pop	r19
     ad6:	2f 91       	pop	r18
     ad8:	0f 90       	pop	r0
     ada:	0f be       	out	0x3f, r0	; 63
     adc:	0f 90       	pop	r0
     ade:	1f 90       	pop	r1
     ae0:	18 95       	reti

00000ae2 <__vector_44>:
#else
# error Missing vector definition
#endif

#ifdef TIMER4_COMPC_vect
TIMER_INTERRUPT_HANDLER(TIMER4_COMPC_vect){
     ae2:	1f 92       	push	r1
     ae4:	0f 92       	push	r0
     ae6:	0f b6       	in	r0, 0x3f	; 63
     ae8:	0f 92       	push	r0
     aea:	11 24       	eor	r1, r1
     aec:	2f 93       	push	r18
     aee:	3f 93       	push	r19
     af0:	4f 93       	push	r20
     af2:	5f 93       	push	r21
     af4:	6f 93       	push	r22
     af6:	7f 93       	push	r23
     af8:	8f 93       	push	r24
     afa:	9f 93       	push	r25
     afc:	af 93       	push	r26
     afe:	bf 93       	push	r27
     b00:	ef 93       	push	r30
     b02:	ff 93       	push	r31
     b04:	df 93       	push	r29
     b06:	cf 93       	push	r28
     b08:	cd b7       	in	r28, 0x3d	; 61
     b0a:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER4_COMPAREC);
     b0c:	8a ef       	ldi	r24, 0xFA	; 250
     b0e:	91 e0       	ldi	r25, 0x01	; 1
     b10:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     b14:	cf 91       	pop	r28
     b16:	df 91       	pop	r29
     b18:	ff 91       	pop	r31
     b1a:	ef 91       	pop	r30
     b1c:	bf 91       	pop	r27
     b1e:	af 91       	pop	r26
     b20:	9f 91       	pop	r25
     b22:	8f 91       	pop	r24
     b24:	7f 91       	pop	r23
     b26:	6f 91       	pop	r22
     b28:	5f 91       	pop	r21
     b2a:	4f 91       	pop	r20
     b2c:	3f 91       	pop	r19
     b2e:	2f 91       	pop	r18
     b30:	0f 90       	pop	r0
     b32:	0f be       	out	0x3f, r0	; 63
     b34:	0f 90       	pop	r0
     b36:	1f 90       	pop	r1
     b38:	18 95       	reti

00000b3a <__vector_50>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_OVF_vect
TIMER_INTERRUPT_HANDLER(TIMER5_OVF_vect){
     b3a:	1f 92       	push	r1
     b3c:	0f 92       	push	r0
     b3e:	0f b6       	in	r0, 0x3f	; 63
     b40:	0f 92       	push	r0
     b42:	11 24       	eor	r1, r1
     b44:	2f 93       	push	r18
     b46:	3f 93       	push	r19
     b48:	4f 93       	push	r20
     b4a:	5f 93       	push	r21
     b4c:	6f 93       	push	r22
     b4e:	7f 93       	push	r23
     b50:	8f 93       	push	r24
     b52:	9f 93       	push	r25
     b54:	af 93       	push	r26
     b56:	bf 93       	push	r27
     b58:	ef 93       	push	r30
     b5a:	ff 93       	push	r31
     b5c:	df 93       	push	r29
     b5e:	cf 93       	push	r28
     b60:	cd b7       	in	r28, 0x3d	; 61
     b62:	de b7       	in	r29, 0x3e	; 62
	__timer_overflowService(TIMER5);
     b64:	86 e1       	ldi	r24, 0x16	; 22
     b66:	93 e0       	ldi	r25, 0x03	; 3
     b68:	0e 94 56 11 	call	0x22ac	; 0x22ac <__timer_overflowService>
}
     b6c:	cf 91       	pop	r28
     b6e:	df 91       	pop	r29
     b70:	ff 91       	pop	r31
     b72:	ef 91       	pop	r30
     b74:	bf 91       	pop	r27
     b76:	af 91       	pop	r26
     b78:	9f 91       	pop	r25
     b7a:	8f 91       	pop	r24
     b7c:	7f 91       	pop	r23
     b7e:	6f 91       	pop	r22
     b80:	5f 91       	pop	r21
     b82:	4f 91       	pop	r20
     b84:	3f 91       	pop	r19
     b86:	2f 91       	pop	r18
     b88:	0f 90       	pop	r0
     b8a:	0f be       	out	0x3f, r0	; 63
     b8c:	0f 90       	pop	r0
     b8e:	1f 90       	pop	r1
     b90:	18 95       	reti

00000b92 <__vector_46>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_CAPT_vect
TIMER_INTERRUPT_HANDLER(TIMER5_CAPT_vect){
     b92:	1f 92       	push	r1
     b94:	0f 92       	push	r0
     b96:	0f b6       	in	r0, 0x3f	; 63
     b98:	0f 92       	push	r0
     b9a:	11 24       	eor	r1, r1
     b9c:	2f 93       	push	r18
     b9e:	3f 93       	push	r19
     ba0:	4f 93       	push	r20
     ba2:	5f 93       	push	r21
     ba4:	6f 93       	push	r22
     ba6:	7f 93       	push	r23
     ba8:	8f 93       	push	r24
     baa:	9f 93       	push	r25
     bac:	af 93       	push	r26
     bae:	bf 93       	push	r27
     bb0:	ef 93       	push	r30
     bb2:	ff 93       	push	r31
     bb4:	df 93       	push	r29
     bb6:	cf 93       	push	r28
     bb8:	cd b7       	in	r28, 0x3d	; 61
     bba:	de b7       	in	r29, 0x3e	; 62
	__timer_captureService(TIMER5);
     bbc:	86 e1       	ldi	r24, 0x16	; 22
     bbe:	93 e0       	ldi	r25, 0x03	; 3
     bc0:	0e 94 74 11 	call	0x22e8	; 0x22e8 <__timer_captureService>
}
     bc4:	cf 91       	pop	r28
     bc6:	df 91       	pop	r29
     bc8:	ff 91       	pop	r31
     bca:	ef 91       	pop	r30
     bcc:	bf 91       	pop	r27
     bce:	af 91       	pop	r26
     bd0:	9f 91       	pop	r25
     bd2:	8f 91       	pop	r24
     bd4:	7f 91       	pop	r23
     bd6:	6f 91       	pop	r22
     bd8:	5f 91       	pop	r21
     bda:	4f 91       	pop	r20
     bdc:	3f 91       	pop	r19
     bde:	2f 91       	pop	r18
     be0:	0f 90       	pop	r0
     be2:	0f be       	out	0x3f, r0	; 63
     be4:	0f 90       	pop	r0
     be6:	1f 90       	pop	r1
     be8:	18 95       	reti

00000bea <__vector_47>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_COMPA_vect
TIMER_INTERRUPT_HANDLER(TIMER5_COMPA_vect){
     bea:	1f 92       	push	r1
     bec:	0f 92       	push	r0
     bee:	0f b6       	in	r0, 0x3f	; 63
     bf0:	0f 92       	push	r0
     bf2:	11 24       	eor	r1, r1
     bf4:	2f 93       	push	r18
     bf6:	3f 93       	push	r19
     bf8:	4f 93       	push	r20
     bfa:	5f 93       	push	r21
     bfc:	6f 93       	push	r22
     bfe:	7f 93       	push	r23
     c00:	8f 93       	push	r24
     c02:	9f 93       	push	r25
     c04:	af 93       	push	r26
     c06:	bf 93       	push	r27
     c08:	ef 93       	push	r30
     c0a:	ff 93       	push	r31
     c0c:	df 93       	push	r29
     c0e:	cf 93       	push	r28
     c10:	cd b7       	in	r28, 0x3d	; 61
     c12:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER5_COMPAREA);
     c14:	8a e0       	ldi	r24, 0x0A	; 10
     c16:	92 e0       	ldi	r25, 0x02	; 2
     c18:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     c1c:	cf 91       	pop	r28
     c1e:	df 91       	pop	r29
     c20:	ff 91       	pop	r31
     c22:	ef 91       	pop	r30
     c24:	bf 91       	pop	r27
     c26:	af 91       	pop	r26
     c28:	9f 91       	pop	r25
     c2a:	8f 91       	pop	r24
     c2c:	7f 91       	pop	r23
     c2e:	6f 91       	pop	r22
     c30:	5f 91       	pop	r21
     c32:	4f 91       	pop	r20
     c34:	3f 91       	pop	r19
     c36:	2f 91       	pop	r18
     c38:	0f 90       	pop	r0
     c3a:	0f be       	out	0x3f, r0	; 63
     c3c:	0f 90       	pop	r0
     c3e:	1f 90       	pop	r1
     c40:	18 95       	reti

00000c42 <__vector_48>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_COMPB_vect
TIMER_INTERRUPT_HANDLER(TIMER5_COMPB_vect){
     c42:	1f 92       	push	r1
     c44:	0f 92       	push	r0
     c46:	0f b6       	in	r0, 0x3f	; 63
     c48:	0f 92       	push	r0
     c4a:	11 24       	eor	r1, r1
     c4c:	2f 93       	push	r18
     c4e:	3f 93       	push	r19
     c50:	4f 93       	push	r20
     c52:	5f 93       	push	r21
     c54:	6f 93       	push	r22
     c56:	7f 93       	push	r23
     c58:	8f 93       	push	r24
     c5a:	9f 93       	push	r25
     c5c:	af 93       	push	r26
     c5e:	bf 93       	push	r27
     c60:	ef 93       	push	r30
     c62:	ff 93       	push	r31
     c64:	df 93       	push	r29
     c66:	cf 93       	push	r28
     c68:	cd b7       	in	r28, 0x3d	; 61
     c6a:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER5_COMPAREB);
     c6c:	8a e1       	ldi	r24, 0x1A	; 26
     c6e:	92 e0       	ldi	r25, 0x02	; 2
     c70:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     c74:	cf 91       	pop	r28
     c76:	df 91       	pop	r29
     c78:	ff 91       	pop	r31
     c7a:	ef 91       	pop	r30
     c7c:	bf 91       	pop	r27
     c7e:	af 91       	pop	r26
     c80:	9f 91       	pop	r25
     c82:	8f 91       	pop	r24
     c84:	7f 91       	pop	r23
     c86:	6f 91       	pop	r22
     c88:	5f 91       	pop	r21
     c8a:	4f 91       	pop	r20
     c8c:	3f 91       	pop	r19
     c8e:	2f 91       	pop	r18
     c90:	0f 90       	pop	r0
     c92:	0f be       	out	0x3f, r0	; 63
     c94:	0f 90       	pop	r0
     c96:	1f 90       	pop	r1
     c98:	18 95       	reti

00000c9a <__vector_49>:
#else
# error Missing vector definition
#endif

#ifdef TIMER5_COMPC_vect
TIMER_INTERRUPT_HANDLER(TIMER5_COMPC_vect){
     c9a:	1f 92       	push	r1
     c9c:	0f 92       	push	r0
     c9e:	0f b6       	in	r0, 0x3f	; 63
     ca0:	0f 92       	push	r0
     ca2:	11 24       	eor	r1, r1
     ca4:	2f 93       	push	r18
     ca6:	3f 93       	push	r19
     ca8:	4f 93       	push	r20
     caa:	5f 93       	push	r21
     cac:	6f 93       	push	r22
     cae:	7f 93       	push	r23
     cb0:	8f 93       	push	r24
     cb2:	9f 93       	push	r25
     cb4:	af 93       	push	r26
     cb6:	bf 93       	push	r27
     cb8:	ef 93       	push	r30
     cba:	ff 93       	push	r31
     cbc:	df 93       	push	r29
     cbe:	cf 93       	push	r28
     cc0:	cd b7       	in	r28, 0x3d	; 61
     cc2:	de b7       	in	r29, 0x3e	; 62
	__timer_compareService(TIMER5_COMPAREC);
     cc4:	8a e2       	ldi	r24, 0x2A	; 42
     cc6:	92 e0       	ldi	r25, 0x02	; 2
     cc8:	0e 94 83 11 	call	0x2306	; 0x2306 <__timer_compareService>
}
     ccc:	cf 91       	pop	r28
     cce:	df 91       	pop	r29
     cd0:	ff 91       	pop	r31
     cd2:	ef 91       	pop	r30
     cd4:	bf 91       	pop	r27
     cd6:	af 91       	pop	r26
     cd8:	9f 91       	pop	r25
     cda:	8f 91       	pop	r24
     cdc:	7f 91       	pop	r23
     cde:	6f 91       	pop	r22
     ce0:	5f 91       	pop	r21
     ce2:	4f 91       	pop	r20
     ce4:	3f 91       	pop	r19
     ce6:	2f 91       	pop	r18
     ce8:	0f 90       	pop	r0
     cea:	0f be       	out	0x3f, r0	; 63
     cec:	0f 90       	pop	r0
     cee:	1f 90       	pop	r1
     cf0:	18 95       	reti

00000cf2 <uart1SendByte>:
// Create hardware UART uart1
HW_UART _uart1 = MAKE_UART_BUFFERED(null,null,UCSR1A,UCSR1B,UBRR1L,UBRR1H,UDR1,null,BV(U2X1),D2,D3,&uart1GetByte,&uart1SendByte);

// Create a routine to write bytes to uart1
// You can set rprintf to use it by calling rprintfInit(&uart1SendByte)
MAKE_WRITER(uart1SendByte){
     cf2:	df 93       	push	r29
     cf4:	cf 93       	push	r28
     cf6:	0f 92       	push	r0
     cf8:	cd b7       	in	r28, 0x3d	; 61
     cfa:	de b7       	in	r29, 0x3e	; 62
     cfc:	89 83       	std	Y+1, r24	; 0x01
	return uartSendByte(uart1,byte);
     cfe:	8b e0       	ldi	r24, 0x0B	; 11
     d00:	92 e0       	ldi	r25, 0x02	; 2
     d02:	69 81       	ldd	r22, Y+1	; 0x01
     d04:	0e 94 6d 09 	call	0x12da	; 0x12da <_uartSendByte>
}
     d08:	0f 90       	pop	r0
     d0a:	cf 91       	pop	r28
     d0c:	df 91       	pop	r29
     d0e:	08 95       	ret

00000d10 <uart1GetByte>:

// Create a routine to read a byte from uart1
// Returns -1 if there was no data
MAKE_READER( uart1GetByte){
     d10:	df 93       	push	r29
     d12:	cf 93       	push	r28
     d14:	cd b7       	in	r28, 0x3d	; 61
     d16:	de b7       	in	r29, 0x3e	; 62
	return uartGetByte(uart1);
     d18:	8b e0       	ldi	r24, 0x0B	; 11
     d1a:	92 e0       	ldi	r25, 0x02	; 2
     d1c:	0e 94 be 09 	call	0x137c	; 0x137c <__uartGetByte>
}
     d20:	cf 91       	pop	r28
     d22:	df 91       	pop	r29
     d24:	08 95       	ret

00000d26 <__vector_38>:

#ifndef USART1_TX_vect
# error Uart1 Tx complete vector undefined
#else
UART_INTERRUPT_HANDLER(USART1_TX_vect){
     d26:	1f 92       	push	r1
     d28:	0f 92       	push	r0
     d2a:	0f b6       	in	r0, 0x3f	; 63
     d2c:	0f 92       	push	r0
     d2e:	11 24       	eor	r1, r1
     d30:	2f 93       	push	r18
     d32:	3f 93       	push	r19
     d34:	4f 93       	push	r20
     d36:	5f 93       	push	r21
     d38:	6f 93       	push	r22
     d3a:	7f 93       	push	r23
     d3c:	8f 93       	push	r24
     d3e:	9f 93       	push	r25
     d40:	af 93       	push	r26
     d42:	bf 93       	push	r27
     d44:	ef 93       	push	r30
     d46:	ff 93       	push	r31
     d48:	df 93       	push	r29
     d4a:	cf 93       	push	r28
     d4c:	cd b7       	in	r28, 0x3d	; 61
     d4e:	de b7       	in	r29, 0x3e	; 62
	uartTransmitService(uart1);
     d50:	8b e0       	ldi	r24, 0x0B	; 11
     d52:	92 e0       	ldi	r25, 0x02	; 2
     d54:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__uartTransmitService>
}
     d58:	cf 91       	pop	r28
     d5a:	df 91       	pop	r29
     d5c:	ff 91       	pop	r31
     d5e:	ef 91       	pop	r30
     d60:	bf 91       	pop	r27
     d62:	af 91       	pop	r26
     d64:	9f 91       	pop	r25
     d66:	8f 91       	pop	r24
     d68:	7f 91       	pop	r23
     d6a:	6f 91       	pop	r22
     d6c:	5f 91       	pop	r21
     d6e:	4f 91       	pop	r20
     d70:	3f 91       	pop	r19
     d72:	2f 91       	pop	r18
     d74:	0f 90       	pop	r0
     d76:	0f be       	out	0x3f, r0	; 63
     d78:	0f 90       	pop	r0
     d7a:	1f 90       	pop	r1
     d7c:	18 95       	reti

00000d7e <__vector_36>:
#endif

#ifndef USART1_RX_vect
# error Uart1 Rx complete vector undefined
#else
UART_INTERRUPT_HANDLER(USART1_RX_vect){
     d7e:	1f 92       	push	r1
     d80:	0f 92       	push	r0
     d82:	0f b6       	in	r0, 0x3f	; 63
     d84:	0f 92       	push	r0
     d86:	11 24       	eor	r1, r1
     d88:	2f 93       	push	r18
     d8a:	3f 93       	push	r19
     d8c:	4f 93       	push	r20
     d8e:	5f 93       	push	r21
     d90:	6f 93       	push	r22
     d92:	7f 93       	push	r23
     d94:	8f 93       	push	r24
     d96:	9f 93       	push	r25
     d98:	af 93       	push	r26
     d9a:	bf 93       	push	r27
     d9c:	ef 93       	push	r30
     d9e:	ff 93       	push	r31
     da0:	df 93       	push	r29
     da2:	cf 93       	push	r28
     da4:	cd b7       	in	r28, 0x3d	; 61
     da6:	de b7       	in	r29, 0x3e	; 62
	uartReceiveService(uart1);
     da8:	80 91 2b 02 	lds	r24, 0x022B
     dac:	90 91 2c 02 	lds	r25, 0x022C
     db0:	fc 01       	movw	r30, r24
     db2:	20 81       	ld	r18, Z
     db4:	8b e0       	ldi	r24, 0x0B	; 11
     db6:	92 e0       	ldi	r25, 0x02	; 2
     db8:	62 2f       	mov	r22, r18
     dba:	0e 94 17 0a 	call	0x142e	; 0x142e <__uartReceiveService>
}
     dbe:	cf 91       	pop	r28
     dc0:	df 91       	pop	r29
     dc2:	ff 91       	pop	r31
     dc4:	ef 91       	pop	r30
     dc6:	bf 91       	pop	r27
     dc8:	af 91       	pop	r26
     dca:	9f 91       	pop	r25
     dcc:	8f 91       	pop	r24
     dce:	7f 91       	pop	r23
     dd0:	6f 91       	pop	r22
     dd2:	5f 91       	pop	r21
     dd4:	4f 91       	pop	r20
     dd6:	3f 91       	pop	r19
     dd8:	2f 91       	pop	r18
     dda:	0f 90       	pop	r0
     ddc:	0f be       	out	0x3f, r0	; 63
     dde:	0f 90       	pop	r0
     de0:	1f 90       	pop	r1
     de2:	18 95       	reti

00000de4 <lidarSendByte>:
// Create hardware UART lidar
HW_UART _lidar = MAKE_UART_BUFFERED(&rx_lidar_Buffer,null,UCSR2A,UCSR2B,UBRR2L,UBRR2H,UDR2,null,BV(U2X2),H0,H1,&lidarGetByte,&lidarSendByte);

// Create a routine to write bytes to lidar
// You can set rprintf to use it by calling rprintfInit(&lidarSendByte)
MAKE_WRITER(lidarSendByte){
     de4:	df 93       	push	r29
     de6:	cf 93       	push	r28
     de8:	0f 92       	push	r0
     dea:	cd b7       	in	r28, 0x3d	; 61
     dec:	de b7       	in	r29, 0x3e	; 62
     dee:	89 83       	std	Y+1, r24	; 0x01
	return uartSendByte(lidar,byte);
     df0:	88 e3       	ldi	r24, 0x38	; 56
     df2:	92 e0       	ldi	r25, 0x02	; 2
     df4:	69 81       	ldd	r22, Y+1	; 0x01
     df6:	0e 94 6d 09 	call	0x12da	; 0x12da <_uartSendByte>
}
     dfa:	0f 90       	pop	r0
     dfc:	cf 91       	pop	r28
     dfe:	df 91       	pop	r29
     e00:	08 95       	ret

00000e02 <lidarGetByte>:

// Create a routine to read a byte from lidar
// Returns -1 if there was no data
MAKE_READER( lidarGetByte){
     e02:	df 93       	push	r29
     e04:	cf 93       	push	r28
     e06:	cd b7       	in	r28, 0x3d	; 61
     e08:	de b7       	in	r29, 0x3e	; 62
	return uartGetByte(lidar);
     e0a:	88 e3       	ldi	r24, 0x38	; 56
     e0c:	92 e0       	ldi	r25, 0x02	; 2
     e0e:	0e 94 be 09 	call	0x137c	; 0x137c <__uartGetByte>
}
     e12:	cf 91       	pop	r28
     e14:	df 91       	pop	r29
     e16:	08 95       	ret

00000e18 <__vector_53>:

#ifndef USART2_TX_vect
# error Uart2 Tx complete vector undefined
#else
UART_INTERRUPT_HANDLER(USART2_TX_vect){
     e18:	1f 92       	push	r1
     e1a:	0f 92       	push	r0
     e1c:	0f b6       	in	r0, 0x3f	; 63
     e1e:	0f 92       	push	r0
     e20:	11 24       	eor	r1, r1
     e22:	2f 93       	push	r18
     e24:	3f 93       	push	r19
     e26:	4f 93       	push	r20
     e28:	5f 93       	push	r21
     e2a:	6f 93       	push	r22
     e2c:	7f 93       	push	r23
     e2e:	8f 93       	push	r24
     e30:	9f 93       	push	r25
     e32:	af 93       	push	r26
     e34:	bf 93       	push	r27
     e36:	ef 93       	push	r30
     e38:	ff 93       	push	r31
     e3a:	df 93       	push	r29
     e3c:	cf 93       	push	r28
     e3e:	cd b7       	in	r28, 0x3d	; 61
     e40:	de b7       	in	r29, 0x3e	; 62
	uartTransmitService(lidar);
     e42:	88 e3       	ldi	r24, 0x38	; 56
     e44:	92 e0       	ldi	r25, 0x02	; 2
     e46:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__uartTransmitService>
}
     e4a:	cf 91       	pop	r28
     e4c:	df 91       	pop	r29
     e4e:	ff 91       	pop	r31
     e50:	ef 91       	pop	r30
     e52:	bf 91       	pop	r27
     e54:	af 91       	pop	r26
     e56:	9f 91       	pop	r25
     e58:	8f 91       	pop	r24
     e5a:	7f 91       	pop	r23
     e5c:	6f 91       	pop	r22
     e5e:	5f 91       	pop	r21
     e60:	4f 91       	pop	r20
     e62:	3f 91       	pop	r19
     e64:	2f 91       	pop	r18
     e66:	0f 90       	pop	r0
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	0f 90       	pop	r0
     e6c:	1f 90       	pop	r1
     e6e:	18 95       	reti

00000e70 <__vector_51>:
#endif

#ifndef USART2_RX_vect
# error Uart2 Rx complete vector undefined
#else
UART_INTERRUPT_HANDLER(USART2_RX_vect){
     e70:	1f 92       	push	r1
     e72:	0f 92       	push	r0
     e74:	0f b6       	in	r0, 0x3f	; 63
     e76:	0f 92       	push	r0
     e78:	11 24       	eor	r1, r1
     e7a:	2f 93       	push	r18
     e7c:	3f 93       	push	r19
     e7e:	4f 93       	push	r20
     e80:	5f 93       	push	r21
     e82:	6f 93       	push	r22
     e84:	7f 93       	push	r23
     e86:	8f 93       	push	r24
     e88:	9f 93       	push	r25
     e8a:	af 93       	push	r26
     e8c:	bf 93       	push	r27
     e8e:	ef 93       	push	r30
     e90:	ff 93       	push	r31
     e92:	df 93       	push	r29
     e94:	cf 93       	push	r28
     e96:	cd b7       	in	r28, 0x3d	; 61
     e98:	de b7       	in	r29, 0x3e	; 62
	uartReceiveService(lidar);
     e9a:	80 91 58 02 	lds	r24, 0x0258
     e9e:	90 91 59 02 	lds	r25, 0x0259
     ea2:	fc 01       	movw	r30, r24
     ea4:	20 81       	ld	r18, Z
     ea6:	88 e3       	ldi	r24, 0x38	; 56
     ea8:	92 e0       	ldi	r25, 0x02	; 2
     eaa:	62 2f       	mov	r22, r18
     eac:	0e 94 17 0a 	call	0x142e	; 0x142e <__uartReceiveService>
}
     eb0:	cf 91       	pop	r28
     eb2:	df 91       	pop	r29
     eb4:	ff 91       	pop	r31
     eb6:	ef 91       	pop	r30
     eb8:	bf 91       	pop	r27
     eba:	af 91       	pop	r26
     ebc:	9f 91       	pop	r25
     ebe:	8f 91       	pop	r24
     ec0:	7f 91       	pop	r23
     ec2:	6f 91       	pop	r22
     ec4:	5f 91       	pop	r21
     ec6:	4f 91       	pop	r20
     ec8:	3f 91       	pop	r19
     eca:	2f 91       	pop	r18
     ecc:	0f 90       	pop	r0
     ece:	0f be       	out	0x3f, r0	; 63
     ed0:	0f 90       	pop	r0
     ed2:	1f 90       	pop	r1
     ed4:	18 95       	reti

00000ed6 <sysInitHardware>:
	&wheel_left
};
SERVO_DRIVER bank1 = MAKE_SERVO_DRIVER(bank1_list);

// ----------- Initialise built in devices ------
void sysInitHardware(void){
     ed6:	df 93       	push	r29
     ed8:	cf 93       	push	r28
     eda:	cd b7       	in	r28, 0x3d	; 61
     edc:	de b7       	in	r29, 0x3e	; 62
	SWITCH_init(&button);
     ede:	8e e5       	ldi	r24, 0x5E	; 94
     ee0:	92 e0       	ldi	r25, 0x02	; 2
     ee2:	0e 94 86 07 	call	0xf0c	; 0xf0c <SWITCH_init>
	setErrorLog(&uart1SendByte);
     ee6:	89 e7       	ldi	r24, 0x79	; 121
     ee8:	96 e0       	ldi	r25, 0x06	; 6
     eea:	0e 94 a4 11 	call	0x2348	; 0x2348 <setErrorLog>
	rprintfInit(&uart1SendByte);
     eee:	89 e7       	ldi	r24, 0x79	; 121
     ef0:	96 e0       	ldi	r25, 0x06	; 6
     ef2:	0e 94 b8 0c 	call	0x1970	; 0x1970 <rprintfInit>
	uartInit(uart1,115200);
     ef6:	8b e0       	ldi	r24, 0x0B	; 11
     ef8:	92 e0       	ldi	r25, 0x02	; 2
     efa:	40 e0       	ldi	r20, 0x00	; 0
     efc:	52 ec       	ldi	r21, 0xC2	; 194
     efe:	61 e0       	ldi	r22, 0x01	; 1
     f00:	70 e0       	ldi	r23, 0x00	; 0
     f02:	0e 94 34 09 	call	0x1268	; 0x1268 <_uartInit>
}
     f06:	cf 91       	pop	r28
     f08:	df 91       	pop	r29
     f0a:	08 95       	ret

00000f0c <SWITCH_init>:

static __inline__ boolean SWITCH_released(SWITCH* sw){
	return pin_is_high(sw->pin);
}

static __inline__ void SWITCH_init(SWITCH *sw){
     f0c:	df 93       	push	r29
     f0e:	cf 93       	push	r28
     f10:	00 d0       	rcall	.+0      	; 0xf12 <SWITCH_init+0x6>
     f12:	cd b7       	in	r28, 0x3d	; 61
     f14:	de b7       	in	r29, 0x3e	; 62
     f16:	9a 83       	std	Y+2, r25	; 0x02
     f18:	89 83       	std	Y+1, r24	; 0x01
	pin_make_input(sw->pin,TRUE);
     f1a:	e9 81       	ldd	r30, Y+1	; 0x01
     f1c:	fa 81       	ldd	r31, Y+2	; 0x02
     f1e:	80 81       	ld	r24, Z
     f20:	91 81       	ldd	r25, Z+1	; 0x01
     f22:	6f ef       	ldi	r22, 0xFF	; 255
     f24:	0e 94 cd 0b 	call	0x179a	; 0x179a <pin_make_input>
}
     f28:	0f 90       	pop	r0
     f2a:	0f 90       	pop	r0
     f2c:	cf 91       	pop	r28
     f2e:	df 91       	pop	r29
     f30:	08 95       	ret

00000f32 <initHardware>:

// ----------- Initialise my added devices ------
void initHardware(void){
     f32:	df 93       	push	r29
     f34:	cf 93       	push	r28
     f36:	cd b7       	in	r28, 0x3d	; 61
     f38:	de b7       	in	r29, 0x3e	; 62
	servosInit(&bank1,TIMER1);
     f3a:	88 e8       	ldi	r24, 0x88	; 136
     f3c:	92 e0       	ldi	r25, 0x02	; 2
     f3e:	26 e6       	ldi	r18, 0x66	; 102
     f40:	32 e0       	ldi	r19, 0x02	; 2
     f42:	b9 01       	movw	r22, r18
     f44:	0e 94 12 0e 	call	0x1c24	; 0x1c24 <servosInit>
	uartInit(lidar,115200);
     f48:	88 e3       	ldi	r24, 0x38	; 56
     f4a:	92 e0       	ldi	r25, 0x02	; 2
     f4c:	40 e0       	ldi	r20, 0x00	; 0
     f4e:	52 ec       	ldi	r21, 0xC2	; 194
     f50:	61 e0       	ldi	r22, 0x01	; 1
     f52:	70 e0       	ldi	r23, 0x00	; 0
     f54:	0e 94 34 09 	call	0x1268	; 0x1268 <_uartInit>
}
     f58:	cf 91       	pop	r28
     f5a:	df 91       	pop	r29
     f5c:	08 95       	ret

00000f5e <registerLED>:
// ----------- Register the statusLED -----------
void registerLED(void){
     f5e:	df 93       	push	r29
     f60:	cf 93       	push	r28
     f62:	cd b7       	in	r28, 0x3d	; 61
     f64:	de b7       	in	r29, 0x3e	; 62
	statusLEDregister(B6,false);
     f66:	82 e0       	ldi	r24, 0x02	; 2
     f68:	91 e0       	ldi	r25, 0x01	; 1
     f6a:	60 e0       	ldi	r22, 0x00	; 0
     f6c:	0e 94 bb 07 	call	0xf76	; 0xf76 <statusLEDregister>
}
     f70:	cf 91       	pop	r28
     f72:	df 91       	pop	r29
     f74:	08 95       	ret

00000f76 <statusLEDregister>:

static __inline__ void LED_off(LED* led){
	LED_set(led,FALSE);
}

static __inline__ void statusLEDregister(const IOPin* pin, boolean activeHigh){
     f76:	df 93       	push	r29
     f78:	cf 93       	push	r28
     f7a:	00 d0       	rcall	.+0      	; 0xf7c <statusLEDregister+0x6>
     f7c:	0f 92       	push	r0
     f7e:	cd b7       	in	r28, 0x3d	; 61
     f80:	de b7       	in	r29, 0x3e	; 62
     f82:	9a 83       	std	Y+2, r25	; 0x02
     f84:	89 83       	std	Y+1, r24	; 0x01
     f86:	6b 83       	std	Y+3, r22	; 0x03
	statusLED.pin = pin;
     f88:	89 81       	ldd	r24, Y+1	; 0x01
     f8a:	9a 81       	ldd	r25, Y+2	; 0x02
     f8c:	90 93 77 03 	sts	0x0377, r25
     f90:	80 93 76 03 	sts	0x0376, r24
	statusLED.activeHigh = activeHigh;
     f94:	8b 81       	ldd	r24, Y+3	; 0x03
     f96:	81 70       	andi	r24, 0x01	; 1
     f98:	98 2f       	mov	r25, r24
     f9a:	91 70       	andi	r25, 0x01	; 1
     f9c:	80 91 78 03 	lds	r24, 0x0378
     fa0:	8e 7f       	andi	r24, 0xFE	; 254
     fa2:	89 2b       	or	r24, r25
     fa4:	80 93 78 03 	sts	0x0378, r24
	statusLED.initialised=FALSE;
     fa8:	80 91 78 03 	lds	r24, 0x0378
     fac:	8d 7f       	andi	r24, 0xFD	; 253
     fae:	80 93 78 03 	sts	0x0378, r24
	LED_on(&statusLED);
     fb2:	86 e7       	ldi	r24, 0x76	; 118
     fb4:	93 e0       	ldi	r25, 0x03	; 3
     fb6:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <LED_on>
}
     fba:	0f 90       	pop	r0
     fbc:	0f 90       	pop	r0
     fbe:	0f 90       	pop	r0
     fc0:	cf 91       	pop	r28
     fc2:	df 91       	pop	r29
     fc4:	08 95       	ret

00000fc6 <LED_on>:



void LED_set(LED* led,	boolean value);

static __inline__ void LED_on(LED* led){
     fc6:	df 93       	push	r29
     fc8:	cf 93       	push	r28
     fca:	00 d0       	rcall	.+0      	; 0xfcc <LED_on+0x6>
     fcc:	cd b7       	in	r28, 0x3d	; 61
     fce:	de b7       	in	r29, 0x3e	; 62
     fd0:	9a 83       	std	Y+2, r25	; 0x02
     fd2:	89 83       	std	Y+1, r24	; 0x01
	LED_set(led,TRUE);
     fd4:	89 81       	ldd	r24, Y+1	; 0x01
     fd6:	9a 81       	ldd	r25, Y+2	; 0x02
     fd8:	6f ef       	ldi	r22, 0xFF	; 255
     fda:	0e 94 93 0c 	call	0x1926	; 0x1926 <LED_set>
}
     fde:	0f 90       	pop	r0
     fe0:	0f 90       	pop	r0
     fe2:	cf 91       	pop	r28
     fe4:	df 91       	pop	r29
     fe6:	08 95       	ret

00000fe8 <configure_ports>:

// ----------- Ports are configured on the fly --
void configure_ports(void){
     fe8:	df 93       	push	r29
     fea:	cf 93       	push	r28
     fec:	cd b7       	in	r28, 0x3d	; 61
     fee:	de b7       	in	r29, 0x3e	; 62
}
     ff0:	cf 91       	pop	r28
     ff2:	df 91       	pop	r29
     ff4:	08 95       	ret

00000ff6 <appInitHardware>:
#include "hardware.h"
//#include "rprintf.h"

// Initialise the hardware
void appInitHardware(void) {
     ff6:	df 93       	push	r29
     ff8:	cf 93       	push	r28
     ffa:	cd b7       	in	r28, 0x3d	; 61
     ffc:	de b7       	in	r29, 0x3e	; 62
	initHardware();
     ffe:	0e 94 99 07 	call	0xf32	; 0xf32 <initHardware>


}
    1002:	cf 91       	pop	r28
    1004:	df 91       	pop	r29
    1006:	08 95       	ret

00001008 <appInitSoftware>:
// Initialise the software
TICK_COUNT appInitSoftware(TICK_COUNT loopStart){
    1008:	df 93       	push	r29
    100a:	cf 93       	push	r28
    100c:	00 d0       	rcall	.+0      	; 0x100e <appInitSoftware+0x6>
    100e:	00 d0       	rcall	.+0      	; 0x1010 <appInitSoftware+0x8>
    1010:	cd b7       	in	r28, 0x3d	; 61
    1012:	de b7       	in	r29, 0x3e	; 62
    1014:	69 83       	std	Y+1, r22	; 0x01
    1016:	7a 83       	std	Y+2, r23	; 0x02
    1018:	8b 83       	std	Y+3, r24	; 0x03
    101a:	9c 83       	std	Y+4, r25	; 0x04
	return 0;
    101c:	80 e0       	ldi	r24, 0x00	; 0
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	a0 e0       	ldi	r26, 0x00	; 0
    1022:	b0 e0       	ldi	r27, 0x00	; 0
}
    1024:	bc 01       	movw	r22, r24
    1026:	cd 01       	movw	r24, r26
    1028:	0f 90       	pop	r0
    102a:	0f 90       	pop	r0
    102c:	0f 90       	pop	r0
    102e:	0f 90       	pop	r0
    1030:	cf 91       	pop	r28
    1032:	df 91       	pop	r29
    1034:	08 95       	ret

00001036 <appControl>:
// This is the main loop
TICK_COUNT appControl(LOOP_COUNT loopCount, TICK_COUNT loopStart) {
    1036:	0f 93       	push	r16
    1038:	1f 93       	push	r17
    103a:	df 93       	push	r29
    103c:	cf 93       	push	r28
    103e:	cd b7       	in	r28, 0x3d	; 61
    1040:	de b7       	in	r29, 0x3e	; 62
    1042:	2f 97       	sbiw	r28, 0x0f	; 15
    1044:	0f b6       	in	r0, 0x3f	; 63
    1046:	f8 94       	cli
    1048:	de bf       	out	0x3e, r29	; 62
    104a:	0f be       	out	0x3f, r0	; 63
    104c:	cd bf       	out	0x3d, r28	; 61
    104e:	68 87       	std	Y+8, r22	; 0x08
    1050:	79 87       	std	Y+9, r23	; 0x09
    1052:	8a 87       	std	Y+10, r24	; 0x0a
    1054:	9b 87       	std	Y+11, r25	; 0x0b
    1056:	2c 87       	std	Y+12, r18	; 0x0c
    1058:	3d 87       	std	Y+13, r19	; 0x0d
    105a:	4e 87       	std	Y+14, r20	; 0x0e
    105c:	5f 87       	std	Y+15, r21	; 0x0f

	// -------- Start Switch/Button-------
	// Switch/Button - see switch.h
	
	// To test if it is pressed then
	if(SWITCH_pressed(&button)){
    105e:	8e e5       	ldi	r24, 0x5E	; 94
    1060:	92 e0       	ldi	r25, 0x02	; 2
    1062:	0e 94 a3 08 	call	0x1146	; 0x1146 <SWITCH_pressed>
		// pressed
	}
	
	// To test if it is released then
	if(SWITCH_released(&button)){
    1066:	8e e5       	ldi	r24, 0x5E	; 94
    1068:	92 e0       	ldi	r25, 0x02	; 2
    106a:	0e 94 bd 08 	call	0x117a	; 0x117a <SWITCH_released>
	// To control your.motors/servos then see actuators.h in the manual	// To retrieve the required speed of wheel_right use:
	// DRIVE_SPEED speed=act_getSpeed(wheel_right);
	// To set the required speed of wheel_right use:
	// act_setSpeed(wheel_right,speed);
	// This example will move the motors back and forth using the loopStart time:
	TICK_COUNT ms = loopStart / 1000;		// Get current time in ms
    106e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1070:	9d 85       	ldd	r25, Y+13	; 0x0d
    1072:	ae 85       	ldd	r26, Y+14	; 0x0e
    1074:	bf 85       	ldd	r27, Y+15	; 0x0f
    1076:	28 ee       	ldi	r18, 0xE8	; 232
    1078:	33 e0       	ldi	r19, 0x03	; 3
    107a:	40 e0       	ldi	r20, 0x00	; 0
    107c:	50 e0       	ldi	r21, 0x00	; 0
    107e:	bc 01       	movw	r22, r24
    1080:	cd 01       	movw	r24, r26
    1082:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    1086:	da 01       	movw	r26, r20
    1088:	c9 01       	movw	r24, r18
    108a:	8c 83       	std	Y+4, r24	; 0x04
    108c:	9d 83       	std	Y+5, r25	; 0x05
    108e:	ae 83       	std	Y+6, r26	; 0x06
    1090:	bf 83       	std	Y+7, r27	; 0x07
	int16_t now = ms % (TICK_COUNT)10000; 	// 10 sec for a full swing
    1092:	8c 81       	ldd	r24, Y+4	; 0x04
    1094:	9d 81       	ldd	r25, Y+5	; 0x05
    1096:	ae 81       	ldd	r26, Y+6	; 0x06
    1098:	bf 81       	ldd	r27, Y+7	; 0x07
    109a:	20 e1       	ldi	r18, 0x10	; 16
    109c:	37 e2       	ldi	r19, 0x27	; 39
    109e:	40 e0       	ldi	r20, 0x00	; 0
    10a0:	50 e0       	ldi	r21, 0x00	; 0
    10a2:	bc 01       	movw	r22, r24
    10a4:	cd 01       	movw	r24, r26
    10a6:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    10aa:	dc 01       	movw	r26, r24
    10ac:	cb 01       	movw	r24, r22
    10ae:	9b 83       	std	Y+3, r25	; 0x03
    10b0:	8a 83       	std	Y+2, r24	; 0x02
	if(now >= (int16_t)5000){				// Goes from 0ms...5000ms
    10b2:	8a 81       	ldd	r24, Y+2	; 0x02
    10b4:	9b 81       	ldd	r25, Y+3	; 0x03
    10b6:	23 e1       	ldi	r18, 0x13	; 19
    10b8:	88 38       	cpi	r24, 0x88	; 136
    10ba:	92 07       	cpc	r25, r18
    10bc:	44 f0       	brlt	.+16     	; 0x10ce <appControl+0x98>
		now = (int16_t)10000 - now;			// then 5000ms...0ms
    10be:	80 e1       	ldi	r24, 0x10	; 16
    10c0:	97 e2       	ldi	r25, 0x27	; 39
    10c2:	2a 81       	ldd	r18, Y+2	; 0x02
    10c4:	3b 81       	ldd	r19, Y+3	; 0x03
    10c6:	82 1b       	sub	r24, r18
    10c8:	93 0b       	sbc	r25, r19
    10ca:	9b 83       	std	Y+3, r25	; 0x03
    10cc:	8a 83       	std	Y+2, r24	; 0x02
	}
	// Map it into DRIVE_SPEED range
	DRIVE_SPEED speed = interpolate(now, 0, 5000, DRIVE_SPEED_MIN, DRIVE_SPEED_MAX);
    10ce:	8a 81       	ldd	r24, Y+2	; 0x02
    10d0:	9b 81       	ldd	r25, Y+3	; 0x03
    10d2:	60 e0       	ldi	r22, 0x00	; 0
    10d4:	70 e0       	ldi	r23, 0x00	; 0
    10d6:	48 e8       	ldi	r20, 0x88	; 136
    10d8:	53 e1       	ldi	r21, 0x13	; 19
    10da:	21 e8       	ldi	r18, 0x81	; 129
    10dc:	3f ef       	ldi	r19, 0xFF	; 255
    10de:	0f e7       	ldi	r16, 0x7F	; 127
    10e0:	10 e0       	ldi	r17, 0x00	; 0
    10e2:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <interpolate>
    10e6:	89 83       	std	Y+1, r24	; 0x01
	// Set speed for all motors/servos
	act_setSpeed(&wheel_right,DRIVE_SPEED_MAX/2);
    10e8:	80 e6       	ldi	r24, 0x60	; 96
    10ea:	92 e0       	ldi	r25, 0x02	; 2
    10ec:	6f e3       	ldi	r22, 0x3F	; 63
    10ee:	0e 94 38 0a 	call	0x1470	; 0x1470 <__act_setSpeed>
	act_setSpeed(&wheel_left,DRIVE_SPEED_MAX/2);
    10f2:	84 e7       	ldi	r24, 0x74	; 116
    10f4:	92 e0       	ldi	r25, 0x02	; 2
    10f6:	6f e3       	ldi	r22, 0x3F	; 63
    10f8:	0e 94 38 0a 	call	0x1470	; 0x1470 <__act_setSpeed>
	// -------- End   Actuators -------
	//if(lidarGetByte() == 0xFA) rprintf("SYNC\n");
	//else rprintf("not sync\n");
	rprintfu08(lidarGetByte());
    10fc:	0e 94 01 07 	call	0xe02	; 0xe02 <lidarGetByte>
    1100:	0e 94 12 0d 	call	0x1a24	; 0x1a24 <rprintfu08>
	rprintf("HELLO");
    1104:	28 e4       	ldi	r18, 0x48	; 72
    1106:	33 e0       	ldi	r19, 0x03	; 3
    1108:	00 d0       	rcall	.+0      	; 0x110a <appControl+0xd4>
    110a:	0f 92       	push	r0
    110c:	ed b7       	in	r30, 0x3d	; 61
    110e:	fe b7       	in	r31, 0x3e	; 62
    1110:	31 96       	adiw	r30, 0x01	; 1
    1112:	81 e0       	ldi	r24, 0x01	; 1
    1114:	80 83       	st	Z, r24
    1116:	32 83       	std	Z+2, r19	; 0x02
    1118:	21 83       	std	Z+1, r18	; 0x01
    111a:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <rprintf1RamRom>
    111e:	0f 90       	pop	r0
    1120:	0f 90       	pop	r0
    1122:	0f 90       	pop	r0
	return 0;
    1124:	80 e0       	ldi	r24, 0x00	; 0
    1126:	90 e0       	ldi	r25, 0x00	; 0
    1128:	a0 e0       	ldi	r26, 0x00	; 0
    112a:	b0 e0       	ldi	r27, 0x00	; 0
}
    112c:	bc 01       	movw	r22, r24
    112e:	cd 01       	movw	r24, r26
    1130:	2f 96       	adiw	r28, 0x0f	; 15
    1132:	0f b6       	in	r0, 0x3f	; 63
    1134:	f8 94       	cli
    1136:	de bf       	out	0x3e, r29	; 62
    1138:	0f be       	out	0x3f, r0	; 63
    113a:	cd bf       	out	0x3d, r28	; 61
    113c:	cf 91       	pop	r28
    113e:	df 91       	pop	r29
    1140:	1f 91       	pop	r17
    1142:	0f 91       	pop	r16
    1144:	08 95       	ret

00001146 <SWITCH_pressed>:
	const IOPin* pin;
} SWITCH;

#define MAKE_SWITCH(pin) {pin}

static __inline__ boolean SWITCH_pressed(SWITCH* sw){
    1146:	df 93       	push	r29
    1148:	cf 93       	push	r28
    114a:	00 d0       	rcall	.+0      	; 0x114c <SWITCH_pressed+0x6>
    114c:	0f 92       	push	r0
    114e:	cd b7       	in	r28, 0x3d	; 61
    1150:	de b7       	in	r29, 0x3e	; 62
    1152:	9a 83       	std	Y+2, r25	; 0x02
    1154:	89 83       	std	Y+1, r24	; 0x01
	return pin_is_low(sw->pin);
    1156:	e9 81       	ldd	r30, Y+1	; 0x01
    1158:	fa 81       	ldd	r31, Y+2	; 0x02
    115a:	80 81       	ld	r24, Z
    115c:	91 81       	ldd	r25, Z+1	; 0x01
    115e:	0e 94 b8 0b 	call	0x1770	; 0x1770 <pin_is_high>
    1162:	1b 82       	std	Y+3, r1	; 0x03
    1164:	88 23       	and	r24, r24
    1166:	11 f4       	brne	.+4      	; 0x116c <SWITCH_pressed+0x26>
    1168:	81 e0       	ldi	r24, 0x01	; 1
    116a:	8b 83       	std	Y+3, r24	; 0x03
    116c:	8b 81       	ldd	r24, Y+3	; 0x03
}
    116e:	0f 90       	pop	r0
    1170:	0f 90       	pop	r0
    1172:	0f 90       	pop	r0
    1174:	cf 91       	pop	r28
    1176:	df 91       	pop	r29
    1178:	08 95       	ret

0000117a <SWITCH_released>:

static __inline__ boolean SWITCH_released(SWITCH* sw){
    117a:	df 93       	push	r29
    117c:	cf 93       	push	r28
    117e:	00 d0       	rcall	.+0      	; 0x1180 <SWITCH_released+0x6>
    1180:	cd b7       	in	r28, 0x3d	; 61
    1182:	de b7       	in	r29, 0x3e	; 62
    1184:	9a 83       	std	Y+2, r25	; 0x02
    1186:	89 83       	std	Y+1, r24	; 0x01
	return pin_is_high(sw->pin);
    1188:	e9 81       	ldd	r30, Y+1	; 0x01
    118a:	fa 81       	ldd	r31, Y+2	; 0x02
    118c:	80 81       	ld	r24, Z
    118e:	91 81       	ldd	r25, Z+1	; 0x01
    1190:	0e 94 b8 0b 	call	0x1770	; 0x1770 <pin_is_high>
}
    1194:	0f 90       	pop	r0
    1196:	0f 90       	pop	r0
    1198:	cf 91       	pop	r28
    119a:	df 91       	pop	r29
    119c:	08 95       	ret

0000119e <_uartStartXmit>:
    119e:	dc 01       	movw	r26, r24
    11a0:	17 96       	adiw	r26, 0x07	; 7
    11a2:	8d 91       	ld	r24, X+
    11a4:	9c 91       	ld	r25, X
    11a6:	18 97       	sbiw	r26, 0x08	; 8
    11a8:	02 96       	adiw	r24, 0x02	; 2
    11aa:	fc 01       	movw	r30, r24
    11ac:	25 91       	lpm	r18, Z+
    11ae:	34 91       	lpm	r19, Z+
    11b0:	cd 01       	movw	r24, r26
    11b2:	f9 01       	movw	r30, r18
    11b4:	09 95       	icall
    11b6:	08 95       	ret

000011b8 <_uartTransmitBlockStart>:
    11b8:	cf 93       	push	r28
    11ba:	df 93       	push	r29
    11bc:	ec 01       	movw	r28, r24
    11be:	8e 81       	ldd	r24, Y+6	; 0x06
    11c0:	8e 7f       	andi	r24, 0xFE	; 254
    11c2:	8e 83       	std	Y+6, r24	; 0x06
    11c4:	ec 89       	ldd	r30, Y+20	; 0x14
    11c6:	fd 89       	ldd	r31, Y+21	; 0x15
    11c8:	30 97       	sbiw	r30, 0x00	; 0
    11ca:	21 f0       	breq	.+8      	; 0x11d4 <_uartTransmitBlockStart+0x1c>
    11cc:	8e 89       	ldd	r24, Y+22	; 0x16
    11ce:	9f 89       	ldd	r25, Y+23	; 0x17
    11d0:	6f ef       	ldi	r22, 0xFF	; 255
    11d2:	09 95       	icall
    11d4:	ef 81       	ldd	r30, Y+7	; 0x07
    11d6:	f8 85       	ldd	r31, Y+8	; 0x08
    11d8:	38 96       	adiw	r30, 0x08	; 8
    11da:	25 91       	lpm	r18, Z+
    11dc:	34 91       	lpm	r19, Z+
    11de:	21 15       	cp	r18, r1
    11e0:	31 05       	cpc	r19, r1
    11e2:	19 f0       	breq	.+6      	; 0x11ea <_uartTransmitBlockStart+0x32>
    11e4:	ce 01       	movw	r24, r28
    11e6:	f9 01       	movw	r30, r18
    11e8:	09 95       	icall
    11ea:	df 91       	pop	r29
    11ec:	cf 91       	pop	r28
    11ee:	08 95       	ret

000011f0 <_uartTransmitBlockEnd>:
    11f0:	cf 93       	push	r28
    11f2:	df 93       	push	r29
    11f4:	ec 01       	movw	r28, r24
    11f6:	8e 81       	ldd	r24, Y+6	; 0x06
    11f8:	81 60       	ori	r24, 0x01	; 1
    11fa:	8e 83       	std	Y+6, r24	; 0x06
    11fc:	ef 81       	ldd	r30, Y+7	; 0x07
    11fe:	f8 85       	ldd	r31, Y+8	; 0x08
    1200:	3a 96       	adiw	r30, 0x0a	; 10
    1202:	25 91       	lpm	r18, Z+
    1204:	34 91       	lpm	r19, Z+
    1206:	21 15       	cp	r18, r1
    1208:	31 05       	cpc	r19, r1
    120a:	19 f0       	breq	.+6      	; 0x1212 <_uartTransmitBlockEnd+0x22>
    120c:	ce 01       	movw	r24, r28
    120e:	f9 01       	movw	r30, r18
    1210:	09 95       	icall
    1212:	ec 89       	ldd	r30, Y+20	; 0x14
    1214:	fd 89       	ldd	r31, Y+21	; 0x15
    1216:	30 97       	sbiw	r30, 0x00	; 0
    1218:	21 f0       	breq	.+8      	; 0x1222 <_uartTransmitBlockEnd+0x32>
    121a:	8e 89       	ldd	r24, Y+22	; 0x16
    121c:	9f 89       	ldd	r25, Y+23	; 0x17
    121e:	60 e0       	ldi	r22, 0x00	; 0
    1220:	09 95       	icall
    1222:	df 91       	pop	r29
    1224:	cf 91       	pop	r28
    1226:	08 95       	ret

00001228 <_uartSetBaudRate>:
    1228:	dc 01       	movw	r26, r24
    122a:	17 96       	adiw	r26, 0x07	; 7
    122c:	8d 91       	ld	r24, X+
    122e:	9c 91       	ld	r25, X
    1230:	18 97       	sbiw	r26, 0x08	; 8
    1232:	fc 01       	movw	r30, r24
    1234:	25 91       	lpm	r18, Z+
    1236:	34 91       	lpm	r19, Z+
    1238:	cd 01       	movw	r24, r26
    123a:	f9 01       	movw	r30, r18
    123c:	09 95       	icall
    123e:	08 95       	ret

00001240 <_uartOff>:
    1240:	dc 01       	movw	r26, r24
    1242:	17 96       	adiw	r26, 0x07	; 7
    1244:	ed 91       	ld	r30, X+
    1246:	fc 91       	ld	r31, X
    1248:	18 97       	sbiw	r26, 0x08	; 8
    124a:	36 96       	adiw	r30, 0x06	; 6
    124c:	25 91       	lpm	r18, Z+
    124e:	34 91       	lpm	r19, Z+
    1250:	9f b7       	in	r25, 0x3f	; 63
    1252:	78 94       	sei
    1254:	16 96       	adiw	r26, 0x06	; 6
    1256:	8c 91       	ld	r24, X
    1258:	16 97       	sbiw	r26, 0x06	; 6
    125a:	80 ff       	sbrs	r24, 0
    125c:	fb cf       	rjmp	.-10     	; 0x1254 <_uartOff+0x14>
    125e:	9f bf       	out	0x3f, r25	; 63
    1260:	cd 01       	movw	r24, r26
    1262:	f9 01       	movw	r30, r18
    1264:	09 95       	icall
    1266:	08 95       	ret

00001268 <_uartInit>:
    1268:	ef 92       	push	r14
    126a:	ff 92       	push	r15
    126c:	0f 93       	push	r16
    126e:	1f 93       	push	r17
    1270:	cf 93       	push	r28
    1272:	df 93       	push	r29
    1274:	ec 01       	movw	r28, r24
    1276:	7a 01       	movw	r14, r20
    1278:	8b 01       	movw	r16, r22
    127a:	f8 94       	cli
    127c:	8b 89       	ldd	r24, Y+19	; 0x13
    127e:	88 23       	and	r24, r24
    1280:	81 f0       	breq	.+32     	; 0x12a2 <_uartInit+0x3a>
    1282:	2b 85       	ldd	r18, Y+11	; 0x0b
    1284:	3c 85       	ldd	r19, Y+12	; 0x0c
    1286:	8d 85       	ldd	r24, Y+13	; 0x0d
    1288:	9e 85       	ldd	r25, Y+14	; 0x0e
    128a:	28 17       	cp	r18, r24
    128c:	39 07       	cpc	r19, r25
    128e:	21 f0       	breq	.+8      	; 0x1298 <_uartInit+0x30>
    1290:	c9 01       	movw	r24, r18
    1292:	60 e0       	ldi	r22, 0x00	; 0
    1294:	0e 94 cd 0b 	call	0x179a	; 0x179a <pin_make_input>
    1298:	8d 85       	ldd	r24, Y+13	; 0x0d
    129a:	9e 85       	ldd	r25, Y+14	; 0x0e
    129c:	6f ef       	ldi	r22, 0xFF	; 255
    129e:	0e 94 cd 0b 	call	0x179a	; 0x179a <pin_make_input>
    12a2:	8e 81       	ldd	r24, Y+6	; 0x06
    12a4:	81 60       	ori	r24, 0x01	; 1
    12a6:	8e 83       	std	Y+6, r24	; 0x06
    12a8:	8e 81       	ldd	r24, Y+6	; 0x06
    12aa:	8b 7f       	andi	r24, 0xFB	; 251
    12ac:	8e 83       	std	Y+6, r24	; 0x06
    12ae:	8e 81       	ldd	r24, Y+6	; 0x06
    12b0:	8d 7f       	andi	r24, 0xFD	; 253
    12b2:	8e 83       	std	Y+6, r24	; 0x06
    12b4:	8f 81       	ldd	r24, Y+7	; 0x07
    12b6:	98 85       	ldd	r25, Y+8	; 0x08
    12b8:	04 96       	adiw	r24, 0x04	; 4
    12ba:	fc 01       	movw	r30, r24
    12bc:	25 91       	lpm	r18, Z+
    12be:	34 91       	lpm	r19, Z+
    12c0:	ce 01       	movw	r24, r28
    12c2:	b8 01       	movw	r22, r16
    12c4:	a7 01       	movw	r20, r14
    12c6:	f9 01       	movw	r30, r18
    12c8:	09 95       	icall
    12ca:	78 94       	sei
    12cc:	df 91       	pop	r29
    12ce:	cf 91       	pop	r28
    12d0:	1f 91       	pop	r17
    12d2:	0f 91       	pop	r16
    12d4:	ff 90       	pop	r15
    12d6:	ef 90       	pop	r14
    12d8:	08 95       	ret

000012da <_uartSendByte>:
    12da:	0f 93       	push	r16
    12dc:	1f 93       	push	r17
    12de:	cf 93       	push	r28
    12e0:	df 93       	push	r29
    12e2:	ec 01       	movw	r28, r24
    12e4:	06 2f       	mov	r16, r22
    12e6:	8a 81       	ldd	r24, Y+2	; 0x02
    12e8:	9b 81       	ldd	r25, Y+3	; 0x03
    12ea:	89 2b       	or	r24, r25
    12ec:	19 f4       	brne	.+6      	; 0x12f4 <_uartSendByte+0x1a>
    12ee:	19 c0       	rjmp	.+50     	; 0x1322 <_uartSendByte+0x48>
    12f0:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <breathe>
    12f4:	8a 81       	ldd	r24, Y+2	; 0x02
    12f6:	9b 81       	ldd	r25, Y+3	; 0x03
    12f8:	0e 94 d3 0a 	call	0x15a6	; 0x15a6 <bufferIsFull>
    12fc:	88 23       	and	r24, r24
    12fe:	c1 f7       	brne	.-16     	; 0x12f0 <_uartSendByte+0x16>
    1300:	1f b7       	in	r17, 0x3f	; 63
    1302:	f8 94       	cli
    1304:	8e 81       	ldd	r24, Y+6	; 0x06
    1306:	81 fd       	sbrc	r24, 1
    1308:	04 c0       	rjmp	.+8      	; 0x1312 <_uartSendByte+0x38>
    130a:	8e 81       	ldd	r24, Y+6	; 0x06
    130c:	82 60       	ori	r24, 0x02	; 2
    130e:	8e 83       	std	Y+6, r24	; 0x06
    1310:	0d c0       	rjmp	.+26     	; 0x132c <_uartSendByte+0x52>
    1312:	8a 81       	ldd	r24, Y+2	; 0x02
    1314:	9b 81       	ldd	r25, Y+3	; 0x03
    1316:	60 2f       	mov	r22, r16
    1318:	0e 94 ad 0a 	call	0x155a	; 0x155a <bufferPut>
    131c:	0e c0       	rjmp	.+28     	; 0x133a <_uartSendByte+0x60>
    131e:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <breathe>
    1322:	8e 81       	ldd	r24, Y+6	; 0x06
    1324:	80 ff       	sbrs	r24, 0
    1326:	fb cf       	rjmp	.-10     	; 0x131e <_uartSendByte+0x44>
    1328:	1f b7       	in	r17, 0x3f	; 63
    132a:	f8 94       	cli
    132c:	ce 01       	movw	r24, r28
    132e:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <_uartTransmitBlockStart>
    1332:	ce 01       	movw	r24, r28
    1334:	60 2f       	mov	r22, r16
    1336:	0e 94 cf 08 	call	0x119e	; 0x119e <_uartStartXmit>
    133a:	1f bf       	out	0x3f, r17	; 63
    133c:	80 2f       	mov	r24, r16
    133e:	df 91       	pop	r29
    1340:	cf 91       	pop	r28
    1342:	1f 91       	pop	r17
    1344:	0f 91       	pop	r16
    1346:	08 95       	ret

00001348 <_uartSendBuffer>:
    1348:	ef 92       	push	r14
    134a:	ff 92       	push	r15
    134c:	0f 93       	push	r16
    134e:	1f 93       	push	r17
    1350:	cf 93       	push	r28
    1352:	df 93       	push	r29
    1354:	7c 01       	movw	r14, r24
    1356:	8b 01       	movw	r16, r22
    1358:	ea 01       	movw	r28, r20
    135a:	07 c0       	rjmp	.+14     	; 0x136a <_uartSendBuffer+0x22>
    135c:	f8 01       	movw	r30, r16
    135e:	61 91       	ld	r22, Z+
    1360:	8f 01       	movw	r16, r30
    1362:	c7 01       	movw	r24, r14
    1364:	0e 94 6d 09 	call	0x12da	; 0x12da <_uartSendByte>
    1368:	21 97       	sbiw	r28, 0x01	; 1
    136a:	20 97       	sbiw	r28, 0x00	; 0
    136c:	b9 f7       	brne	.-18     	; 0x135c <_uartSendBuffer+0x14>
    136e:	df 91       	pop	r29
    1370:	cf 91       	pop	r28
    1372:	1f 91       	pop	r17
    1374:	0f 91       	pop	r16
    1376:	ff 90       	pop	r15
    1378:	ef 90       	pop	r14
    137a:	08 95       	ret

0000137c <__uartGetByte>:
    137c:	df 93       	push	r29
    137e:	cf 93       	push	r28
    1380:	0f 92       	push	r0
    1382:	cd b7       	in	r28, 0x3d	; 61
    1384:	de b7       	in	r29, 0x3e	; 62
    1386:	fc 01       	movw	r30, r24
    1388:	80 81       	ld	r24, Z
    138a:	91 81       	ldd	r25, Z+1	; 0x01
    138c:	00 97       	sbiw	r24, 0x00	; 0
    138e:	71 f0       	breq	.+28     	; 0x13ac <__uartGetByte+0x30>
    1390:	be 01       	movw	r22, r28
    1392:	6f 5f       	subi	r22, 0xFF	; 255
    1394:	7f 4f       	sbci	r23, 0xFF	; 255
    1396:	0e 94 80 0a 	call	0x1500	; 0x1500 <bufferGet>
    139a:	88 23       	and	r24, r24
    139c:	19 f4       	brne	.+6      	; 0x13a4 <__uartGetByte+0x28>
    139e:	4f ef       	ldi	r20, 0xFF	; 255
    13a0:	5f ef       	ldi	r21, 0xFF	; 255
    13a2:	0d c0       	rjmp	.+26     	; 0x13be <__uartGetByte+0x42>
    13a4:	89 81       	ldd	r24, Y+1	; 0x01
    13a6:	48 2f       	mov	r20, r24
    13a8:	50 e0       	ldi	r21, 0x00	; 0
    13aa:	09 c0       	rjmp	.+18     	; 0x13be <__uartGetByte+0x42>
    13ac:	2f b7       	in	r18, 0x3f	; 63
    13ae:	f8 94       	cli
    13b0:	41 85       	ldd	r20, Z+9	; 0x09
    13b2:	52 85       	ldd	r21, Z+10	; 0x0a
    13b4:	8f ef       	ldi	r24, 0xFF	; 255
    13b6:	9f ef       	ldi	r25, 0xFF	; 255
    13b8:	92 87       	std	Z+10, r25	; 0x0a
    13ba:	81 87       	std	Z+9, r24	; 0x09
    13bc:	2f bf       	out	0x3f, r18	; 63
    13be:	ca 01       	movw	r24, r20
    13c0:	0f 90       	pop	r0
    13c2:	cf 91       	pop	r28
    13c4:	df 91       	pop	r29
    13c6:	08 95       	ret

000013c8 <__uartTransmitService>:
    13c8:	ef 92       	push	r14
    13ca:	ff 92       	push	r15
    13cc:	1f 93       	push	r17
    13ce:	df 93       	push	r29
    13d0:	cf 93       	push	r28
    13d2:	0f 92       	push	r0
    13d4:	cd b7       	in	r28, 0x3d	; 61
    13d6:	de b7       	in	r29, 0x3e	; 62
    13d8:	7c 01       	movw	r14, r24
    13da:	fc 01       	movw	r30, r24
    13dc:	86 81       	ldd	r24, Z+6	; 0x06
    13de:	81 ff       	sbrs	r24, 1
    13e0:	19 c0       	rjmp	.+50     	; 0x1414 <__uartTransmitService+0x4c>
    13e2:	1f b7       	in	r17, 0x3f	; 63
    13e4:	f8 94       	cli
    13e6:	f7 01       	movw	r30, r14
    13e8:	82 81       	ldd	r24, Z+2	; 0x02
    13ea:	93 81       	ldd	r25, Z+3	; 0x03
    13ec:	be 01       	movw	r22, r28
    13ee:	6f 5f       	subi	r22, 0xFF	; 255
    13f0:	7f 4f       	sbci	r23, 0xFF	; 255
    13f2:	0e 94 80 0a 	call	0x1500	; 0x1500 <bufferGet>
    13f6:	88 23       	and	r24, r24
    13f8:	29 f0       	breq	.+10     	; 0x1404 <__uartTransmitService+0x3c>
    13fa:	c7 01       	movw	r24, r14
    13fc:	69 81       	ldd	r22, Y+1	; 0x01
    13fe:	0e 94 cf 08 	call	0x119e	; 0x119e <_uartStartXmit>
    1402:	0d c0       	rjmp	.+26     	; 0x141e <__uartTransmitService+0x56>
    1404:	c7 01       	movw	r24, r14
    1406:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <_uartTransmitBlockEnd>
    140a:	f7 01       	movw	r30, r14
    140c:	86 81       	ldd	r24, Z+6	; 0x06
    140e:	8d 7f       	andi	r24, 0xFD	; 253
    1410:	86 83       	std	Z+6, r24	; 0x06
    1412:	05 c0       	rjmp	.+10     	; 0x141e <__uartTransmitService+0x56>
    1414:	1f b7       	in	r17, 0x3f	; 63
    1416:	f8 94       	cli
    1418:	c7 01       	movw	r24, r14
    141a:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <_uartTransmitBlockEnd>
    141e:	1f bf       	out	0x3f, r17	; 63
    1420:	0f 90       	pop	r0
    1422:	cf 91       	pop	r28
    1424:	df 91       	pop	r29
    1426:	1f 91       	pop	r17
    1428:	ff 90       	pop	r15
    142a:	ef 90       	pop	r14
    142c:	08 95       	ret

0000142e <__uartReceiveService>:
    142e:	cf 93       	push	r28
    1430:	df 93       	push	r29
    1432:	ec 01       	movw	r28, r24
    1434:	86 2f       	mov	r24, r22
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	9a 87       	std	Y+10, r25	; 0x0a
    143a:	89 87       	std	Y+9, r24	; 0x09
    143c:	8c 81       	ldd	r24, Y+4	; 0x04
    143e:	9d 81       	ldd	r25, Y+5	; 0x05
    1440:	89 2b       	or	r24, r25
    1442:	29 f0       	breq	.+10     	; 0x144e <__uartReceiveService+0x20>
    1444:	ec 81       	ldd	r30, Y+4	; 0x04
    1446:	fd 81       	ldd	r31, Y+5	; 0x05
    1448:	86 2f       	mov	r24, r22
    144a:	09 95       	icall
    144c:	0e c0       	rjmp	.+28     	; 0x146a <__uartReceiveService+0x3c>
    144e:	88 81       	ld	r24, Y
    1450:	99 81       	ldd	r25, Y+1	; 0x01
    1452:	00 97       	sbiw	r24, 0x00	; 0
    1454:	51 f0       	breq	.+20     	; 0x146a <__uartReceiveService+0x3c>
    1456:	0e 94 ad 0a 	call	0x155a	; 0x155a <bufferPut>
    145a:	88 23       	and	r24, r24
    145c:	31 f4       	brne	.+12     	; 0x146a <__uartReceiveService+0x3c>
    145e:	8e 81       	ldd	r24, Y+6	; 0x06
    1460:	84 60       	ori	r24, 0x04	; 4
    1462:	8e 83       	std	Y+6, r24	; 0x06
    1464:	85 ef       	ldi	r24, 0xF5	; 245
    1466:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    146a:	df 91       	pop	r29
    146c:	cf 91       	pop	r28
    146e:	08 95       	ret

00001470 <__act_setSpeed>:
    1470:	1f 93       	push	r17
    1472:	cf 93       	push	r28
    1474:	df 93       	push	r29
    1476:	ec 01       	movw	r28, r24
    1478:	16 2f       	mov	r17, r22
    147a:	61 38       	cpi	r22, 0x81	; 129
    147c:	0c f4       	brge	.+2      	; 0x1480 <__act_setSpeed+0x10>
    147e:	11 e8       	ldi	r17, 0x81	; 129
    1480:	e8 81       	ld	r30, Y
    1482:	f9 81       	ldd	r31, Y+1	; 0x01
    1484:	30 97       	sbiw	r30, 0x00	; 0
    1486:	79 f0       	breq	.+30     	; 0x14a6 <__act_setSpeed+0x36>
    1488:	25 91       	lpm	r18, Z+
    148a:	34 91       	lpm	r19, Z+
    148c:	21 15       	cp	r18, r1
    148e:	31 05       	cpc	r19, r1
    1490:	51 f0       	breq	.+20     	; 0x14a6 <__act_setSpeed+0x36>
    1492:	8b 81       	ldd	r24, Y+3	; 0x03
    1494:	81 fd       	sbrc	r24, 1
    1496:	02 c0       	rjmp	.+4      	; 0x149c <__act_setSpeed+0x2c>
    1498:	61 2f       	mov	r22, r17
    149a:	02 c0       	rjmp	.+4      	; 0x14a0 <__act_setSpeed+0x30>
    149c:	61 2f       	mov	r22, r17
    149e:	61 95       	neg	r22
    14a0:	ce 01       	movw	r24, r28
    14a2:	f9 01       	movw	r30, r18
    14a4:	09 95       	icall
    14a6:	1a 83       	std	Y+2, r17	; 0x02
    14a8:	df 91       	pop	r29
    14aa:	cf 91       	pop	r28
    14ac:	1f 91       	pop	r17
    14ae:	08 95       	ret

000014b0 <__act_setConnected>:
    14b0:	dc 01       	movw	r26, r24
    14b2:	96 2f       	mov	r25, r22
    14b4:	91 70       	andi	r25, 0x01	; 1
    14b6:	13 96       	adiw	r26, 0x03	; 3
    14b8:	8c 91       	ld	r24, X
    14ba:	13 97       	sbiw	r26, 0x03	; 3
    14bc:	8e 7f       	andi	r24, 0xFE	; 254
    14be:	89 2b       	or	r24, r25
    14c0:	13 96       	adiw	r26, 0x03	; 3
    14c2:	8c 93       	st	X, r24
    14c4:	13 97       	sbiw	r26, 0x03	; 3
    14c6:	8d 91       	ld	r24, X+
    14c8:	9c 91       	ld	r25, X
    14ca:	11 97       	sbiw	r26, 0x01	; 1
    14cc:	00 97       	sbiw	r24, 0x00	; 0
    14ce:	51 f0       	breq	.+20     	; 0x14e4 <__act_setConnected+0x34>
    14d0:	fc 01       	movw	r30, r24
    14d2:	32 96       	adiw	r30, 0x02	; 2
    14d4:	25 91       	lpm	r18, Z+
    14d6:	34 91       	lpm	r19, Z+
    14d8:	21 15       	cp	r18, r1
    14da:	31 05       	cpc	r19, r1
    14dc:	19 f0       	breq	.+6      	; 0x14e4 <__act_setConnected+0x34>
    14de:	cd 01       	movw	r24, r26
    14e0:	f9 01       	movw	r30, r18
    14e2:	09 95       	icall
    14e4:	08 95       	ret

000014e6 <bufferInit>:
    14e6:	fc 01       	movw	r30, r24
    14e8:	8f b7       	in	r24, 0x3f	; 63
    14ea:	f8 94       	cli
    14ec:	71 83       	std	Z+1, r23	; 0x01
    14ee:	60 83       	st	Z, r22
    14f0:	53 83       	std	Z+3, r21	; 0x03
    14f2:	42 83       	std	Z+2, r20	; 0x02
    14f4:	15 82       	std	Z+5, r1	; 0x05
    14f6:	14 82       	std	Z+4, r1	; 0x04
    14f8:	17 82       	std	Z+7, r1	; 0x07
    14fa:	16 82       	std	Z+6, r1	; 0x06
    14fc:	8f bf       	out	0x3f, r24	; 63
    14fe:	08 95       	ret

00001500 <bufferGet>:
    1500:	cf 93       	push	r28
    1502:	df 93       	push	r29
    1504:	ec 01       	movw	r28, r24
    1506:	db 01       	movw	r26, r22
    1508:	2f b7       	in	r18, 0x3f	; 63
    150a:	f8 94       	cli
    150c:	00 97       	sbiw	r24, 0x00	; 0
    150e:	01 f1       	breq	.+64     	; 0x1550 <bufferGet+0x50>
    1510:	8a 81       	ldd	r24, Y+2	; 0x02
    1512:	9b 81       	ldd	r25, Y+3	; 0x03
    1514:	89 2b       	or	r24, r25
    1516:	e1 f0       	breq	.+56     	; 0x1550 <bufferGet+0x50>
    1518:	8c 81       	ldd	r24, Y+4	; 0x04
    151a:	9d 81       	ldd	r25, Y+5	; 0x05
    151c:	89 2b       	or	r24, r25
    151e:	c1 f0       	breq	.+48     	; 0x1550 <bufferGet+0x50>
    1520:	e8 81       	ld	r30, Y
    1522:	f9 81       	ldd	r31, Y+1	; 0x01
    1524:	8e 81       	ldd	r24, Y+6	; 0x06
    1526:	9f 81       	ldd	r25, Y+7	; 0x07
    1528:	e8 0f       	add	r30, r24
    152a:	f9 1f       	adc	r31, r25
    152c:	80 81       	ld	r24, Z
    152e:	8c 93       	st	X, r24
    1530:	8e 81       	ldd	r24, Y+6	; 0x06
    1532:	9f 81       	ldd	r25, Y+7	; 0x07
    1534:	6a 81       	ldd	r22, Y+2	; 0x02
    1536:	7b 81       	ldd	r23, Y+3	; 0x03
    1538:	01 96       	adiw	r24, 0x01	; 1
    153a:	0e 94 8f 1d 	call	0x3b1e	; 0x3b1e <__udivmodhi4>
    153e:	9f 83       	std	Y+7, r25	; 0x07
    1540:	8e 83       	std	Y+6, r24	; 0x06
    1542:	8c 81       	ldd	r24, Y+4	; 0x04
    1544:	9d 81       	ldd	r25, Y+5	; 0x05
    1546:	01 97       	sbiw	r24, 0x01	; 1
    1548:	9d 83       	std	Y+5, r25	; 0x05
    154a:	8c 83       	std	Y+4, r24	; 0x04
    154c:	8f ef       	ldi	r24, 0xFF	; 255
    154e:	01 c0       	rjmp	.+2      	; 0x1552 <bufferGet+0x52>
    1550:	80 e0       	ldi	r24, 0x00	; 0
    1552:	2f bf       	out	0x3f, r18	; 63
    1554:	df 91       	pop	r29
    1556:	cf 91       	pop	r28
    1558:	08 95       	ret

0000155a <bufferPut>:
    155a:	1f 93       	push	r17
    155c:	cf 93       	push	r28
    155e:	df 93       	push	r29
    1560:	ec 01       	movw	r28, r24
    1562:	46 2f       	mov	r20, r22
    1564:	1f b7       	in	r17, 0x3f	; 63
    1566:	f8 94       	cli
    1568:	2c 81       	ldd	r18, Y+4	; 0x04
    156a:	3d 81       	ldd	r19, Y+5	; 0x05
    156c:	6a 81       	ldd	r22, Y+2	; 0x02
    156e:	7b 81       	ldd	r23, Y+3	; 0x03
    1570:	26 17       	cp	r18, r22
    1572:	37 07       	cpc	r19, r23
    1574:	10 f0       	brcs	.+4      	; 0x157a <bufferPut+0x20>
    1576:	80 e0       	ldi	r24, 0x00	; 0
    1578:	11 c0       	rjmp	.+34     	; 0x159c <bufferPut+0x42>
    157a:	8e 81       	ldd	r24, Y+6	; 0x06
    157c:	9f 81       	ldd	r25, Y+7	; 0x07
    157e:	82 0f       	add	r24, r18
    1580:	93 1f       	adc	r25, r19
    1582:	0e 94 8f 1d 	call	0x3b1e	; 0x3b1e <__udivmodhi4>
    1586:	e8 81       	ld	r30, Y
    1588:	f9 81       	ldd	r31, Y+1	; 0x01
    158a:	e8 0f       	add	r30, r24
    158c:	f9 1f       	adc	r31, r25
    158e:	40 83       	st	Z, r20
    1590:	8c 81       	ldd	r24, Y+4	; 0x04
    1592:	9d 81       	ldd	r25, Y+5	; 0x05
    1594:	01 96       	adiw	r24, 0x01	; 1
    1596:	9d 83       	std	Y+5, r25	; 0x05
    1598:	8c 83       	std	Y+4, r24	; 0x04
    159a:	8f ef       	ldi	r24, 0xFF	; 255
    159c:	1f bf       	out	0x3f, r17	; 63
    159e:	df 91       	pop	r29
    15a0:	cf 91       	pop	r28
    15a2:	1f 91       	pop	r17
    15a4:	08 95       	ret

000015a6 <bufferIsFull>:
    15a6:	fc 01       	movw	r30, r24
    15a8:	8f b7       	in	r24, 0x3f	; 63
    15aa:	f8 94       	cli
    15ac:	8f bf       	out	0x3f, r24	; 63
    15ae:	40 e0       	ldi	r20, 0x00	; 0
    15b0:	24 81       	ldd	r18, Z+4	; 0x04
    15b2:	35 81       	ldd	r19, Z+5	; 0x05
    15b4:	82 81       	ldd	r24, Z+2	; 0x02
    15b6:	93 81       	ldd	r25, Z+3	; 0x03
    15b8:	28 17       	cp	r18, r24
    15ba:	39 07       	cpc	r19, r25
    15bc:	09 f4       	brne	.+2      	; 0x15c0 <bufferIsFull+0x1a>
    15be:	41 e0       	ldi	r20, 0x01	; 1
    15c0:	84 2f       	mov	r24, r20
    15c2:	08 95       	ret

000015c4 <bufferFlush>:
    15c4:	fc 01       	movw	r30, r24
    15c6:	8f b7       	in	r24, 0x3f	; 63
    15c8:	f8 94       	cli
    15ca:	15 82       	std	Z+5, r1	; 0x05
    15cc:	14 82       	std	Z+4, r1	; 0x04
    15ce:	8f bf       	out	0x3f, r24	; 63
    15d0:	08 95       	ret

000015d2 <breathe>:
    15d2:	8f b7       	in	r24, 0x3f	; 63
    15d4:	78 94       	sei
	...
    15e2:	00 00       	nop
    15e4:	8f bf       	out	0x3f, r24	; 63
    15e6:	08 95       	ret

000015e8 <__portMaskSet>:
    15e8:	9c 01       	movw	r18, r24
    15ea:	fc 01       	movw	r30, r24
    15ec:	a5 91       	lpm	r26, Z+
    15ee:	b4 91       	lpm	r27, Z+
    15f0:	2e 5f       	subi	r18, 0xFE	; 254
    15f2:	3f 4f       	sbci	r19, 0xFF	; 255
    15f4:	f9 01       	movw	r30, r18
    15f6:	94 91       	lpm	r25, Z+
    15f8:	8c 91       	ld	r24, X
    15fa:	89 2b       	or	r24, r25
    15fc:	8c 93       	st	X, r24
    15fe:	08 95       	ret

00001600 <__portMaskGet>:
    1600:	9c 01       	movw	r18, r24
    1602:	fc 01       	movw	r30, r24
    1604:	a5 91       	lpm	r26, Z+
    1606:	b4 91       	lpm	r27, Z+
    1608:	2e 5f       	subi	r18, 0xFE	; 254
    160a:	3f 4f       	sbci	r19, 0xFF	; 255
    160c:	f9 01       	movw	r30, r18
    160e:	94 91       	lpm	r25, Z+
    1610:	8c 91       	ld	r24, X
    1612:	89 23       	and	r24, r25
    1614:	09 f0       	breq	.+2      	; 0x1618 <__portMaskGet+0x18>
    1616:	8f ef       	ldi	r24, 0xFF	; 255
    1618:	08 95       	ret

0000161a <__portMaskClear>:
    161a:	9c 01       	movw	r18, r24
    161c:	fc 01       	movw	r30, r24
    161e:	a5 91       	lpm	r26, Z+
    1620:	b4 91       	lpm	r27, Z+
    1622:	2e 5f       	subi	r18, 0xFE	; 254
    1624:	3f 4f       	sbci	r19, 0xFF	; 255
    1626:	f9 01       	movw	r30, r18
    1628:	94 91       	lpm	r25, Z+
    162a:	8c 91       	ld	r24, X
    162c:	90 95       	com	r25
    162e:	89 23       	and	r24, r25
    1630:	8c 93       	st	X, r24
    1632:	08 95       	ret

00001634 <main>:
    1634:	6f 92       	push	r6
    1636:	7f 92       	push	r7
    1638:	8f 92       	push	r8
    163a:	9f 92       	push	r9
    163c:	af 92       	push	r10
    163e:	bf 92       	push	r11
    1640:	cf 92       	push	r12
    1642:	df 92       	push	r13
    1644:	ef 92       	push	r14
    1646:	ff 92       	push	r15
    1648:	0f 93       	push	r16
    164a:	1f 93       	push	r17
    164c:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <configure_ports>
    1650:	0e 94 af 07 	call	0xf5e	; 0xf5e <registerLED>
    1654:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <initTimers>
    1658:	0e 94 6b 07 	call	0xed6	; 0xed6 <sysInitHardware>
    165c:	0e 94 fb 07 	call	0xff6	; 0xff6 <appInitHardware>
    1660:	0e 94 eb 16 	call	0x2dd6	; 0x2dd6 <__clockInit>
    1664:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <clockGetus>
    1668:	5b 01       	movw	r10, r22
    166a:	6c 01       	movw	r12, r24
    166c:	0e 94 04 08 	call	0x1008	; 0x1008 <appInitSoftware>
    1670:	7b 01       	movw	r14, r22
    1672:	8c 01       	movw	r16, r24
    1674:	66 24       	eor	r6, r6
    1676:	77 24       	eor	r7, r7
    1678:	43 01       	movw	r8, r6
    167a:	8f b7       	in	r24, 0x3f	; 63
    167c:	78 94       	sei
	...
    168a:	00 00       	nop
    168c:	8f bf       	out	0x3f, r24	; 63
    168e:	e1 14       	cp	r14, r1
    1690:	f1 04       	cpc	r15, r1
    1692:	01 05       	cpc	r16, r1
    1694:	11 05       	cpc	r17, r1
    1696:	59 f4       	brne	.+22     	; 0x16ae <main+0x7a>
    1698:	12 c0       	rjmp	.+36     	; 0x16be <main+0x8a>
    169a:	8f b7       	in	r24, 0x3f	; 63
    169c:	78 94       	sei
	...
    16aa:	00 00       	nop
    16ac:	8f bf       	out	0x3f, r24	; 63
    16ae:	c6 01       	movw	r24, r12
    16b0:	b5 01       	movw	r22, r10
    16b2:	a8 01       	movw	r20, r16
    16b4:	97 01       	movw	r18, r14
    16b6:	0e 94 11 19 	call	0x3222	; 0x3222 <clockHasElapsed>
    16ba:	88 23       	and	r24, r24
    16bc:	71 f3       	breq	.-36     	; 0x169a <main+0x66>
    16be:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <clockGetus>
    16c2:	5b 01       	movw	r10, r22
    16c4:	6c 01       	movw	r12, r24
    16c6:	08 94       	sec
    16c8:	61 1c       	adc	r6, r1
    16ca:	71 1c       	adc	r7, r1
    16cc:	81 1c       	adc	r8, r1
    16ce:	91 1c       	adc	r9, r1
    16d0:	c4 01       	movw	r24, r8
    16d2:	b3 01       	movw	r22, r6
    16d4:	a6 01       	movw	r20, r12
    16d6:	95 01       	movw	r18, r10
    16d8:	0e 94 1b 08 	call	0x1036	; 0x1036 <appControl>
    16dc:	7b 01       	movw	r14, r22
    16de:	8c 01       	movw	r16, r24
    16e0:	cc cf       	rjmp	.-104    	; 0x167a <main+0x46>

000016e2 <interpolate>:
    16e2:	4f 92       	push	r4
    16e4:	5f 92       	push	r5
    16e6:	6f 92       	push	r6
    16e8:	7f 92       	push	r7
    16ea:	8f 92       	push	r8
    16ec:	9f 92       	push	r9
    16ee:	af 92       	push	r10
    16f0:	bf 92       	push	r11
    16f2:	cf 92       	push	r12
    16f4:	df 92       	push	r13
    16f6:	ef 92       	push	r14
    16f8:	ff 92       	push	r15
    16fa:	0f 93       	push	r16
    16fc:	1f 93       	push	r17
    16fe:	2b 01       	movw	r4, r22
    1700:	3a 01       	movw	r6, r20
    1702:	59 01       	movw	r10, r18
    1704:	78 01       	movw	r14, r16
    1706:	e2 1a       	sub	r14, r18
    1708:	f3 0a       	sbc	r15, r19
    170a:	00 27       	eor	r16, r16
    170c:	f7 fc       	sbrc	r15, 7
    170e:	00 95       	com	r16
    1710:	10 2f       	mov	r17, r16
    1712:	9c 01       	movw	r18, r24
    1714:	26 1b       	sub	r18, r22
    1716:	37 0b       	sbc	r19, r23
    1718:	44 27       	eor	r20, r20
    171a:	37 fd       	sbrc	r19, 7
    171c:	40 95       	com	r20
    171e:	54 2f       	mov	r21, r20
    1720:	c8 01       	movw	r24, r16
    1722:	b7 01       	movw	r22, r14
    1724:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    1728:	64 18       	sub	r6, r4
    172a:	75 08       	sbc	r7, r5
    172c:	88 24       	eor	r8, r8
    172e:	77 fc       	sbrc	r7, 7
    1730:	80 94       	com	r8
    1732:	98 2c       	mov	r9, r8
    1734:	a4 01       	movw	r20, r8
    1736:	93 01       	movw	r18, r6
    1738:	0e 94 c5 1d 	call	0x3b8a	; 0x3b8a <__divmodsi4>
    173c:	c9 01       	movw	r24, r18
    173e:	da 01       	movw	r26, r20
    1740:	cc 24       	eor	r12, r12
    1742:	b7 fc       	sbrc	r11, 7
    1744:	c0 94       	com	r12
    1746:	dc 2c       	mov	r13, r12
    1748:	a8 0e       	add	r10, r24
    174a:	b9 1e       	adc	r11, r25
    174c:	ca 1e       	adc	r12, r26
    174e:	db 1e       	adc	r13, r27
    1750:	c5 01       	movw	r24, r10
    1752:	1f 91       	pop	r17
    1754:	0f 91       	pop	r16
    1756:	ff 90       	pop	r15
    1758:	ef 90       	pop	r14
    175a:	df 90       	pop	r13
    175c:	cf 90       	pop	r12
    175e:	bf 90       	pop	r11
    1760:	af 90       	pop	r10
    1762:	9f 90       	pop	r9
    1764:	8f 90       	pop	r8
    1766:	7f 90       	pop	r7
    1768:	6f 90       	pop	r6
    176a:	5f 90       	pop	r5
    176c:	4f 90       	pop	r4
    176e:	08 95       	ret

00001770 <pin_is_high>:
    1770:	9c 01       	movw	r18, r24
    1772:	00 97       	sbiw	r24, 0x00	; 0
    1774:	81 f0       	breq	.+32     	; 0x1796 <pin_is_high+0x26>
    1776:	fc 01       	movw	r30, r24
    1778:	85 91       	lpm	r24, Z+
    177a:	94 91       	lpm	r25, Z+
    177c:	04 96       	adiw	r24, 0x04	; 4
    177e:	fc 01       	movw	r30, r24
    1780:	a5 91       	lpm	r26, Z+
    1782:	b4 91       	lpm	r27, Z+
    1784:	2e 5f       	subi	r18, 0xFE	; 254
    1786:	3f 4f       	sbci	r19, 0xFF	; 255
    1788:	f9 01       	movw	r30, r18
    178a:	94 91       	lpm	r25, Z+
    178c:	8c 91       	ld	r24, X
    178e:	89 23       	and	r24, r25
    1790:	11 f0       	breq	.+4      	; 0x1796 <pin_is_high+0x26>
    1792:	8f ef       	ldi	r24, 0xFF	; 255
    1794:	08 95       	ret
    1796:	80 e0       	ldi	r24, 0x00	; 0
    1798:	08 95       	ret

0000179a <pin_make_input>:
    179a:	cf 93       	push	r28
    179c:	df 93       	push	r29
    179e:	9c 01       	movw	r18, r24
    17a0:	00 97       	sbiw	r24, 0x00	; 0
    17a2:	f9 f0       	breq	.+62     	; 0x17e2 <pin_make_input+0x48>
    17a4:	fc 01       	movw	r30, r24
    17a6:	45 91       	lpm	r20, Z+
    17a8:	54 91       	lpm	r21, Z+
    17aa:	ca 01       	movw	r24, r20
    17ac:	02 96       	adiw	r24, 0x02	; 2
    17ae:	fc 01       	movw	r30, r24
    17b0:	a5 91       	lpm	r26, Z+
    17b2:	b4 91       	lpm	r27, Z+
    17b4:	fa 01       	movw	r30, r20
    17b6:	c5 91       	lpm	r28, Z+
    17b8:	d4 91       	lpm	r29, Z+
    17ba:	2e 5f       	subi	r18, 0xFE	; 254
    17bc:	3f 4f       	sbci	r19, 0xFF	; 255
    17be:	f9 01       	movw	r30, r18
    17c0:	24 91       	lpm	r18, Z+
    17c2:	3f b7       	in	r19, 0x3f	; 63
    17c4:	f8 94       	cli
    17c6:	8c 91       	ld	r24, X
    17c8:	92 2f       	mov	r25, r18
    17ca:	90 95       	com	r25
    17cc:	89 23       	and	r24, r25
    17ce:	8c 93       	st	X, r24
    17d0:	88 81       	ld	r24, Y
    17d2:	89 23       	and	r24, r25
    17d4:	88 83       	st	Y, r24
    17d6:	66 23       	and	r22, r22
    17d8:	19 f0       	breq	.+6      	; 0x17e0 <pin_make_input+0x46>
    17da:	88 81       	ld	r24, Y
    17dc:	82 2b       	or	r24, r18
    17de:	88 83       	st	Y, r24
    17e0:	3f bf       	out	0x3f, r19	; 63
    17e2:	df 91       	pop	r29
    17e4:	cf 91       	pop	r28
    17e6:	08 95       	ret

000017e8 <pin_make_output>:
    17e8:	9c 01       	movw	r18, r24
    17ea:	00 97       	sbiw	r24, 0x00	; 0
    17ec:	89 f0       	breq	.+34     	; 0x1810 <pin_make_output+0x28>
    17ee:	fc 01       	movw	r30, r24
    17f0:	85 91       	lpm	r24, Z+
    17f2:	94 91       	lpm	r25, Z+
    17f4:	02 96       	adiw	r24, 0x02	; 2
    17f6:	fc 01       	movw	r30, r24
    17f8:	a5 91       	lpm	r26, Z+
    17fa:	b4 91       	lpm	r27, Z+
    17fc:	2e 5f       	subi	r18, 0xFE	; 254
    17fe:	3f 4f       	sbci	r19, 0xFF	; 255
    1800:	f9 01       	movw	r30, r18
    1802:	94 91       	lpm	r25, Z+
    1804:	2f b7       	in	r18, 0x3f	; 63
    1806:	f8 94       	cli
    1808:	8c 91       	ld	r24, X
    180a:	89 2b       	or	r24, r25
    180c:	8c 93       	st	X, r24
    180e:	2f bf       	out	0x3f, r18	; 63
    1810:	08 95       	ret

00001812 <pin_is_output>:
    1812:	9c 01       	movw	r18, r24
    1814:	00 97       	sbiw	r24, 0x00	; 0
    1816:	81 f0       	breq	.+32     	; 0x1838 <pin_is_output+0x26>
    1818:	fc 01       	movw	r30, r24
    181a:	85 91       	lpm	r24, Z+
    181c:	94 91       	lpm	r25, Z+
    181e:	02 96       	adiw	r24, 0x02	; 2
    1820:	fc 01       	movw	r30, r24
    1822:	a5 91       	lpm	r26, Z+
    1824:	b4 91       	lpm	r27, Z+
    1826:	2e 5f       	subi	r18, 0xFE	; 254
    1828:	3f 4f       	sbci	r19, 0xFF	; 255
    182a:	f9 01       	movw	r30, r18
    182c:	94 91       	lpm	r25, Z+
    182e:	8c 91       	ld	r24, X
    1830:	89 23       	and	r24, r25
    1832:	11 f0       	breq	.+4      	; 0x1838 <pin_is_output+0x26>
    1834:	8f ef       	ldi	r24, 0xFF	; 255
    1836:	08 95       	ret
    1838:	80 e0       	ldi	r24, 0x00	; 0
    183a:	08 95       	ret

0000183c <pin_toggle>:
    183c:	cf 93       	push	r28
    183e:	df 93       	push	r29
    1840:	9c 01       	movw	r18, r24
    1842:	00 97       	sbiw	r24, 0x00	; 0
    1844:	e1 f0       	breq	.+56     	; 0x187e <pin_toggle+0x42>
    1846:	fc 01       	movw	r30, r24
    1848:	85 91       	lpm	r24, Z+
    184a:	94 91       	lpm	r25, Z+
    184c:	fc 01       	movw	r30, r24
    184e:	a5 91       	lpm	r26, Z+
    1850:	b4 91       	lpm	r27, Z+
    1852:	02 96       	adiw	r24, 0x02	; 2
    1854:	fc 01       	movw	r30, r24
    1856:	c5 91       	lpm	r28, Z+
    1858:	d4 91       	lpm	r29, Z+
    185a:	2e 5f       	subi	r18, 0xFE	; 254
    185c:	3f 4f       	sbci	r19, 0xFF	; 255
    185e:	f9 01       	movw	r30, r18
    1860:	24 91       	lpm	r18, Z+
    1862:	88 81       	ld	r24, Y
    1864:	82 23       	and	r24, r18
    1866:	41 f0       	breq	.+16     	; 0x1878 <pin_toggle+0x3c>
    1868:	9f b7       	in	r25, 0x3f	; 63
    186a:	f8 94       	cli
    186c:	8c 91       	ld	r24, X
    186e:	82 27       	eor	r24, r18
    1870:	8c 93       	st	X, r24
    1872:	9f bf       	out	0x3f, r25	; 63
    1874:	00 00       	nop
    1876:	03 c0       	rjmp	.+6      	; 0x187e <pin_toggle+0x42>
    1878:	87 ef       	ldi	r24, 0xF7	; 247
    187a:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    187e:	df 91       	pop	r29
    1880:	cf 91       	pop	r28
    1882:	08 95       	ret

00001884 <pin_low>:
    1884:	cf 93       	push	r28
    1886:	df 93       	push	r29
    1888:	9c 01       	movw	r18, r24
    188a:	00 97       	sbiw	r24, 0x00	; 0
    188c:	e9 f0       	breq	.+58     	; 0x18c8 <pin_low+0x44>
    188e:	fc 01       	movw	r30, r24
    1890:	85 91       	lpm	r24, Z+
    1892:	94 91       	lpm	r25, Z+
    1894:	fc 01       	movw	r30, r24
    1896:	a5 91       	lpm	r26, Z+
    1898:	b4 91       	lpm	r27, Z+
    189a:	02 96       	adiw	r24, 0x02	; 2
    189c:	fc 01       	movw	r30, r24
    189e:	c5 91       	lpm	r28, Z+
    18a0:	d4 91       	lpm	r29, Z+
    18a2:	2e 5f       	subi	r18, 0xFE	; 254
    18a4:	3f 4f       	sbci	r19, 0xFF	; 255
    18a6:	f9 01       	movw	r30, r18
    18a8:	24 91       	lpm	r18, Z+
    18aa:	88 81       	ld	r24, Y
    18ac:	82 23       	and	r24, r18
    18ae:	49 f0       	breq	.+18     	; 0x18c2 <pin_low+0x3e>
    18b0:	9f b7       	in	r25, 0x3f	; 63
    18b2:	f8 94       	cli
    18b4:	8c 91       	ld	r24, X
    18b6:	20 95       	com	r18
    18b8:	82 23       	and	r24, r18
    18ba:	8c 93       	st	X, r24
    18bc:	9f bf       	out	0x3f, r25	; 63
    18be:	00 00       	nop
    18c0:	03 c0       	rjmp	.+6      	; 0x18c8 <pin_low+0x44>
    18c2:	87 ef       	ldi	r24, 0xF7	; 247
    18c4:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    18c8:	df 91       	pop	r29
    18ca:	cf 91       	pop	r28
    18cc:	08 95       	ret

000018ce <pin_high>:
    18ce:	cf 93       	push	r28
    18d0:	df 93       	push	r29
    18d2:	9c 01       	movw	r18, r24
    18d4:	00 97       	sbiw	r24, 0x00	; 0
    18d6:	e1 f0       	breq	.+56     	; 0x1910 <pin_high+0x42>
    18d8:	fc 01       	movw	r30, r24
    18da:	85 91       	lpm	r24, Z+
    18dc:	94 91       	lpm	r25, Z+
    18de:	fc 01       	movw	r30, r24
    18e0:	a5 91       	lpm	r26, Z+
    18e2:	b4 91       	lpm	r27, Z+
    18e4:	02 96       	adiw	r24, 0x02	; 2
    18e6:	fc 01       	movw	r30, r24
    18e8:	c5 91       	lpm	r28, Z+
    18ea:	d4 91       	lpm	r29, Z+
    18ec:	2e 5f       	subi	r18, 0xFE	; 254
    18ee:	3f 4f       	sbci	r19, 0xFF	; 255
    18f0:	f9 01       	movw	r30, r18
    18f2:	24 91       	lpm	r18, Z+
    18f4:	88 81       	ld	r24, Y
    18f6:	82 23       	and	r24, r18
    18f8:	41 f0       	breq	.+16     	; 0x190a <pin_high+0x3c>
    18fa:	9f b7       	in	r25, 0x3f	; 63
    18fc:	f8 94       	cli
    18fe:	8c 91       	ld	r24, X
    1900:	82 2b       	or	r24, r18
    1902:	8c 93       	st	X, r24
    1904:	9f bf       	out	0x3f, r25	; 63
    1906:	00 00       	nop
    1908:	03 c0       	rjmp	.+6      	; 0x1910 <pin_high+0x42>
    190a:	87 ef       	ldi	r24, 0xF7	; 247
    190c:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    1910:	df 91       	pop	r29
    1912:	cf 91       	pop	r28
    1914:	08 95       	ret

00001916 <pin_set>:
    1916:	66 23       	and	r22, r22
    1918:	19 f0       	breq	.+6      	; 0x1920 <pin_set+0xa>
    191a:	0e 94 67 0c 	call	0x18ce	; 0x18ce <pin_high>
    191e:	08 95       	ret
    1920:	0e 94 42 0c 	call	0x1884	; 0x1884 <pin_low>
    1924:	08 95       	ret

00001926 <LED_set>:
    1926:	1f 93       	push	r17
    1928:	cf 93       	push	r28
    192a:	df 93       	push	r29
    192c:	ec 01       	movw	r28, r24
    192e:	16 2f       	mov	r17, r22
    1930:	28 81       	ld	r18, Y
    1932:	39 81       	ldd	r19, Y+1	; 0x01
    1934:	21 15       	cp	r18, r1
    1936:	31 05       	cpc	r19, r1
    1938:	b1 f0       	breq	.+44     	; 0x1966 <LED_set+0x40>
    193a:	8a 81       	ldd	r24, Y+2	; 0x02
    193c:	81 fd       	sbrc	r24, 1
    193e:	06 c0       	rjmp	.+12     	; 0x194c <LED_set+0x26>
    1940:	c9 01       	movw	r24, r18
    1942:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <pin_make_output>
    1946:	8a 81       	ldd	r24, Y+2	; 0x02
    1948:	82 60       	ori	r24, 0x02	; 2
    194a:	8a 83       	std	Y+2, r24	; 0x02
    194c:	8a 81       	ldd	r24, Y+2	; 0x02
    194e:	80 fd       	sbrc	r24, 0
    1950:	05 c0       	rjmp	.+10     	; 0x195c <LED_set+0x36>
    1952:	80 e0       	ldi	r24, 0x00	; 0
    1954:	11 23       	and	r17, r17
    1956:	09 f4       	brne	.+2      	; 0x195a <LED_set+0x34>
    1958:	81 e0       	ldi	r24, 0x01	; 1
    195a:	18 2f       	mov	r17, r24
    195c:	88 81       	ld	r24, Y
    195e:	99 81       	ldd	r25, Y+1	; 0x01
    1960:	61 2f       	mov	r22, r17
    1962:	0e 94 8b 0c 	call	0x1916	; 0x1916 <pin_set>
    1966:	df 91       	pop	r29
    1968:	cf 91       	pop	r28
    196a:	1f 91       	pop	r17
    196c:	08 95       	ret

0000196e <rprintfIgnore>:
    196e:	08 95       	ret

00001970 <rprintfInit>:
    1970:	20 91 91 02 	lds	r18, 0x0291
    1974:	30 91 92 02 	lds	r19, 0x0292
    1978:	90 93 92 02 	sts	0x0292, r25
    197c:	80 93 91 02 	sts	0x0291, r24
    1980:	c9 01       	movw	r24, r18
    1982:	08 95       	ret

00001984 <rprintfChar>:
    1984:	1f 93       	push	r17
    1986:	18 2f       	mov	r17, r24
    1988:	8a 30       	cpi	r24, 0x0A	; 10
    198a:	31 f4       	brne	.+12     	; 0x1998 <rprintfChar+0x14>
    198c:	e0 91 91 02 	lds	r30, 0x0291
    1990:	f0 91 92 02 	lds	r31, 0x0292
    1994:	8d e0       	ldi	r24, 0x0D	; 13
    1996:	09 95       	icall
    1998:	e0 91 91 02 	lds	r30, 0x0291
    199c:	f0 91 92 02 	lds	r31, 0x0292
    19a0:	81 2f       	mov	r24, r17
    19a2:	09 95       	icall
    19a4:	1f 91       	pop	r17
    19a6:	08 95       	ret

000019a8 <rprintfCharN>:
    19a8:	1f 93       	push	r17
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	18 2f       	mov	r17, r24
    19b0:	eb 01       	movw	r28, r22
    19b2:	04 c0       	rjmp	.+8      	; 0x19bc <rprintfCharN+0x14>
    19b4:	81 2f       	mov	r24, r17
    19b6:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    19ba:	21 97       	sbiw	r28, 0x01	; 1
    19bc:	20 97       	sbiw	r28, 0x00	; 0
    19be:	d1 f7       	brne	.-12     	; 0x19b4 <rprintfCharN+0xc>
    19c0:	df 91       	pop	r29
    19c2:	cf 91       	pop	r28
    19c4:	1f 91       	pop	r17
    19c6:	08 95       	ret

000019c8 <rprintfStr>:
    19c8:	cf 93       	push	r28
    19ca:	df 93       	push	r29
    19cc:	ec 01       	movw	r28, r24
    19ce:	00 97       	sbiw	r24, 0x00	; 0
    19d0:	21 f4       	brne	.+8      	; 0x19da <rprintfStr+0x12>
    19d2:	06 c0       	rjmp	.+12     	; 0x19e0 <rprintfStr+0x18>
    19d4:	21 96       	adiw	r28, 0x01	; 1
    19d6:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    19da:	88 81       	ld	r24, Y
    19dc:	88 23       	and	r24, r24
    19de:	d1 f7       	brne	.-12     	; 0x19d4 <rprintfStr+0xc>
    19e0:	df 91       	pop	r29
    19e2:	cf 91       	pop	r28
    19e4:	08 95       	ret

000019e6 <rprintfProgStr>:
    19e6:	cf 93       	push	r28
    19e8:	df 93       	push	r29
    19ea:	ec 01       	movw	r28, r24
    19ec:	00 97       	sbiw	r24, 0x00	; 0
    19ee:	19 f4       	brne	.+6      	; 0x19f6 <rprintfProgStr+0x10>
    19f0:	07 c0       	rjmp	.+14     	; 0x1a00 <rprintfProgStr+0x1a>
    19f2:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    19f6:	fe 01       	movw	r30, r28
    19f8:	21 96       	adiw	r28, 0x01	; 1
    19fa:	84 91       	lpm	r24, Z+
    19fc:	88 23       	and	r24, r24
    19fe:	c9 f7       	brne	.-14     	; 0x19f2 <rprintfProgStr+0xc>
    1a00:	df 91       	pop	r29
    1a02:	cf 91       	pop	r28
    1a04:	08 95       	ret

00001a06 <rprintfCRLF>:
    1a06:	8a e0       	ldi	r24, 0x0A	; 10
    1a08:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    1a0c:	08 95       	ret

00001a0e <rprintfu04>:
    1a0e:	e8 2f       	mov	r30, r24
    1a10:	f0 e0       	ldi	r31, 0x00	; 0
    1a12:	ef 70       	andi	r30, 0x0F	; 15
    1a14:	f0 70       	andi	r31, 0x00	; 0
    1a16:	e2 5b       	subi	r30, 0xB2	; 178
    1a18:	fc 4f       	sbci	r31, 0xFC	; 252
    1a1a:	e4 91       	lpm	r30, Z+
    1a1c:	8e 2f       	mov	r24, r30
    1a1e:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    1a22:	08 95       	ret

00001a24 <rprintfu08>:
    1a24:	1f 93       	push	r17
    1a26:	18 2f       	mov	r17, r24
    1a28:	82 95       	swap	r24
    1a2a:	8f 70       	andi	r24, 0x0F	; 15
    1a2c:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <rprintfu04>
    1a30:	81 2f       	mov	r24, r17
    1a32:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <rprintfu04>
    1a36:	1f 91       	pop	r17
    1a38:	08 95       	ret

00001a3a <rprintfu16>:
    1a3a:	1f 93       	push	r17
    1a3c:	18 2f       	mov	r17, r24
    1a3e:	89 2f       	mov	r24, r25
    1a40:	0e 94 12 0d 	call	0x1a24	; 0x1a24 <rprintfu08>
    1a44:	81 2f       	mov	r24, r17
    1a46:	0e 94 12 0d 	call	0x1a24	; 0x1a24 <rprintfu08>
    1a4a:	1f 91       	pop	r17
    1a4c:	08 95       	ret

00001a4e <rprintfu32>:
    1a4e:	ef 92       	push	r14
    1a50:	ff 92       	push	r15
    1a52:	0f 93       	push	r16
    1a54:	1f 93       	push	r17
    1a56:	7b 01       	movw	r14, r22
    1a58:	8c 01       	movw	r16, r24
    1a5a:	c8 01       	movw	r24, r16
    1a5c:	aa 27       	eor	r26, r26
    1a5e:	bb 27       	eor	r27, r27
    1a60:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <rprintfu16>
    1a64:	c7 01       	movw	r24, r14
    1a66:	0e 94 1d 0d 	call	0x1a3a	; 0x1a3a <rprintfu16>
    1a6a:	1f 91       	pop	r17
    1a6c:	0f 91       	pop	r16
    1a6e:	ff 90       	pop	r15
    1a70:	ef 90       	pop	r14
    1a72:	08 95       	ret

00001a74 <rprintf1RamRom>:
    1a74:	7f 92       	push	r7
    1a76:	8f 92       	push	r8
    1a78:	9f 92       	push	r9
    1a7a:	af 92       	push	r10
    1a7c:	bf 92       	push	r11
    1a7e:	cf 92       	push	r12
    1a80:	df 92       	push	r13
    1a82:	ef 92       	push	r14
    1a84:	ff 92       	push	r15
    1a86:	0f 93       	push	r16
    1a88:	1f 93       	push	r17
    1a8a:	df 93       	push	r29
    1a8c:	cf 93       	push	r28
    1a8e:	0f 92       	push	r0
    1a90:	cd b7       	in	r28, 0x3d	; 61
    1a92:	de b7       	in	r29, 0x3e	; 62
    1a94:	79 88       	ldd	r7, Y+17	; 0x11
    1a96:	ca 88       	ldd	r12, Y+18	; 0x12
    1a98:	db 88       	ldd	r13, Y+19	; 0x13
    1a9a:	64 e1       	ldi	r22, 0x14	; 20
    1a9c:	e6 2e       	mov	r14, r22
    1a9e:	f1 2c       	mov	r15, r1
    1aa0:	ec 0e       	add	r14, r28
    1aa2:	fd 1e       	adc	r15, r29
    1aa4:	17 c0       	rjmp	.+46     	; 0x1ad4 <rprintf1RamRom+0x60>
    1aa6:	88 23       	and	r24, r24
    1aa8:	89 f4       	brne	.+34     	; 0x1acc <rprintf1RamRom+0x58>
    1aaa:	80 e0       	ldi	r24, 0x00	; 0
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	0f 90       	pop	r0
    1ab0:	cf 91       	pop	r28
    1ab2:	df 91       	pop	r29
    1ab4:	1f 91       	pop	r17
    1ab6:	0f 91       	pop	r16
    1ab8:	ff 90       	pop	r15
    1aba:	ef 90       	pop	r14
    1abc:	df 90       	pop	r13
    1abe:	cf 90       	pop	r12
    1ac0:	bf 90       	pop	r11
    1ac2:	af 90       	pop	r10
    1ac4:	9f 90       	pop	r9
    1ac6:	8f 90       	pop	r8
    1ac8:	7f 90       	pop	r7
    1aca:	08 95       	ret
    1acc:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    1ad0:	57 01       	movw	r10, r14
    1ad2:	75 01       	movw	r14, r10
    1ad4:	96 01       	movw	r18, r12
    1ad6:	2f 5f       	subi	r18, 0xFF	; 255
    1ad8:	3f 4f       	sbci	r19, 0xFF	; 255
    1ada:	77 20       	and	r7, r7
    1adc:	21 f0       	breq	.+8      	; 0x1ae6 <rprintf1RamRom+0x72>
    1ade:	f6 01       	movw	r30, r12
    1ae0:	69 01       	movw	r12, r18
    1ae2:	84 91       	lpm	r24, Z+
    1ae4:	03 c0       	rjmp	.+6      	; 0x1aec <rprintf1RamRom+0x78>
    1ae6:	f6 01       	movw	r30, r12
    1ae8:	80 81       	ld	r24, Z
    1aea:	69 01       	movw	r12, r18
    1aec:	85 32       	cpi	r24, 0x25	; 37
    1aee:	d9 f6       	brne	.-74     	; 0x1aa6 <rprintf1RamRom+0x32>
    1af0:	2f 5f       	subi	r18, 0xFF	; 255
    1af2:	3f 4f       	sbci	r19, 0xFF	; 255
    1af4:	77 20       	and	r7, r7
    1af6:	21 f0       	breq	.+8      	; 0x1b00 <rprintf1RamRom+0x8c>
    1af8:	f6 01       	movw	r30, r12
    1afa:	69 01       	movw	r12, r18
    1afc:	94 91       	lpm	r25, Z+
    1afe:	03 c0       	rjmp	.+6      	; 0x1b06 <rprintf1RamRom+0x92>
    1b00:	f6 01       	movw	r30, r12
    1b02:	90 81       	ld	r25, Z
    1b04:	69 01       	movw	r12, r18
    1b06:	93 37       	cpi	r25, 0x73	; 115
    1b08:	a1 f0       	breq	.+40     	; 0x1b32 <rprintf1RamRom+0xbe>
    1b0a:	94 37       	cpi	r25, 0x74	; 116
    1b0c:	38 f4       	brcc	.+14     	; 0x1b1c <rprintf1RamRom+0xa8>
    1b0e:	93 36       	cpi	r25, 0x63	; 99
    1b10:	d9 f0       	breq	.+54     	; 0x1b48 <rprintf1RamRom+0xd4>
    1b12:	94 36       	cpi	r25, 0x64	; 100
    1b14:	41 f0       	breq	.+16     	; 0x1b26 <rprintf1RamRom+0xb2>
    1b16:	95 32       	cpi	r25, 0x25	; 37
    1b18:	09 f5       	brne	.+66     	; 0x1b5c <rprintf1RamRom+0xe8>
    1b1a:	25 c0       	rjmp	.+74     	; 0x1b66 <rprintf1RamRom+0xf2>
    1b1c:	95 37       	cpi	r25, 0x75	; 117
    1b1e:	19 f0       	breq	.+6      	; 0x1b26 <rprintf1RamRom+0xb2>
    1b20:	98 37       	cpi	r25, 0x78	; 120
    1b22:	e1 f4       	brne	.+56     	; 0x1b5c <rprintf1RamRom+0xe8>
    1b24:	22 c0       	rjmp	.+68     	; 0x1b6a <rprintf1RamRom+0xf6>
    1b26:	00 e1       	ldi	r16, 0x10	; 16
    1b28:	17 e2       	ldi	r17, 0x27	; 39
    1b2a:	5a e0       	ldi	r21, 0x0A	; 10
    1b2c:	85 2e       	mov	r8, r21
    1b2e:	91 2c       	mov	r9, r1
    1b30:	21 c0       	rjmp	.+66     	; 0x1b74 <rprintf1RamRom+0x100>
    1b32:	42 e0       	ldi	r20, 0x02	; 2
    1b34:	a4 2e       	mov	r10, r20
    1b36:	b1 2c       	mov	r11, r1
    1b38:	ae 0c       	add	r10, r14
    1b3a:	bf 1c       	adc	r11, r15
    1b3c:	f7 01       	movw	r30, r14
    1b3e:	80 81       	ld	r24, Z
    1b40:	91 81       	ldd	r25, Z+1	; 0x01
    1b42:	0e 94 e4 0c 	call	0x19c8	; 0x19c8 <rprintfStr>
    1b46:	c5 cf       	rjmp	.-118    	; 0x1ad2 <rprintf1RamRom+0x5e>
    1b48:	32 e0       	ldi	r19, 0x02	; 2
    1b4a:	a3 2e       	mov	r10, r19
    1b4c:	b1 2c       	mov	r11, r1
    1b4e:	ae 0c       	add	r10, r14
    1b50:	bf 1c       	adc	r11, r15
    1b52:	f7 01       	movw	r30, r14
    1b54:	80 81       	ld	r24, Z
    1b56:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    1b5a:	bb cf       	rjmp	.-138    	; 0x1ad2 <rprintf1RamRom+0x5e>
    1b5c:	85 e2       	ldi	r24, 0x25	; 37
    1b5e:	99 83       	std	Y+1, r25	; 0x01
    1b60:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    1b64:	99 81       	ldd	r25, Y+1	; 0x01
    1b66:	89 2f       	mov	r24, r25
    1b68:	b1 cf       	rjmp	.-158    	; 0x1acc <rprintf1RamRom+0x58>
    1b6a:	00 e0       	ldi	r16, 0x00	; 0
    1b6c:	10 e1       	ldi	r17, 0x10	; 16
    1b6e:	20 e1       	ldi	r18, 0x10	; 16
    1b70:	82 2e       	mov	r8, r18
    1b72:	91 2c       	mov	r9, r1
    1b74:	82 e0       	ldi	r24, 0x02	; 2
    1b76:	a8 2e       	mov	r10, r24
    1b78:	b1 2c       	mov	r11, r1
    1b7a:	ae 0c       	add	r10, r14
    1b7c:	bf 1c       	adc	r11, r15
    1b7e:	f7 01       	movw	r30, r14
    1b80:	e0 80       	ld	r14, Z
    1b82:	f1 80       	ldd	r15, Z+1	; 0x01
    1b84:	94 36       	cpi	r25, 0x64	; 100
    1b86:	51 f4       	brne	.+20     	; 0x1b9c <rprintf1RamRom+0x128>
    1b88:	f7 fe       	sbrs	r15, 7
    1b8a:	14 c0       	rjmp	.+40     	; 0x1bb4 <rprintf1RamRom+0x140>
    1b8c:	f0 94       	com	r15
    1b8e:	e1 94       	neg	r14
    1b90:	f1 08       	sbc	r15, r1
    1b92:	f3 94       	inc	r15
    1b94:	8d e2       	ldi	r24, 0x2D	; 45
    1b96:	0e 94 c2 0c 	call	0x1984	; 0x1984 <rprintfChar>
    1b9a:	0c c0       	rjmp	.+24     	; 0x1bb4 <rprintf1RamRom+0x140>
    1b9c:	95 37       	cpi	r25, 0x75	; 117
    1b9e:	69 f4       	brne	.+26     	; 0x1bba <rprintf1RamRom+0x146>
    1ba0:	09 c0       	rjmp	.+18     	; 0x1bb4 <rprintf1RamRom+0x140>
    1ba2:	c8 01       	movw	r24, r16
    1ba4:	6a e0       	ldi	r22, 0x0A	; 10
    1ba6:	70 e0       	ldi	r23, 0x00	; 0
    1ba8:	0e 94 8f 1d 	call	0x3b1e	; 0x3b1e <__udivmodhi4>
    1bac:	8b 01       	movw	r16, r22
    1bae:	62 30       	cpi	r22, 0x02	; 2
    1bb0:	71 05       	cpc	r23, r1
    1bb2:	18 f0       	brcs	.+6      	; 0x1bba <rprintf1RamRom+0x146>
    1bb4:	e0 16       	cp	r14, r16
    1bb6:	f1 06       	cpc	r15, r17
    1bb8:	a0 f3       	brcs	.-24     	; 0x1ba2 <rprintf1RamRom+0x12e>
    1bba:	c7 01       	movw	r24, r14
    1bbc:	b8 01       	movw	r22, r16
    1bbe:	0e 94 8f 1d 	call	0x3b1e	; 0x3b1e <__udivmodhi4>
    1bc2:	86 2f       	mov	r24, r22
    1bc4:	0e 94 07 0d 	call	0x1a0e	; 0x1a0e <rprintfu04>
    1bc8:	c7 01       	movw	r24, r14
    1bca:	b8 01       	movw	r22, r16
    1bcc:	0e 94 8f 1d 	call	0x3b1e	; 0x3b1e <__udivmodhi4>
    1bd0:	7c 01       	movw	r14, r24
    1bd2:	c8 01       	movw	r24, r16
    1bd4:	b4 01       	movw	r22, r8
    1bd6:	0e 94 8f 1d 	call	0x3b1e	; 0x3b1e <__udivmodhi4>
    1bda:	8b 01       	movw	r16, r22
    1bdc:	61 15       	cp	r22, r1
    1bde:	71 05       	cpc	r23, r1
    1be0:	61 f7       	brne	.-40     	; 0x1bba <rprintf1RamRom+0x146>
    1be2:	77 cf       	rjmp	.-274    	; 0x1ad2 <rprintf1RamRom+0x5e>

00001be4 <__servoEndService>:
    1be4:	cf 93       	push	r28
    1be6:	df 93       	push	r29
    1be8:	ec 01       	movw	r28, r24
    1bea:	fb 01       	movw	r30, r22
    1bec:	92 81       	ldd	r25, Z+2	; 0x02
    1bee:	85 81       	ldd	r24, Z+5	; 0x05
    1bf0:	98 17       	cp	r25, r24
    1bf2:	88 f4       	brcc	.+34     	; 0x1c16 <__servoEndService+0x32>
    1bf4:	89 2f       	mov	r24, r25
    1bf6:	90 e0       	ldi	r25, 0x00	; 0
    1bf8:	88 0f       	add	r24, r24
    1bfa:	99 1f       	adc	r25, r25
    1bfc:	20 81       	ld	r18, Z
    1bfe:	31 81       	ldd	r19, Z+1	; 0x01
    1c00:	28 0f       	add	r18, r24
    1c02:	39 1f       	adc	r19, r25
    1c04:	f9 01       	movw	r30, r18
    1c06:	a5 91       	lpm	r26, Z+
    1c08:	b4 91       	lpm	r27, Z+
    1c0a:	16 96       	adiw	r26, 0x06	; 6
    1c0c:	8d 91       	ld	r24, X+
    1c0e:	9c 91       	ld	r25, X
    1c10:	17 97       	sbiw	r26, 0x07	; 7
    1c12:	0e 94 42 0c 	call	0x1884	; 0x1884 <pin_low>
    1c16:	ce 01       	movw	r24, r28
    1c18:	03 96       	adiw	r24, 0x03	; 3
    1c1a:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    1c1e:	df 91       	pop	r29
    1c20:	cf 91       	pop	r28
    1c22:	08 95       	ret

00001c24 <servosInit>:
    1c24:	2f 92       	push	r2
    1c26:	3f 92       	push	r3
    1c28:	4f 92       	push	r4
    1c2a:	5f 92       	push	r5
    1c2c:	6f 92       	push	r6
    1c2e:	7f 92       	push	r7
    1c30:	8f 92       	push	r8
    1c32:	9f 92       	push	r9
    1c34:	af 92       	push	r10
    1c36:	bf 92       	push	r11
    1c38:	cf 92       	push	r12
    1c3a:	df 92       	push	r13
    1c3c:	ef 92       	push	r14
    1c3e:	ff 92       	push	r15
    1c40:	0f 93       	push	r16
    1c42:	1f 93       	push	r17
    1c44:	cf 93       	push	r28
    1c46:	df 93       	push	r29
    1c48:	5c 01       	movw	r10, r24
    1c4a:	eb 01       	movw	r28, r22
    1c4c:	9b 01       	movw	r18, r22
    1c4e:	29 5e       	subi	r18, 0xE9	; 233
    1c50:	3f 4f       	sbci	r19, 0xFF	; 255
    1c52:	f9 01       	movw	r30, r18
    1c54:	65 90       	lpm	r6, Z+
    1c56:	74 90       	lpm	r7, Z+
    1c58:	f9 01       	movw	r30, r18
    1c5a:	25 90       	lpm	r2, Z+
    1c5c:	34 90       	lpm	r3, Z+
    1c5e:	26 96       	adiw	r28, 0x06	; 6
    1c60:	fe 01       	movw	r30, r28
    1c62:	84 91       	lpm	r24, Z+
    1c64:	26 97       	sbiw	r28, 0x06	; 6
    1c66:	88 23       	and	r24, r24
    1c68:	09 f4       	brne	.+2      	; 0x1c6c <servosInit+0x48>
    1c6a:	b7 c0       	rjmp	.+366    	; 0x1dda <servosInit+0x1b6>
    1c6c:	28 96       	adiw	r28, 0x08	; 8
    1c6e:	fe 01       	movw	r30, r28
    1c70:	84 91       	lpm	r24, Z+
    1c72:	28 97       	sbiw	r28, 0x08	; 8
    1c74:	82 30       	cpi	r24, 0x02	; 2
    1c76:	08 f4       	brcc	.+2      	; 0x1c7a <servosInit+0x56>
    1c78:	b0 c0       	rjmp	.+352    	; 0x1dda <servosInit+0x1b6>
    1c7a:	ce 01       	movw	r24, r28
    1c7c:	04 96       	adiw	r24, 0x04	; 4
    1c7e:	fc 01       	movw	r30, r24
    1c80:	a5 91       	lpm	r26, Z+
    1c82:	b4 91       	lpm	r27, Z+
    1c84:	8c 91       	ld	r24, X
    1c86:	90 e0       	ldi	r25, 0x00	; 0
    1c88:	87 70       	andi	r24, 0x07	; 7
    1c8a:	90 70       	andi	r25, 0x00	; 0
    1c8c:	89 2b       	or	r24, r25
    1c8e:	09 f4       	brne	.+2      	; 0x1c92 <servosInit+0x6e>
    1c90:	a8 c0       	rjmp	.+336    	; 0x1de2 <servosInit+0x1be>
    1c92:	fe 01       	movw	r30, r28
    1c94:	a5 91       	lpm	r26, Z+
    1c96:	b4 91       	lpm	r27, Z+
    1c98:	8d 90       	ld	r8, X+
    1c9a:	9c 90       	ld	r9, X
    1c9c:	11 97       	sbiw	r26, 0x01	; 1
    1c9e:	1e 96       	adiw	r26, 0x0e	; 14
    1ca0:	8c 91       	ld	r24, X
    1ca2:	88 23       	and	r24, r24
    1ca4:	19 f0       	breq	.+6      	; 0x1cac <servosInit+0x88>
    1ca6:	82 ef       	ldi	r24, 0xF2	; 242
    1ca8:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    1cac:	d5 01       	movw	r26, r10
    1cae:	15 96       	adiw	r26, 0x05	; 5
    1cb0:	8c 91       	ld	r24, X
    1cb2:	15 97       	sbiw	r26, 0x05	; 5
    1cb4:	12 96       	adiw	r26, 0x02	; 2
    1cb6:	8c 93       	st	X, r24
    1cb8:	64 e1       	ldi	r22, 0x14	; 20
    1cba:	70 e0       	ldi	r23, 0x00	; 0
    1cbc:	80 e0       	ldi	r24, 0x00	; 0
    1cbe:	90 e0       	ldi	r25, 0x00	; 0
    1cc0:	a4 01       	movw	r20, r8
    1cc2:	0e 94 58 10 	call	0x20b0	; 0x20b0 <ticks_per_ms>
    1cc6:	f5 01       	movw	r30, r10
    1cc8:	77 83       	std	Z+7, r23	; 0x07
    1cca:	66 83       	std	Z+6, r22	; 0x06
    1ccc:	60 70       	andi	r22, 0x00	; 0
    1cce:	70 70       	andi	r23, 0x00	; 0
    1cd0:	61 15       	cp	r22, r1
    1cd2:	71 05       	cpc	r23, r1
    1cd4:	81 05       	cpc	r24, r1
    1cd6:	91 05       	cpc	r25, r1
    1cd8:	19 f0       	breq	.+6      	; 0x1ce0 <servosInit+0xbc>
    1cda:	86 ee       	ldi	r24, 0xE6	; 230
    1cdc:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    1ce0:	d5 01       	movw	r26, r10
    1ce2:	15 96       	adiw	r26, 0x05	; 5
    1ce4:	8c 91       	ld	r24, X
    1ce6:	e8 2e       	mov	r14, r24
    1ce8:	ff 24       	eor	r15, r15
    1cea:	08 94       	sec
    1cec:	e1 08       	sbc	r14, r1
    1cee:	f1 08       	sbc	r15, r1
    1cf0:	67 01       	movw	r12, r14
    1cf2:	cc 0c       	add	r12, r12
    1cf4:	dd 1c       	adc	r13, r13
    1cf6:	3f e5       	ldi	r19, 0x5F	; 95
    1cf8:	43 2e       	mov	r4, r19
    1cfa:	33 e0       	ldi	r19, 0x03	; 3
    1cfc:	53 2e       	mov	r5, r19
    1cfe:	35 c0       	rjmp	.+106    	; 0x1d6a <servosInit+0x146>
    1d00:	d5 01       	movw	r26, r10
    1d02:	ed 91       	ld	r30, X+
    1d04:	fc 91       	ld	r31, X
    1d06:	11 97       	sbiw	r26, 0x01	; 1
    1d08:	ec 0d       	add	r30, r12
    1d0a:	fd 1d       	adc	r31, r13
    1d0c:	05 91       	lpm	r16, Z+
    1d0e:	14 91       	lpm	r17, Z+
    1d10:	f8 01       	movw	r30, r16
    1d12:	51 82       	std	Z+1, r5	; 0x01
    1d14:	40 82       	st	Z, r4
    1d16:	b5 82       	std	Z+5, r11	; 0x05
    1d18:	a4 82       	std	Z+4, r10	; 0x04
    1d1a:	16 96       	adiw	r26, 0x06	; 6
    1d1c:	8d 91       	ld	r24, X+
    1d1e:	9c 91       	ld	r25, X
    1d20:	17 97       	sbiw	r26, 0x07	; 7
    1d22:	93 8b       	std	Z+19, r25	; 0x13
    1d24:	82 8b       	std	Z+18, r24	; 0x12
    1d26:	86 81       	ldd	r24, Z+6	; 0x06
    1d28:	97 81       	ldd	r25, Z+7	; 0x07
    1d2a:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <pin_make_output>
    1d2e:	d8 01       	movw	r26, r16
    1d30:	16 96       	adiw	r26, 0x06	; 6
    1d32:	8d 91       	ld	r24, X+
    1d34:	9c 91       	ld	r25, X
    1d36:	17 97       	sbiw	r26, 0x07	; 7
    1d38:	0e 94 42 0c 	call	0x1884	; 0x1884 <pin_low>
    1d3c:	f8 01       	movw	r30, r16
    1d3e:	60 85       	ldd	r22, Z+8	; 0x08
    1d40:	71 85       	ldd	r23, Z+9	; 0x09
    1d42:	42 85       	ldd	r20, Z+10	; 0x0a
    1d44:	53 85       	ldd	r21, Z+11	; 0x0b
    1d46:	c8 01       	movw	r24, r16
    1d48:	0e 94 dd 0f 	call	0x1fba	; 0x1fba <servoSetConfig>
    1d4c:	c8 01       	movw	r24, r16
    1d4e:	6f ef       	ldi	r22, 0xFF	; 255
    1d50:	0e 94 58 0a 	call	0x14b0	; 0x14b0 <__act_setConnected>
    1d54:	c8 01       	movw	r24, r16
    1d56:	60 e0       	ldi	r22, 0x00	; 0
    1d58:	0e 94 38 0a 	call	0x1470	; 0x1470 <__act_setSpeed>
    1d5c:	08 94       	sec
    1d5e:	e1 08       	sbc	r14, r1
    1d60:	f1 08       	sbc	r15, r1
    1d62:	8e ef       	ldi	r24, 0xFE	; 254
    1d64:	9f ef       	ldi	r25, 0xFF	; 255
    1d66:	c8 0e       	add	r12, r24
    1d68:	d9 1e       	adc	r13, r25
    1d6a:	9f ef       	ldi	r25, 0xFF	; 255
    1d6c:	e9 16       	cp	r14, r25
    1d6e:	9f ef       	ldi	r25, 0xFF	; 255
    1d70:	f9 06       	cpc	r15, r25
    1d72:	31 f6       	brne	.-116    	; 0x1d00 <servosInit+0xdc>
    1d74:	0e 94 a1 11 	call	0x2342	; 0x2342 <getError>
    1d78:	88 23       	and	r24, r24
    1d7a:	d1 f5       	brne	.+116    	; 0x1df0 <servosInit+0x1cc>
    1d7c:	81 01       	movw	r16, r2
    1d7e:	00 5f       	subi	r16, 0xF0	; 240
    1d80:	1f 4f       	sbci	r17, 0xFF	; 255
    1d82:	df b6       	in	r13, 0x3f	; 63
    1d84:	f8 94       	cli
    1d86:	86 2d       	mov	r24, r6
    1d88:	97 2d       	mov	r25, r7
    1d8a:	0e 94 0b 14 	call	0x2816	; 0x2816 <compareGetThreshold>
    1d8e:	d5 01       	movw	r26, r10
    1d90:	16 96       	adiw	r26, 0x06	; 6
    1d92:	4d 91       	ld	r20, X+
    1d94:	5c 91       	ld	r21, X
    1d96:	17 97       	sbiw	r26, 0x07	; 7
    1d98:	48 0f       	add	r20, r24
    1d9a:	59 1f       	adc	r21, r25
    1d9c:	86 2d       	mov	r24, r6
    1d9e:	97 2d       	mov	r25, r7
    1da0:	6e e2       	ldi	r22, 0x2E	; 46
    1da2:	7f e0       	ldi	r23, 0x0F	; 15
    1da4:	95 01       	movw	r18, r10
    1da6:	0e 94 84 16 	call	0x2d08	; 0x2d08 <compareAttach>
    1daa:	c8 01       	movw	r24, r16
    1dac:	0e 94 0b 14 	call	0x2816	; 0x2816 <compareGetThreshold>
    1db0:	f5 01       	movw	r30, r10
    1db2:	46 81       	ldd	r20, Z+6	; 0x06
    1db4:	57 81       	ldd	r21, Z+7	; 0x07
    1db6:	48 0f       	add	r20, r24
    1db8:	59 1f       	adc	r21, r25
    1dba:	c8 01       	movw	r24, r16
    1dbc:	62 ef       	ldi	r22, 0xF2	; 242
    1dbe:	7d e0       	ldi	r23, 0x0D	; 13
    1dc0:	95 01       	movw	r18, r10
    1dc2:	0e 94 84 16 	call	0x2d08	; 0x2d08 <compareAttach>
    1dc6:	c8 01       	movw	r24, r16
    1dc8:	03 96       	adiw	r24, 0x03	; 3
    1dca:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    1dce:	ce 01       	movw	r24, r28
    1dd0:	b4 01       	movw	r22, r8
    1dd2:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <timerSetPrescaler>
    1dd6:	df be       	out	0x3f, r13	; 63
    1dd8:	0b c0       	rjmp	.+22     	; 0x1df0 <servosInit+0x1cc>
    1dda:	89 ef       	ldi	r24, 0xF9	; 249
    1ddc:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    1de0:	07 c0       	rjmp	.+14     	; 0x1df0 <servosInit+0x1cc>
    1de2:	ce 01       	movw	r24, r28
    1de4:	69 e1       	ldi	r22, 0x19	; 25
    1de6:	70 e0       	ldi	r23, 0x00	; 0
    1de8:	0e 94 93 14 	call	0x2926	; 0x2926 <timerGetBestPrescaler>
    1dec:	4c 01       	movw	r8, r24
    1dee:	5e cf       	rjmp	.-324    	; 0x1cac <servosInit+0x88>
    1df0:	df 91       	pop	r29
    1df2:	cf 91       	pop	r28
    1df4:	1f 91       	pop	r17
    1df6:	0f 91       	pop	r16
    1df8:	ff 90       	pop	r15
    1dfa:	ef 90       	pop	r14
    1dfc:	df 90       	pop	r13
    1dfe:	cf 90       	pop	r12
    1e00:	bf 90       	pop	r11
    1e02:	af 90       	pop	r10
    1e04:	9f 90       	pop	r9
    1e06:	8f 90       	pop	r8
    1e08:	7f 90       	pop	r7
    1e0a:	6f 90       	pop	r6
    1e0c:	5f 90       	pop	r5
    1e0e:	4f 90       	pop	r4
    1e10:	3f 90       	pop	r3
    1e12:	2f 90       	pop	r2
    1e14:	08 95       	ret

00001e16 <setSpeed>:
    1e16:	0f 93       	push	r16
    1e18:	1f 93       	push	r17
    1e1a:	cf 93       	push	r28
    1e1c:	df 93       	push	r29
    1e1e:	ec 01       	movw	r28, r24
    1e20:	2c 85       	ldd	r18, Y+12	; 0x0c
    1e22:	3d 85       	ldd	r19, Y+13	; 0x0d
    1e24:	0e 85       	ldd	r16, Y+14	; 0x0e
    1e26:	1f 85       	ldd	r17, Y+15	; 0x0f
    1e28:	86 2f       	mov	r24, r22
    1e2a:	99 27       	eor	r25, r25
    1e2c:	87 fd       	sbrc	r24, 7
    1e2e:	90 95       	com	r25
    1e30:	61 e8       	ldi	r22, 0x81	; 129
    1e32:	7f ef       	ldi	r23, 0xFF	; 255
    1e34:	4f e7       	ldi	r20, 0x7F	; 127
    1e36:	50 e0       	ldi	r21, 0x00	; 0
    1e38:	0e 94 7c 1b 	call	0x36f8	; 0x36f8 <interpolateU>
    1e3c:	9c 01       	movw	r18, r24
    1e3e:	88 89       	ldd	r24, Y+16	; 0x10
    1e40:	99 89       	ldd	r25, Y+17	; 0x11
    1e42:	28 17       	cp	r18, r24
    1e44:	39 07       	cpc	r19, r25
    1e46:	29 f0       	breq	.+10     	; 0x1e52 <setSpeed+0x3c>
    1e48:	8f b7       	in	r24, 0x3f	; 63
    1e4a:	f8 94       	cli
    1e4c:	39 8b       	std	Y+17, r19	; 0x11
    1e4e:	28 8b       	std	Y+16, r18	; 0x10
    1e50:	8f bf       	out	0x3f, r24	; 63
    1e52:	df 91       	pop	r29
    1e54:	cf 91       	pop	r28
    1e56:	1f 91       	pop	r17
    1e58:	0f 91       	pop	r16
    1e5a:	08 95       	ret

00001e5c <__servoStartService>:
    1e5c:	8f 92       	push	r8
    1e5e:	9f 92       	push	r9
    1e60:	af 92       	push	r10
    1e62:	bf 92       	push	r11
    1e64:	cf 92       	push	r12
    1e66:	df 92       	push	r13
    1e68:	ef 92       	push	r14
    1e6a:	ff 92       	push	r15
    1e6c:	0f 93       	push	r16
    1e6e:	1f 93       	push	r17
    1e70:	cf 93       	push	r28
    1e72:	df 93       	push	r29
    1e74:	5c 01       	movw	r10, r24
    1e76:	eb 01       	movw	r28, r22
    1e78:	8c 01       	movw	r16, r24
    1e7a:	0e 5f       	subi	r16, 0xFE	; 254
    1e7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1e7e:	f8 01       	movw	r30, r16
    1e80:	94 91       	lpm	r25, Z+
    1e82:	8c e2       	ldi	r24, 0x2C	; 44
    1e84:	98 9f       	mul	r25, r24
    1e86:	70 01       	movw	r14, r0
    1e88:	11 24       	eor	r1, r1
    1e8a:	8a e3       	ldi	r24, 0x3A	; 58
    1e8c:	92 e0       	ldi	r25, 0x02	; 2
    1e8e:	e8 0e       	add	r14, r24
    1e90:	f9 1e       	adc	r15, r25
    1e92:	f7 01       	movw	r30, r14
    1e94:	77 96       	adiw	r30, 0x17	; 23
    1e96:	85 91       	lpm	r24, Z+
    1e98:	94 91       	lpm	r25, Z+
    1e9a:	70 e1       	ldi	r23, 0x10	; 16
    1e9c:	87 2e       	mov	r8, r23
    1e9e:	91 2c       	mov	r9, r1
    1ea0:	88 0e       	add	r8, r24
    1ea2:	99 1e       	adc	r9, r25
    1ea4:	63 e1       	ldi	r22, 0x13	; 19
    1ea6:	c6 2e       	mov	r12, r22
    1ea8:	d1 2c       	mov	r13, r1
    1eaa:	c8 0e       	add	r12, r24
    1eac:	d9 1e       	adc	r13, r25
    1eae:	02 c0       	rjmp	.+4      	; 0x1eb4 <__servoStartService+0x58>
    1eb0:	0e 94 e9 0a 	call	0x15d2	; 0x15d2 <breathe>
    1eb4:	c6 01       	movw	r24, r12
    1eb6:	0e 94 00 0b 	call	0x1600	; 0x1600 <__portMaskGet>
    1eba:	88 23       	and	r24, r24
    1ebc:	c9 f7       	brne	.-14     	; 0x1eb0 <__servoStartService+0x54>
    1ebe:	88 85       	ldd	r24, Y+8	; 0x08
    1ec0:	88 23       	and	r24, r24
    1ec2:	21 f0       	breq	.+8      	; 0x1ecc <__servoStartService+0x70>
    1ec4:	8a 81       	ldd	r24, Y+2	; 0x02
    1ec6:	8f 5f       	subi	r24, 0xFF	; 255
    1ec8:	8a 83       	std	Y+2, r24	; 0x02
    1eca:	10 c0       	rjmp	.+32     	; 0x1eec <__servoStartService+0x90>
    1ecc:	8f ef       	ldi	r24, 0xFF	; 255
    1ece:	88 87       	std	Y+8, r24	; 0x08
    1ed0:	f8 01       	movw	r30, r16
    1ed2:	84 91       	lpm	r24, Z+
    1ed4:	2c e2       	ldi	r18, 0x2C	; 44
    1ed6:	82 9f       	mul	r24, r18
    1ed8:	c0 01       	movw	r24, r0
    1eda:	11 24       	eor	r1, r1
    1edc:	86 5c       	subi	r24, 0xC6	; 198
    1ede:	9d 4f       	sbci	r25, 0xFD	; 253
    1ee0:	0e 94 04 11 	call	0x2208	; 0x2208 <timerGetCounter>
    1ee4:	bc 01       	movw	r22, r24
    1ee6:	c5 01       	movw	r24, r10
    1ee8:	0e 94 d6 13 	call	0x27ac	; 0x27ac <compareSetThreshold>
    1eec:	9a 81       	ldd	r25, Y+2	; 0x02
    1eee:	8d 81       	ldd	r24, Y+5	; 0x05
    1ef0:	98 17       	cp	r25, r24
    1ef2:	09 f4       	brne	.+2      	; 0x1ef6 <__servoStartService+0x9a>
    1ef4:	3c c0       	rjmp	.+120    	; 0x1f6e <__servoStartService+0x112>
    1ef6:	89 17       	cp	r24, r25
    1ef8:	18 f4       	brcc	.+6      	; 0x1f00 <__servoStartService+0xa4>
    1efa:	1a 82       	std	Y+2, r1	; 0x02
    1efc:	1c 82       	std	Y+4, r1	; 0x04
    1efe:	1b 82       	std	Y+3, r1	; 0x03
    1f00:	8a 81       	ldd	r24, Y+2	; 0x02
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	88 0f       	add	r24, r24
    1f06:	99 1f       	adc	r25, r25
    1f08:	e8 81       	ld	r30, Y
    1f0a:	f9 81       	ldd	r31, Y+1	; 0x01
    1f0c:	e8 0f       	add	r30, r24
    1f0e:	f9 1f       	adc	r31, r25
    1f10:	05 91       	lpm	r16, Z+
    1f12:	14 91       	lpm	r17, Z+
    1f14:	c7 01       	movw	r24, r14
    1f16:	0e 94 04 11 	call	0x2208	; 0x2208 <timerGetCounter>
    1f1a:	7c 01       	movw	r14, r24
    1f1c:	f8 01       	movw	r30, r16
    1f1e:	83 81       	ldd	r24, Z+3	; 0x03
    1f20:	80 ff       	sbrs	r24, 0
    1f22:	04 c0       	rjmp	.+8      	; 0x1f2c <__servoStartService+0xd0>
    1f24:	86 81       	ldd	r24, Z+6	; 0x06
    1f26:	97 81       	ldd	r25, Z+7	; 0x07
    1f28:	0e 94 67 0c 	call	0x18ce	; 0x18ce <pin_high>
    1f2c:	f8 01       	movw	r30, r16
    1f2e:	60 89       	ldd	r22, Z+16	; 0x10
    1f30:	71 89       	ldd	r23, Z+17	; 0x11
    1f32:	6e 0d       	add	r22, r14
    1f34:	7f 1d       	adc	r23, r15
    1f36:	c4 01       	movw	r24, r8
    1f38:	0e 94 d6 13 	call	0x27ac	; 0x27ac <compareSetThreshold>
    1f3c:	c4 01       	movw	r24, r8
    1f3e:	08 96       	adiw	r24, 0x08	; 8
    1f40:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    1f44:	c6 01       	movw	r24, r12
    1f46:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    1f4a:	f8 01       	movw	r30, r16
    1f4c:	66 85       	ldd	r22, Z+14	; 0x0e
    1f4e:	77 85       	ldd	r23, Z+15	; 0x0f
    1f50:	6e 0d       	add	r22, r14
    1f52:	7f 1d       	adc	r23, r15
    1f54:	c5 01       	movw	r24, r10
    1f56:	0e 94 d6 13 	call	0x27ac	; 0x27ac <compareSetThreshold>
    1f5a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f5c:	9c 81       	ldd	r25, Y+4	; 0x04
    1f5e:	f8 01       	movw	r30, r16
    1f60:	26 85       	ldd	r18, Z+14	; 0x0e
    1f62:	37 85       	ldd	r19, Z+15	; 0x0f
    1f64:	82 0f       	add	r24, r18
    1f66:	93 1f       	adc	r25, r19
    1f68:	9c 83       	std	Y+4, r25	; 0x04
    1f6a:	8b 83       	std	Y+3, r24	; 0x03
    1f6c:	19 c0       	rjmp	.+50     	; 0x1fa0 <__servoStartService+0x144>
    1f6e:	c6 01       	movw	r24, r12
    1f70:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    1f74:	8b 81       	ldd	r24, Y+3	; 0x03
    1f76:	9c 81       	ldd	r25, Y+4	; 0x04
    1f78:	6e 81       	ldd	r22, Y+6	; 0x06
    1f7a:	7f 81       	ldd	r23, Y+7	; 0x07
    1f7c:	68 17       	cp	r22, r24
    1f7e:	79 07       	cpc	r23, r25
    1f80:	18 f4       	brcc	.+6      	; 0x1f88 <__servoStartService+0x12c>
    1f82:	c4 e6       	ldi	r28, 0x64	; 100
    1f84:	d0 e0       	ldi	r29, 0x00	; 0
    1f86:	03 c0       	rjmp	.+6      	; 0x1f8e <__servoStartService+0x132>
    1f88:	eb 01       	movw	r28, r22
    1f8a:	c8 1b       	sub	r28, r24
    1f8c:	d9 0b       	sbc	r29, r25
    1f8e:	c5 01       	movw	r24, r10
    1f90:	0e 94 0b 14 	call	0x2816	; 0x2816 <compareGetThreshold>
    1f94:	c8 0f       	add	r28, r24
    1f96:	d9 1f       	adc	r29, r25
    1f98:	c5 01       	movw	r24, r10
    1f9a:	be 01       	movw	r22, r28
    1f9c:	0e 94 d6 13 	call	0x27ac	; 0x27ac <compareSetThreshold>
    1fa0:	df 91       	pop	r29
    1fa2:	cf 91       	pop	r28
    1fa4:	1f 91       	pop	r17
    1fa6:	0f 91       	pop	r16
    1fa8:	ff 90       	pop	r15
    1faa:	ef 90       	pop	r14
    1fac:	df 90       	pop	r13
    1fae:	cf 90       	pop	r12
    1fb0:	bf 90       	pop	r11
    1fb2:	af 90       	pop	r10
    1fb4:	9f 90       	pop	r9
    1fb6:	8f 90       	pop	r8
    1fb8:	08 95       	ret

00001fba <servoSetConfig>:
    1fba:	9f 92       	push	r9
    1fbc:	af 92       	push	r10
    1fbe:	bf 92       	push	r11
    1fc0:	cf 92       	push	r12
    1fc2:	df 92       	push	r13
    1fc4:	ef 92       	push	r14
    1fc6:	ff 92       	push	r15
    1fc8:	0f 93       	push	r16
    1fca:	1f 93       	push	r17
    1fcc:	cf 93       	push	r28
    1fce:	df 93       	push	r29
    1fd0:	8c 01       	movw	r16, r24
    1fd2:	7b 01       	movw	r14, r22
    1fd4:	ea 01       	movw	r28, r20
    1fd6:	fc 01       	movw	r30, r24
    1fd8:	71 87       	std	Z+9, r23	; 0x09
    1fda:	60 87       	std	Z+8, r22	; 0x08
    1fdc:	53 87       	std	Z+11, r21	; 0x0b
    1fde:	42 87       	std	Z+10, r20	; 0x0a
    1fe0:	84 81       	ldd	r24, Z+4	; 0x04
    1fe2:	95 81       	ldd	r25, Z+5	; 0x05
    1fe4:	89 2b       	or	r24, r25
    1fe6:	09 f4       	brne	.+2      	; 0x1fea <servoSetConfig+0x30>
    1fe8:	57 c0       	rjmp	.+174    	; 0x2098 <servoSetConfig+0xde>
    1fea:	9f b6       	in	r9, 0x3f	; 63
    1fec:	f8 94       	cli
    1fee:	f8 01       	movw	r30, r16
    1ff0:	82 89       	ldd	r24, Z+18	; 0x12
    1ff2:	93 89       	ldd	r25, Z+19	; 0x13
    1ff4:	68 ee       	ldi	r22, 0xE8	; 232
    1ff6:	73 e0       	ldi	r23, 0x03	; 3
    1ff8:	0e 94 8f 1d 	call	0x3b1e	; 0x3b1e <__udivmodhi4>
    1ffc:	5b 01       	movw	r10, r22
    1ffe:	cc 24       	eor	r12, r12
    2000:	dd 24       	eor	r13, r13
    2002:	b7 01       	movw	r22, r14
    2004:	6c 1b       	sub	r22, r28
    2006:	7d 0b       	sbc	r23, r29
    2008:	80 e0       	ldi	r24, 0x00	; 0
    200a:	90 e0       	ldi	r25, 0x00	; 0
    200c:	a6 01       	movw	r20, r12
    200e:	95 01       	movw	r18, r10
    2010:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    2014:	24 e1       	ldi	r18, 0x14	; 20
    2016:	30 e0       	ldi	r19, 0x00	; 0
    2018:	40 e0       	ldi	r20, 0x00	; 0
    201a:	50 e0       	ldi	r21, 0x00	; 0
    201c:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    2020:	c9 01       	movw	r24, r18
    2022:	da 01       	movw	r26, r20
    2024:	9c 01       	movw	r18, r24
    2026:	ad 01       	movw	r20, r26
    2028:	da 01       	movw	r26, r20
    202a:	c9 01       	movw	r24, r18
    202c:	80 70       	andi	r24, 0x00	; 0
    202e:	90 70       	andi	r25, 0x00	; 0
    2030:	00 97       	sbiw	r24, 0x00	; 0
    2032:	a1 05       	cpc	r26, r1
    2034:	b1 05       	cpc	r27, r1
    2036:	39 f0       	breq	.+14     	; 0x2046 <servoSetConfig+0x8c>
    2038:	86 ee       	ldi	r24, 0xE6	; 230
    203a:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    203e:	2f ef       	ldi	r18, 0xFF	; 255
    2040:	3f ef       	ldi	r19, 0xFF	; 255
    2042:	40 e0       	ldi	r20, 0x00	; 0
    2044:	50 e0       	ldi	r21, 0x00	; 0
    2046:	f8 01       	movw	r30, r16
    2048:	35 87       	std	Z+13, r19	; 0x0d
    204a:	24 87       	std	Z+12, r18	; 0x0c
    204c:	ce 0d       	add	r28, r14
    204e:	df 1d       	adc	r29, r15
    2050:	be 01       	movw	r22, r28
    2052:	80 e0       	ldi	r24, 0x00	; 0
    2054:	90 e0       	ldi	r25, 0x00	; 0
    2056:	a6 01       	movw	r20, r12
    2058:	95 01       	movw	r18, r10
    205a:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    205e:	24 e1       	ldi	r18, 0x14	; 20
    2060:	30 e0       	ldi	r19, 0x00	; 0
    2062:	40 e0       	ldi	r20, 0x00	; 0
    2064:	50 e0       	ldi	r21, 0x00	; 0
    2066:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    206a:	c9 01       	movw	r24, r18
    206c:	da 01       	movw	r26, r20
    206e:	9c 01       	movw	r18, r24
    2070:	ad 01       	movw	r20, r26
    2072:	da 01       	movw	r26, r20
    2074:	c9 01       	movw	r24, r18
    2076:	80 70       	andi	r24, 0x00	; 0
    2078:	90 70       	andi	r25, 0x00	; 0
    207a:	00 97       	sbiw	r24, 0x00	; 0
    207c:	a1 05       	cpc	r26, r1
    207e:	b1 05       	cpc	r27, r1
    2080:	39 f0       	breq	.+14     	; 0x2090 <servoSetConfig+0xd6>
    2082:	86 ee       	ldi	r24, 0xE6	; 230
    2084:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2088:	2f ef       	ldi	r18, 0xFF	; 255
    208a:	3f ef       	ldi	r19, 0xFF	; 255
    208c:	40 e0       	ldi	r20, 0x00	; 0
    208e:	50 e0       	ldi	r21, 0x00	; 0
    2090:	f8 01       	movw	r30, r16
    2092:	37 87       	std	Z+15, r19	; 0x0f
    2094:	26 87       	std	Z+14, r18	; 0x0e
    2096:	9f be       	out	0x3f, r9	; 63
    2098:	df 91       	pop	r29
    209a:	cf 91       	pop	r28
    209c:	1f 91       	pop	r17
    209e:	0f 91       	pop	r16
    20a0:	ff 90       	pop	r15
    20a2:	ef 90       	pop	r14
    20a4:	df 90       	pop	r13
    20a6:	cf 90       	pop	r12
    20a8:	bf 90       	pop	r11
    20aa:	af 90       	pop	r10
    20ac:	9f 90       	pop	r9
    20ae:	08 95       	ret

000020b0 <ticks_per_ms>:
    20b0:	ef 92       	push	r14
    20b2:	ff 92       	push	r15
    20b4:	0f 93       	push	r16
    20b6:	1f 93       	push	r17
    20b8:	7a 01       	movw	r14, r20
    20ba:	20 91 04 02 	lds	r18, 0x0204
    20be:	30 91 05 02 	lds	r19, 0x0205
    20c2:	40 e0       	ldi	r20, 0x00	; 0
    20c4:	50 e0       	ldi	r21, 0x00	; 0
    20c6:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    20ca:	00 e0       	ldi	r16, 0x00	; 0
    20cc:	10 e0       	ldi	r17, 0x00	; 0
    20ce:	a8 01       	movw	r20, r16
    20d0:	97 01       	movw	r18, r14
    20d2:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    20d6:	ca 01       	movw	r24, r20
    20d8:	b9 01       	movw	r22, r18
    20da:	1f 91       	pop	r17
    20dc:	0f 91       	pop	r16
    20de:	ff 90       	pop	r15
    20e0:	ef 90       	pop	r14
    20e2:	08 95       	ret

000020e4 <delay_cycles>:
    20e4:	61 30       	cpi	r22, 0x01	; 1
    20e6:	23 e0       	ldi	r18, 0x03	; 3
    20e8:	72 07       	cpc	r23, r18
    20ea:	20 e0       	ldi	r18, 0x00	; 0
    20ec:	82 07       	cpc	r24, r18
    20ee:	20 e0       	ldi	r18, 0x00	; 0
    20f0:	92 07       	cpc	r25, r18
    20f2:	48 f4       	brcc	.+18     	; 0x2106 <delay_cycles+0x22>
    20f4:	23 e0       	ldi	r18, 0x03	; 3
    20f6:	30 e0       	ldi	r19, 0x00	; 0
    20f8:	40 e0       	ldi	r20, 0x00	; 0
    20fa:	50 e0       	ldi	r21, 0x00	; 0
    20fc:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    2100:	2a 95       	dec	r18
    2102:	f1 f7       	brne	.-4      	; 0x2100 <delay_cycles+0x1c>
    2104:	08 95       	ret
    2106:	9b 01       	movw	r18, r22
    2108:	ac 01       	movw	r20, r24
    210a:	82 e0       	ldi	r24, 0x02	; 2
    210c:	56 95       	lsr	r21
    210e:	47 95       	ror	r20
    2110:	37 95       	ror	r19
    2112:	27 95       	ror	r18
    2114:	8a 95       	dec	r24
    2116:	d1 f7       	brne	.-12     	; 0x210c <delay_cycles+0x28>
    2118:	da 01       	movw	r26, r20
    211a:	c9 01       	movw	r24, r18
    211c:	20 30       	cpi	r18, 0x00	; 0
    211e:	60 e0       	ldi	r22, 0x00	; 0
    2120:	36 07       	cpc	r19, r22
    2122:	61 e0       	ldi	r22, 0x01	; 1
    2124:	46 07       	cpc	r20, r22
    2126:	60 e0       	ldi	r22, 0x00	; 0
    2128:	56 07       	cpc	r21, r22
    212a:	20 f0       	brcs	.+8      	; 0x2134 <delay_cycles+0x50>
    212c:	8f ef       	ldi	r24, 0xFF	; 255
    212e:	9f ef       	ldi	r25, 0xFF	; 255
    2130:	a0 e0       	ldi	r26, 0x00	; 0
    2132:	b0 e0       	ldi	r27, 0x00	; 0
    2134:	fc 01       	movw	r30, r24
    2136:	31 97       	sbiw	r30, 0x01	; 1
    2138:	f1 f7       	brne	.-4      	; 0x2136 <delay_cycles+0x52>
    213a:	a0 e0       	ldi	r26, 0x00	; 0
    213c:	b0 e0       	ldi	r27, 0x00	; 0
    213e:	28 1b       	sub	r18, r24
    2140:	39 0b       	sbc	r19, r25
    2142:	4a 0b       	sbc	r20, r26
    2144:	5b 0b       	sbc	r21, r27
    2146:	41 f7       	brne	.-48     	; 0x2118 <delay_cycles+0x34>
    2148:	08 95       	ret

0000214a <__timerPrescalerIndex>:
    214a:	fc 01       	movw	r30, r24
    214c:	37 96       	adiw	r30, 0x07	; 7
    214e:	e4 91       	lpm	r30, Z+
    2150:	ee 23       	and	r30, r30
    2152:	21 f4       	brne	.+8      	; 0x215c <__timerPrescalerIndex+0x12>
    2154:	26 e0       	ldi	r18, 0x06	; 6
    2156:	83 e6       	ldi	r24, 0x63	; 99
    2158:	93 e0       	ldi	r25, 0x03	; 3
    215a:	03 c0       	rjmp	.+6      	; 0x2162 <__timerPrescalerIndex+0x18>
    215c:	28 e0       	ldi	r18, 0x08	; 8
    215e:	8f e6       	ldi	r24, 0x6F	; 111
    2160:	93 e0       	ldi	r25, 0x03	; 3
    2162:	42 2f       	mov	r20, r18
    2164:	41 50       	subi	r20, 0x01	; 1
    2166:	24 2f       	mov	r18, r20
    2168:	33 27       	eor	r19, r19
    216a:	27 fd       	sbrc	r18, 7
    216c:	30 95       	com	r19
    216e:	22 0f       	add	r18, r18
    2170:	33 1f       	adc	r19, r19
    2172:	28 0f       	add	r18, r24
    2174:	39 1f       	adc	r19, r25
    2176:	0e c0       	rjmp	.+28     	; 0x2194 <__timerPrescalerIndex+0x4a>
    2178:	f9 01       	movw	r30, r18
    217a:	85 91       	lpm	r24, Z+
    217c:	94 91       	lpm	r25, Z+
    217e:	22 50       	subi	r18, 0x02	; 2
    2180:	30 40       	sbci	r19, 0x00	; 0
    2182:	86 17       	cp	r24, r22
    2184:	97 07       	cpc	r25, r23
    2186:	29 f4       	brne	.+10     	; 0x2192 <__timerPrescalerIndex+0x48>
    2188:	24 2f       	mov	r18, r20
    218a:	33 27       	eor	r19, r19
    218c:	27 fd       	sbrc	r18, 7
    218e:	30 95       	com	r19
    2190:	05 c0       	rjmp	.+10     	; 0x219c <__timerPrescalerIndex+0x52>
    2192:	41 50       	subi	r20, 0x01	; 1
    2194:	47 ff       	sbrs	r20, 7
    2196:	f0 cf       	rjmp	.-32     	; 0x2178 <__timerPrescalerIndex+0x2e>
    2198:	2f ef       	ldi	r18, 0xFF	; 255
    219a:	3f ef       	ldi	r19, 0xFF	; 255
    219c:	c9 01       	movw	r24, r18
    219e:	08 95       	ret

000021a0 <timerGetClosestPrescale>:
    21a0:	fc 01       	movw	r30, r24
    21a2:	cb 01       	movw	r24, r22
    21a4:	24 e0       	ldi	r18, 0x04	; 4
    21a6:	61 30       	cpi	r22, 0x01	; 1
    21a8:	72 07       	cpc	r23, r18
    21aa:	10 f0       	brcs	.+4      	; 0x21b0 <timerGetClosestPrescale+0x10>
    21ac:	80 e0       	ldi	r24, 0x00	; 0
    21ae:	94 e0       	ldi	r25, 0x04	; 4
    21b0:	ac 01       	movw	r20, r24
    21b2:	00 97       	sbiw	r24, 0x00	; 0
    21b4:	11 f4       	brne	.+4      	; 0x21ba <timerGetClosestPrescale+0x1a>
    21b6:	41 e0       	ldi	r20, 0x01	; 1
    21b8:	50 e0       	ldi	r21, 0x00	; 0
    21ba:	37 96       	adiw	r30, 0x07	; 7
    21bc:	74 91       	lpm	r23, Z+
    21be:	77 23       	and	r23, r23
    21c0:	21 f4       	brne	.+8      	; 0x21ca <timerGetClosestPrescale+0x2a>
    21c2:	e3 e6       	ldi	r30, 0x63	; 99
    21c4:	f3 e0       	ldi	r31, 0x03	; 3
    21c6:	86 e0       	ldi	r24, 0x06	; 6
    21c8:	03 c0       	rjmp	.+6      	; 0x21d0 <timerGetClosestPrescale+0x30>
    21ca:	ef e6       	ldi	r30, 0x6F	; 111
    21cc:	f3 e0       	ldi	r31, 0x03	; 3
    21ce:	88 e0       	ldi	r24, 0x08	; 8
    21d0:	68 2f       	mov	r22, r24
    21d2:	61 50       	subi	r22, 0x01	; 1
    21d4:	26 2f       	mov	r18, r22
    21d6:	33 27       	eor	r19, r19
    21d8:	27 fd       	sbrc	r18, 7
    21da:	30 95       	com	r19
    21dc:	22 0f       	add	r18, r18
    21de:	33 1f       	adc	r19, r19
    21e0:	2e 0f       	add	r18, r30
    21e2:	3f 1f       	adc	r19, r31
    21e4:	09 c0       	rjmp	.+18     	; 0x21f8 <timerGetClosestPrescale+0x58>
    21e6:	f9 01       	movw	r30, r18
    21e8:	85 91       	lpm	r24, Z+
    21ea:	94 91       	lpm	r25, Z+
    21ec:	22 50       	subi	r18, 0x02	; 2
    21ee:	30 40       	sbci	r19, 0x00	; 0
    21f0:	84 17       	cp	r24, r20
    21f2:	95 07       	cpc	r25, r21
    21f4:	21 f0       	breq	.+8      	; 0x21fe <timerGetClosestPrescale+0x5e>
    21f6:	61 50       	subi	r22, 0x01	; 1
    21f8:	67 ff       	sbrs	r22, 7
    21fa:	f5 cf       	rjmp	.-22     	; 0x21e6 <timerGetClosestPrescale+0x46>
    21fc:	02 c0       	rjmp	.+4      	; 0x2202 <__stack+0x3>
    21fe:	ca 01       	movw	r24, r20
    2200:	08 95       	ret
    2202:	4f 5f       	subi	r20, 0xFF	; 255
    2204:	5f 4f       	sbci	r21, 0xFF	; 255
    2206:	db cf       	rjmp	.-74     	; 0x21be <timerGetClosestPrescale+0x1e>

00002208 <timerGetCounter>:
    2208:	9c 01       	movw	r18, r24
    220a:	02 96       	adiw	r24, 0x02	; 2
    220c:	fc 01       	movw	r30, r24
    220e:	a5 91       	lpm	r26, Z+
    2210:	b4 91       	lpm	r27, Z+
    2212:	2a 5f       	subi	r18, 0xFA	; 250
    2214:	3f 4f       	sbci	r19, 0xFF	; 255
    2216:	f9 01       	movw	r30, r18
    2218:	84 91       	lpm	r24, Z+
    221a:	88 23       	and	r24, r24
    221c:	19 f0       	breq	.+6      	; 0x2224 <timerGetCounter+0x1c>
    221e:	2d 91       	ld	r18, X+
    2220:	3c 91       	ld	r19, X
    2222:	03 c0       	rjmp	.+6      	; 0x222a <timerGetCounter+0x22>
    2224:	8c 91       	ld	r24, X
    2226:	28 2f       	mov	r18, r24
    2228:	30 e0       	ldi	r19, 0x00	; 0
    222a:	c9 01       	movw	r24, r18
    222c:	08 95       	ret

0000222e <compareSetOutputMode>:
    222e:	9c 01       	movw	r18, r24
    2230:	0b 96       	adiw	r24, 0x0b	; 11
    2232:	fc 01       	movw	r30, r24
    2234:	a5 91       	lpm	r26, Z+
    2236:	b4 91       	lpm	r27, Z+
    2238:	23 5f       	subi	r18, 0xF3	; 243
    223a:	3f 4f       	sbci	r19, 0xFF	; 255
    223c:	f9 01       	movw	r30, r18
    223e:	24 91       	lpm	r18, Z+
    2240:	70 e0       	ldi	r23, 0x00	; 0
    2242:	02 2e       	mov	r0, r18
    2244:	02 c0       	rjmp	.+4      	; 0x224a <compareSetOutputMode+0x1c>
    2246:	66 0f       	add	r22, r22
    2248:	77 1f       	adc	r23, r23
    224a:	0a 94       	dec	r0
    224c:	e2 f7       	brpl	.-8      	; 0x2246 <compareSetOutputMode+0x18>
    224e:	81 e0       	ldi	r24, 0x01	; 1
    2250:	90 e0       	ldi	r25, 0x00	; 0
    2252:	02 c0       	rjmp	.+4      	; 0x2258 <compareSetOutputMode+0x2a>
    2254:	88 0f       	add	r24, r24
    2256:	99 1f       	adc	r25, r25
    2258:	2a 95       	dec	r18
    225a:	e2 f7       	brpl	.-8      	; 0x2254 <compareSetOutputMode+0x26>
    225c:	28 2f       	mov	r18, r24
    225e:	22 0f       	add	r18, r18
    2260:	28 2b       	or	r18, r24
    2262:	9c 91       	ld	r25, X
    2264:	82 2f       	mov	r24, r18
    2266:	86 23       	and	r24, r22
    2268:	20 95       	com	r18
    226a:	29 23       	and	r18, r25
    226c:	82 2b       	or	r24, r18
    226e:	8c 93       	st	X, r24
    2270:	08 95       	ret

00002272 <compareGetOutputMode>:
    2272:	9c 01       	movw	r18, r24
    2274:	0b 96       	adiw	r24, 0x0b	; 11
    2276:	fc 01       	movw	r30, r24
    2278:	a5 91       	lpm	r26, Z+
    227a:	b4 91       	lpm	r27, Z+
    227c:	23 5f       	subi	r18, 0xF3	; 243
    227e:	3f 4f       	sbci	r19, 0xFF	; 255
    2280:	f9 01       	movw	r30, r18
    2282:	44 91       	lpm	r20, Z+
    2284:	21 e0       	ldi	r18, 0x01	; 1
    2286:	30 e0       	ldi	r19, 0x00	; 0
    2288:	04 2e       	mov	r0, r20
    228a:	02 c0       	rjmp	.+4      	; 0x2290 <compareGetOutputMode+0x1e>
    228c:	22 0f       	add	r18, r18
    228e:	33 1f       	adc	r19, r19
    2290:	0a 94       	dec	r0
    2292:	e2 f7       	brpl	.-8      	; 0x228c <compareGetOutputMode+0x1a>
    2294:	82 2f       	mov	r24, r18
    2296:	88 0f       	add	r24, r24
    2298:	82 2b       	or	r24, r18
    229a:	2c 91       	ld	r18, X
    229c:	82 23       	and	r24, r18
    229e:	90 e0       	ldi	r25, 0x00	; 0
    22a0:	02 c0       	rjmp	.+4      	; 0x22a6 <compareGetOutputMode+0x34>
    22a2:	95 95       	asr	r25
    22a4:	87 95       	ror	r24
    22a6:	4a 95       	dec	r20
    22a8:	e2 f7       	brpl	.-8      	; 0x22a2 <compareGetOutputMode+0x30>
    22aa:	08 95       	ret

000022ac <__timer_overflowService>:
    22ac:	cf 93       	push	r28
    22ae:	df 93       	push	r29
    22b0:	ac 01       	movw	r20, r24
    22b2:	fc 01       	movw	r30, r24
    22b4:	c5 91       	lpm	r28, Z+
    22b6:	d4 91       	lpm	r29, Z+
    22b8:	8a 81       	ldd	r24, Y+2	; 0x02
    22ba:	9b 81       	ldd	r25, Y+3	; 0x03
    22bc:	ac 81       	ldd	r26, Y+4	; 0x04
    22be:	bd 81       	ldd	r27, Y+5	; 0x05
    22c0:	01 96       	adiw	r24, 0x01	; 1
    22c2:	a1 1d       	adc	r26, r1
    22c4:	b1 1d       	adc	r27, r1
    22c6:	8a 83       	std	Y+2, r24	; 0x02
    22c8:	9b 83       	std	Y+3, r25	; 0x03
    22ca:	ac 83       	std	Y+4, r26	; 0x04
    22cc:	bd 83       	std	Y+5, r27	; 0x05
    22ce:	2e 81       	ldd	r18, Y+6	; 0x06
    22d0:	3f 81       	ldd	r19, Y+7	; 0x07
    22d2:	21 15       	cp	r18, r1
    22d4:	31 05       	cpc	r19, r1
    22d6:	29 f0       	breq	.+10     	; 0x22e2 <__timer_overflowService+0x36>
    22d8:	68 85       	ldd	r22, Y+8	; 0x08
    22da:	79 85       	ldd	r23, Y+9	; 0x09
    22dc:	ca 01       	movw	r24, r20
    22de:	f9 01       	movw	r30, r18
    22e0:	09 95       	icall
    22e2:	df 91       	pop	r29
    22e4:	cf 91       	pop	r28
    22e6:	08 95       	ret

000022e8 <__timer_captureService>:
    22e8:	fc 01       	movw	r30, r24
    22ea:	a5 91       	lpm	r26, Z+
    22ec:	b4 91       	lpm	r27, Z+
    22ee:	1a 96       	adiw	r26, 0x0a	; 10
    22f0:	ed 91       	ld	r30, X+
    22f2:	fc 91       	ld	r31, X
    22f4:	1b 97       	sbiw	r26, 0x0b	; 11
    22f6:	30 97       	sbiw	r30, 0x00	; 0
    22f8:	29 f0       	breq	.+10     	; 0x2304 <__timer_captureService+0x1c>
    22fa:	1c 96       	adiw	r26, 0x0c	; 12
    22fc:	6d 91       	ld	r22, X+
    22fe:	7c 91       	ld	r23, X
    2300:	1d 97       	sbiw	r26, 0x0d	; 13
    2302:	09 95       	icall
    2304:	08 95       	ret

00002306 <__timer_compareService>:
    2306:	cf 93       	push	r28
    2308:	df 93       	push	r29
    230a:	ac 01       	movw	r20, r24
    230c:	fc 01       	movw	r30, r24
    230e:	c5 91       	lpm	r28, Z+
    2310:	d4 91       	lpm	r29, Z+
    2312:	8c 81       	ldd	r24, Y+4	; 0x04
    2314:	9d 81       	ldd	r25, Y+5	; 0x05
    2316:	ae 81       	ldd	r26, Y+6	; 0x06
    2318:	bf 81       	ldd	r27, Y+7	; 0x07
    231a:	01 96       	adiw	r24, 0x01	; 1
    231c:	a1 1d       	adc	r26, r1
    231e:	b1 1d       	adc	r27, r1
    2320:	8c 83       	std	Y+4, r24	; 0x04
    2322:	9d 83       	std	Y+5, r25	; 0x05
    2324:	ae 83       	std	Y+6, r26	; 0x06
    2326:	bf 83       	std	Y+7, r27	; 0x07
    2328:	28 81       	ld	r18, Y
    232a:	39 81       	ldd	r19, Y+1	; 0x01
    232c:	21 15       	cp	r18, r1
    232e:	31 05       	cpc	r19, r1
    2330:	29 f0       	breq	.+10     	; 0x233c <__timer_compareService+0x36>
    2332:	6a 81       	ldd	r22, Y+2	; 0x02
    2334:	7b 81       	ldd	r23, Y+3	; 0x03
    2336:	ca 01       	movw	r24, r20
    2338:	f9 01       	movw	r30, r18
    233a:	09 95       	icall
    233c:	df 91       	pop	r29
    233e:	cf 91       	pop	r28
    2340:	08 95       	ret

00002342 <getError>:
    2342:	80 91 b1 03 	lds	r24, 0x03B1
    2346:	08 95       	ret

00002348 <setErrorLog>:
    2348:	90 93 b5 03 	sts	0x03B5, r25
    234c:	80 93 b4 03 	sts	0x03B4, r24
    2350:	08 95       	ret

00002352 <__error_flash>:
    2352:	8f 92       	push	r8
    2354:	9f 92       	push	r9
    2356:	af 92       	push	r10
    2358:	bf 92       	push	r11
    235a:	cf 92       	push	r12
    235c:	df 92       	push	r13
    235e:	ef 92       	push	r14
    2360:	ff 92       	push	r15
    2362:	0f 93       	push	r16
    2364:	1f 93       	push	r17
    2366:	cf 93       	push	r28
    2368:	df 93       	push	r29
    236a:	98 2e       	mov	r9, r24
    236c:	89 2e       	mov	r8, r25
    236e:	5a 01       	movw	r10, r20
    2370:	6b 01       	movw	r12, r22
    2372:	c8 2f       	mov	r28, r24
    2374:	d9 2f       	mov	r29, r25
    2376:	89 81       	ldd	r24, Y+1	; 0x01
    2378:	88 23       	and	r24, r24
    237a:	41 f4       	brne	.+16     	; 0x238c <__error_flash+0x3a>
    237c:	88 81       	ld	r24, Y
    237e:	18 16       	cp	r1, r24
    2380:	14 f4       	brge	.+4      	; 0x2386 <__error_flash+0x34>
    2382:	88 81       	ld	r24, Y
    2384:	02 c0       	rjmp	.+4      	; 0x238a <__error_flash+0x38>
    2386:	88 81       	ld	r24, Y
    2388:	81 95       	neg	r24
    238a:	89 83       	std	Y+1, r24	; 0x01
    238c:	88 81       	ld	r24, Y
    238e:	87 fd       	sbrc	r24, 7
    2390:	08 c0       	rjmp	.+16     	; 0x23a2 <__error_flash+0x50>
    2392:	00 e2       	ldi	r16, 0x20	; 32
    2394:	e0 2e       	mov	r14, r16
    2396:	01 ea       	ldi	r16, 0xA1	; 161
    2398:	f0 2e       	mov	r15, r16
    239a:	07 e0       	ldi	r16, 0x07	; 7
    239c:	00 2f       	mov	r16, r16
    239e:	11 2d       	mov	r17, r1
    23a0:	07 c0       	rjmp	.+14     	; 0x23b0 <__error_flash+0x5e>
    23a2:	10 e9       	ldi	r17, 0x90	; 144
    23a4:	e1 2e       	mov	r14, r17
    23a6:	10 ed       	ldi	r17, 0xD0	; 208
    23a8:	f1 2e       	mov	r15, r17
    23aa:	13 e0       	ldi	r17, 0x03	; 3
    23ac:	01 2f       	mov	r16, r17
    23ae:	11 2d       	mov	r17, r1
    23b0:	8a 81       	ldd	r24, Y+2	; 0x02
    23b2:	80 ff       	sbrs	r24, 0
    23b4:	1d c0       	rjmp	.+58     	; 0x23f0 <__error_flash+0x9e>
    23b6:	80 91 76 03 	lds	r24, 0x0376
    23ba:	90 91 77 03 	lds	r25, 0x0377
    23be:	0e 94 09 0c 	call	0x1812	; 0x1812 <pin_is_output>
    23c2:	88 23       	and	r24, r24
    23c4:	29 f0       	breq	.+10     	; 0x23d0 <__error_flash+0x7e>
    23c6:	86 e7       	ldi	r24, 0x76	; 118
    23c8:	93 e0       	ldi	r25, 0x03	; 3
    23ca:	60 e0       	ldi	r22, 0x00	; 0
    23cc:	0e 94 93 0c 	call	0x1926	; 0x1926 <LED_set>
    23d0:	89 81       	ldd	r24, Y+1	; 0x01
    23d2:	81 50       	subi	r24, 0x01	; 1
    23d4:	89 83       	std	Y+1, r24	; 0x01
    23d6:	89 81       	ldd	r24, Y+1	; 0x01
    23d8:	88 23       	and	r24, r24
    23da:	39 f4       	brne	.+14     	; 0x23ea <__error_flash+0x98>
    23dc:	b0 e8       	ldi	r27, 0x80	; 128
    23de:	eb 2e       	mov	r14, r27
    23e0:	b4 e8       	ldi	r27, 0x84	; 132
    23e2:	fb 2e       	mov	r15, r27
    23e4:	be e1       	ldi	r27, 0x1E	; 30
    23e6:	0b 2f       	mov	r16, r27
    23e8:	11 2d       	mov	r17, r1
    23ea:	8a 81       	ldd	r24, Y+2	; 0x02
    23ec:	8e 7f       	andi	r24, 0xFE	; 254
    23ee:	0f c0       	rjmp	.+30     	; 0x240e <__error_flash+0xbc>
    23f0:	80 91 76 03 	lds	r24, 0x0376
    23f4:	90 91 77 03 	lds	r25, 0x0377
    23f8:	0e 94 09 0c 	call	0x1812	; 0x1812 <pin_is_output>
    23fc:	88 23       	and	r24, r24
    23fe:	29 f0       	breq	.+10     	; 0x240a <__error_flash+0xb8>
    2400:	86 e7       	ldi	r24, 0x76	; 118
    2402:	93 e0       	ldi	r25, 0x03	; 3
    2404:	6f ef       	ldi	r22, 0xFF	; 255
    2406:	0e 94 93 0c 	call	0x1926	; 0x1926 <LED_set>
    240a:	8a 81       	ldd	r24, Y+2	; 0x02
    240c:	81 60       	ori	r24, 0x01	; 1
    240e:	8a 83       	std	Y+2, r24	; 0x02
    2410:	89 ea       	ldi	r24, 0xA9	; 169
    2412:	91 e1       	ldi	r25, 0x11	; 17
    2414:	69 2d       	mov	r22, r9
    2416:	78 2d       	mov	r23, r8
    2418:	a6 01       	movw	r20, r12
    241a:	95 01       	movw	r18, r10
    241c:	0e 94 c9 1c 	call	0x3992	; 0x3992 <scheduleJob>
    2420:	df 91       	pop	r29
    2422:	cf 91       	pop	r28
    2424:	1f 91       	pop	r17
    2426:	0f 91       	pop	r16
    2428:	ff 90       	pop	r15
    242a:	ef 90       	pop	r14
    242c:	df 90       	pop	r13
    242e:	cf 90       	pop	r12
    2430:	bf 90       	pop	r11
    2432:	af 90       	pop	r10
    2434:	9f 90       	pop	r9
    2436:	8f 90       	pop	r8
    2438:	08 95       	ret

0000243a <__timerRead>:
    243a:	4f 92       	push	r4
    243c:	5f 92       	push	r5
    243e:	6f 92       	push	r6
    2440:	7f 92       	push	r7
    2442:	9f 92       	push	r9
    2444:	af 92       	push	r10
    2446:	bf 92       	push	r11
    2448:	cf 92       	push	r12
    244a:	df 92       	push	r13
    244c:	ef 92       	push	r14
    244e:	ff 92       	push	r15
    2450:	0f 93       	push	r16
    2452:	1f 93       	push	r17
    2454:	cf 93       	push	r28
    2456:	df 93       	push	r29
    2458:	dc 01       	movw	r26, r24
    245a:	3b 01       	movw	r6, r22
    245c:	2a 01       	movw	r4, r20
    245e:	fc 01       	movw	r30, r24
    2460:	c5 91       	lpm	r28, Z+
    2462:	d4 91       	lpm	r29, Z+
    2464:	8e 85       	ldd	r24, Y+14	; 0x0e
    2466:	84 30       	cpi	r24, 0x04	; 4
    2468:	39 f0       	breq	.+14     	; 0x2478 <__timerRead+0x3e>
    246a:	89 30       	cpi	r24, 0x09	; 9
    246c:	29 f0       	breq	.+10     	; 0x2478 <__timerRead+0x3e>
    246e:	8b 30       	cpi	r24, 0x0B	; 11
    2470:	19 f0       	breq	.+6      	; 0x2478 <__timerRead+0x3e>
    2472:	8f 30       	cpi	r24, 0x0F	; 15
    2474:	09 f0       	breq	.+2      	; 0x2478 <__timerRead+0x3e>
    2476:	39 c0       	rjmp	.+114    	; 0x24ea <__timerRead+0xb0>
    2478:	fd 01       	movw	r30, r26
    247a:	77 96       	adiw	r30, 0x17	; 23
    247c:	65 91       	lpm	r22, Z+
    247e:	74 91       	lpm	r23, Z+
    2480:	fb 01       	movw	r30, r22
    2482:	45 91       	lpm	r20, Z+
    2484:	54 91       	lpm	r21, Z+
    2486:	9f b6       	in	r9, 0x3f	; 63
    2488:	f8 94       	cli
    248a:	32 e0       	ldi	r19, 0x02	; 2
    248c:	a3 2e       	mov	r10, r19
    248e:	b1 2c       	mov	r11, r1
    2490:	aa 0e       	add	r10, r26
    2492:	bb 1e       	adc	r11, r27
    2494:	f5 01       	movw	r30, r10
    2496:	c5 91       	lpm	r28, Z+
    2498:	d4 91       	lpm	r29, Z+
    249a:	26 e0       	ldi	r18, 0x06	; 6
    249c:	c2 2e       	mov	r12, r18
    249e:	d1 2c       	mov	r13, r1
    24a0:	ca 0e       	add	r12, r26
    24a2:	db 1e       	adc	r13, r27
    24a4:	f6 01       	movw	r30, r12
    24a6:	84 91       	lpm	r24, Z+
    24a8:	88 23       	and	r24, r24
    24aa:	19 f0       	breq	.+6      	; 0x24b2 <__timerRead+0x78>
    24ac:	28 81       	ld	r18, Y
    24ae:	39 81       	ldd	r19, Y+1	; 0x01
    24b0:	03 c0       	rjmp	.+6      	; 0x24b8 <__timerRead+0x7e>
    24b2:	88 81       	ld	r24, Y
    24b4:	28 2f       	mov	r18, r24
    24b6:	30 e0       	ldi	r19, 0x00	; 0
    24b8:	fa 01       	movw	r30, r20
    24ba:	e4 80       	ldd	r14, Z+4	; 0x04
    24bc:	f5 80       	ldd	r15, Z+5	; 0x05
    24be:	06 81       	ldd	r16, Z+6	; 0x06
    24c0:	17 81       	ldd	r17, Z+7	; 0x07
    24c2:	f5 01       	movw	r30, r10
    24c4:	a5 91       	lpm	r26, Z+
    24c6:	b4 91       	lpm	r27, Z+
    24c8:	f6 01       	movw	r30, r12
    24ca:	84 91       	lpm	r24, Z+
    24cc:	88 23       	and	r24, r24
    24ce:	19 f0       	breq	.+6      	; 0x24d6 <__timerRead+0x9c>
    24d0:	cd 91       	ld	r28, X+
    24d2:	dc 91       	ld	r29, X
    24d4:	03 c0       	rjmp	.+6      	; 0x24dc <__timerRead+0xa2>
    24d6:	8c 91       	ld	r24, X
    24d8:	c8 2f       	mov	r28, r24
    24da:	d0 e0       	ldi	r29, 0x00	; 0
    24dc:	c2 17       	cp	r28, r18
    24de:	d3 07       	cpc	r29, r19
    24e0:	08 f4       	brcc	.+2      	; 0x24e4 <__timerRead+0xaa>
    24e2:	3b c0       	rjmp	.+118    	; 0x255a <__timerRead+0x120>
    24e4:	cb 01       	movw	r24, r22
    24e6:	08 96       	adiw	r24, 0x08	; 8
    24e8:	34 c0       	rjmp	.+104    	; 0x2552 <__timerRead+0x118>
    24ea:	fd 01       	movw	r30, r26
    24ec:	45 91       	lpm	r20, Z+
    24ee:	54 91       	lpm	r21, Z+
    24f0:	9f b6       	in	r9, 0x3f	; 63
    24f2:	f8 94       	cli
    24f4:	92 e0       	ldi	r25, 0x02	; 2
    24f6:	a9 2e       	mov	r10, r25
    24f8:	b1 2c       	mov	r11, r1
    24fa:	aa 0e       	add	r10, r26
    24fc:	bb 1e       	adc	r11, r27
    24fe:	f5 01       	movw	r30, r10
    2500:	c5 91       	lpm	r28, Z+
    2502:	d4 91       	lpm	r29, Z+
    2504:	86 e0       	ldi	r24, 0x06	; 6
    2506:	c8 2e       	mov	r12, r24
    2508:	d1 2c       	mov	r13, r1
    250a:	ca 0e       	add	r12, r26
    250c:	db 1e       	adc	r13, r27
    250e:	f6 01       	movw	r30, r12
    2510:	84 91       	lpm	r24, Z+
    2512:	88 23       	and	r24, r24
    2514:	19 f0       	breq	.+6      	; 0x251c <__timerRead+0xe2>
    2516:	28 81       	ld	r18, Y
    2518:	39 81       	ldd	r19, Y+1	; 0x01
    251a:	03 c0       	rjmp	.+6      	; 0x2522 <__timerRead+0xe8>
    251c:	88 81       	ld	r24, Y
    251e:	28 2f       	mov	r18, r24
    2520:	30 e0       	ldi	r19, 0x00	; 0
    2522:	fa 01       	movw	r30, r20
    2524:	e2 80       	ldd	r14, Z+2	; 0x02
    2526:	f3 80       	ldd	r15, Z+3	; 0x03
    2528:	04 81       	ldd	r16, Z+4	; 0x04
    252a:	15 81       	ldd	r17, Z+5	; 0x05
    252c:	f5 01       	movw	r30, r10
    252e:	c5 91       	lpm	r28, Z+
    2530:	d4 91       	lpm	r29, Z+
    2532:	f6 01       	movw	r30, r12
    2534:	84 91       	lpm	r24, Z+
    2536:	88 23       	and	r24, r24
    2538:	21 f0       	breq	.+8      	; 0x2542 <__timerRead+0x108>
    253a:	09 90       	ld	r0, Y+
    253c:	d8 81       	ld	r29, Y
    253e:	c0 2d       	mov	r28, r0
    2540:	03 c0       	rjmp	.+6      	; 0x2548 <__timerRead+0x10e>
    2542:	88 81       	ld	r24, Y
    2544:	c8 2f       	mov	r28, r24
    2546:	d0 e0       	ldi	r29, 0x00	; 0
    2548:	c2 17       	cp	r28, r18
    254a:	d3 07       	cpc	r29, r19
    254c:	30 f0       	brcs	.+12     	; 0x255a <__timerRead+0x120>
    254e:	cd 01       	movw	r24, r26
    2550:	4c 96       	adiw	r24, 0x1c	; 28
    2552:	0e 94 00 0b 	call	0x1600	; 0x1600 <__portMaskGet>
    2556:	88 23       	and	r24, r24
    2558:	91 f0       	breq	.+36     	; 0x257e <__timerRead+0x144>
    255a:	08 94       	sec
    255c:	e1 1c       	adc	r14, r1
    255e:	f1 1c       	adc	r15, r1
    2560:	01 1d       	adc	r16, r1
    2562:	11 1d       	adc	r17, r1
    2564:	f5 01       	movw	r30, r10
    2566:	a5 91       	lpm	r26, Z+
    2568:	b4 91       	lpm	r27, Z+
    256a:	f6 01       	movw	r30, r12
    256c:	84 91       	lpm	r24, Z+
    256e:	88 23       	and	r24, r24
    2570:	19 f0       	breq	.+6      	; 0x2578 <__timerRead+0x13e>
    2572:	cd 91       	ld	r28, X+
    2574:	dc 91       	ld	r29, X
    2576:	03 c0       	rjmp	.+6      	; 0x257e <__timerRead+0x144>
    2578:	8c 91       	ld	r24, X
    257a:	c8 2f       	mov	r28, r24
    257c:	d0 e0       	ldi	r29, 0x00	; 0
    257e:	9f be       	out	0x3f, r9	; 63
    2580:	f3 01       	movw	r30, r6
    2582:	e0 82       	st	Z, r14
    2584:	f1 82       	std	Z+1, r15	; 0x01
    2586:	02 83       	std	Z+2, r16	; 0x02
    2588:	13 83       	std	Z+3, r17	; 0x03
    258a:	f2 01       	movw	r30, r4
    258c:	d1 83       	std	Z+1, r29	; 0x01
    258e:	c0 83       	st	Z, r28
    2590:	df 91       	pop	r29
    2592:	cf 91       	pop	r28
    2594:	1f 91       	pop	r17
    2596:	0f 91       	pop	r16
    2598:	ff 90       	pop	r15
    259a:	ef 90       	pop	r14
    259c:	df 90       	pop	r13
    259e:	cf 90       	pop	r12
    25a0:	bf 90       	pop	r11
    25a2:	af 90       	pop	r10
    25a4:	9f 90       	pop	r9
    25a6:	7f 90       	pop	r7
    25a8:	6f 90       	pop	r6
    25aa:	5f 90       	pop	r5
    25ac:	4f 90       	pop	r4
    25ae:	08 95       	ret

000025b0 <clockGetus>:
    25b0:	ef 92       	push	r14
    25b2:	ff 92       	push	r15
    25b4:	0f 93       	push	r16
    25b6:	1f 93       	push	r17
    25b8:	df 93       	push	r29
    25ba:	cf 93       	push	r28
    25bc:	00 d0       	rcall	.+0      	; 0x25be <clockGetus+0xe>
    25be:	00 d0       	rcall	.+0      	; 0x25c0 <clockGetus+0x10>
    25c0:	00 d0       	rcall	.+0      	; 0x25c2 <clockGetus+0x12>
    25c2:	cd b7       	in	r28, 0x3d	; 61
    25c4:	de b7       	in	r29, 0x3e	; 62
    25c6:	80 91 b6 03 	lds	r24, 0x03B6
    25ca:	90 91 b7 03 	lds	r25, 0x03B7
    25ce:	be 01       	movw	r22, r28
    25d0:	6d 5f       	subi	r22, 0xFD	; 253
    25d2:	7f 4f       	sbci	r23, 0xFF	; 255
    25d4:	ae 01       	movw	r20, r28
    25d6:	4f 5f       	subi	r20, 0xFF	; 255
    25d8:	5f 4f       	sbci	r21, 0xFF	; 255
    25da:	0e 94 1d 12 	call	0x243a	; 0x243a <__timerRead>
    25de:	6b 81       	ldd	r22, Y+3	; 0x03
    25e0:	7c 81       	ldd	r23, Y+4	; 0x04
    25e2:	8d 81       	ldd	r24, Y+5	; 0x05
    25e4:	9e 81       	ldd	r25, Y+6	; 0x06
    25e6:	20 91 79 03 	lds	r18, 0x0379
    25ea:	30 91 7a 03 	lds	r19, 0x037A
    25ee:	40 91 7b 03 	lds	r20, 0x037B
    25f2:	50 91 7c 03 	lds	r21, 0x037C
    25f6:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    25fa:	6b 83       	std	Y+3, r22	; 0x03
    25fc:	7c 83       	std	Y+4, r23	; 0x04
    25fe:	8d 83       	std	Y+5, r24	; 0x05
    2600:	9e 83       	std	Y+6, r25	; 0x06
    2602:	80 91 b6 03 	lds	r24, 0x03B6
    2606:	90 91 b7 03 	lds	r25, 0x03B7
    260a:	0e 94 38 14 	call	0x2870	; 0x2870 <timerGetTOP>
    260e:	7c 01       	movw	r14, r24
    2610:	69 81       	ldd	r22, Y+1	; 0x01
    2612:	7a 81       	ldd	r23, Y+2	; 0x02
    2614:	80 e0       	ldi	r24, 0x00	; 0
    2616:	90 e0       	ldi	r25, 0x00	; 0
    2618:	20 91 79 03 	lds	r18, 0x0379
    261c:	30 91 7a 03 	lds	r19, 0x037A
    2620:	40 91 7b 03 	lds	r20, 0x037B
    2624:	50 91 7c 03 	lds	r21, 0x037C
    2628:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    262c:	00 e0       	ldi	r16, 0x00	; 0
    262e:	10 e0       	ldi	r17, 0x00	; 0
    2630:	a8 01       	movw	r20, r16
    2632:	97 01       	movw	r18, r14
    2634:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    2638:	8b 81       	ldd	r24, Y+3	; 0x03
    263a:	9c 81       	ldd	r25, Y+4	; 0x04
    263c:	ad 81       	ldd	r26, Y+5	; 0x05
    263e:	be 81       	ldd	r27, Y+6	; 0x06
    2640:	28 0f       	add	r18, r24
    2642:	39 1f       	adc	r19, r25
    2644:	4a 1f       	adc	r20, r26
    2646:	5b 1f       	adc	r21, r27
    2648:	b9 01       	movw	r22, r18
    264a:	ca 01       	movw	r24, r20
    264c:	26 96       	adiw	r28, 0x06	; 6
    264e:	0f b6       	in	r0, 0x3f	; 63
    2650:	f8 94       	cli
    2652:	de bf       	out	0x3e, r29	; 62
    2654:	0f be       	out	0x3f, r0	; 63
    2656:	cd bf       	out	0x3d, r28	; 61
    2658:	cf 91       	pop	r28
    265a:	df 91       	pop	r29
    265c:	1f 91       	pop	r17
    265e:	0f 91       	pop	r16
    2660:	ff 90       	pop	r15
    2662:	ef 90       	pop	r14
    2664:	08 95       	ret

00002666 <setError>:
    2666:	df 92       	push	r13
    2668:	ef 92       	push	r14
    266a:	ff 92       	push	r15
    266c:	0f 93       	push	r16
    266e:	1f 93       	push	r17
    2670:	d8 2e       	mov	r13, r24
    2672:	80 91 b1 03 	lds	r24, 0x03B1
    2676:	88 23       	and	r24, r24
    2678:	09 f0       	breq	.+2      	; 0x267c <setError+0x16>
    267a:	5b c0       	rjmp	.+182    	; 0x2732 <setError+0xcc>
    267c:	d0 92 b1 03 	sts	0x03B1, r13
    2680:	80 91 76 03 	lds	r24, 0x0376
    2684:	90 91 77 03 	lds	r25, 0x0377
    2688:	89 2b       	or	r24, r25
    268a:	99 f0       	breq	.+38     	; 0x26b2 <setError+0x4c>
    268c:	80 91 b6 03 	lds	r24, 0x03B6
    2690:	90 91 b7 03 	lds	r25, 0x03B7
    2694:	89 2b       	or	r24, r25
    2696:	69 f0       	breq	.+26     	; 0x26b2 <setError+0x4c>
    2698:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <clockGetus>
    269c:	9b 01       	movw	r18, r22
    269e:	ac 01       	movw	r20, r24
    26a0:	89 ea       	ldi	r24, 0xA9	; 169
    26a2:	91 e1       	ldi	r25, 0x11	; 17
    26a4:	61 eb       	ldi	r22, 0xB1	; 177
    26a6:	73 e0       	ldi	r23, 0x03	; 3
    26a8:	ee 24       	eor	r14, r14
    26aa:	ff 24       	eor	r15, r15
    26ac:	87 01       	movw	r16, r14
    26ae:	0e 94 c9 1c 	call	0x3992	; 0x3992 <scheduleJob>
    26b2:	80 91 b4 03 	lds	r24, 0x03B4
    26b6:	90 91 b5 03 	lds	r25, 0x03B5
    26ba:	00 97       	sbiw	r24, 0x00	; 0
    26bc:	d1 f1       	breq	.+116    	; 0x2732 <setError+0xcc>
    26be:	0e 94 b8 0c 	call	0x1970	; 0x1970 <rprintfInit>
    26c2:	8c 01       	movw	r16, r24
    26c4:	2d 2d       	mov	r18, r13
    26c6:	33 27       	eor	r19, r19
    26c8:	27 fd       	sbrc	r18, 7
    26ca:	30 95       	com	r19
    26cc:	d7 fe       	sbrs	r13, 7
    26ce:	16 c0       	rjmp	.+44     	; 0x26fc <setError+0x96>
    26d0:	00 d0       	rcall	.+0      	; 0x26d2 <setError+0x6c>
    26d2:	00 d0       	rcall	.+0      	; 0x26d4 <setError+0x6e>
    26d4:	0f 92       	push	r0
    26d6:	ed b7       	in	r30, 0x3d	; 61
    26d8:	fe b7       	in	r31, 0x3e	; 62
    26da:	31 96       	adiw	r30, 0x01	; 1
    26dc:	81 e0       	ldi	r24, 0x01	; 1
    26de:	ad b7       	in	r26, 0x3d	; 61
    26e0:	be b7       	in	r27, 0x3e	; 62
    26e2:	11 96       	adiw	r26, 0x01	; 1
    26e4:	8c 93       	st	X, r24
    26e6:	84 ea       	ldi	r24, 0xA4	; 164
    26e8:	93 e0       	ldi	r25, 0x03	; 3
    26ea:	92 83       	std	Z+2, r25	; 0x02
    26ec:	81 83       	std	Z+1, r24	; 0x01
    26ee:	88 27       	eor	r24, r24
    26f0:	99 27       	eor	r25, r25
    26f2:	82 1b       	sub	r24, r18
    26f4:	93 0b       	sbc	r25, r19
    26f6:	94 83       	std	Z+4, r25	; 0x04
    26f8:	83 83       	std	Z+3, r24	; 0x03
    26fa:	11 c0       	rjmp	.+34     	; 0x271e <setError+0xb8>
    26fc:	00 d0       	rcall	.+0      	; 0x26fe <setError+0x98>
    26fe:	00 d0       	rcall	.+0      	; 0x2700 <setError+0x9a>
    2700:	0f 92       	push	r0
    2702:	ed b7       	in	r30, 0x3d	; 61
    2704:	fe b7       	in	r31, 0x3e	; 62
    2706:	31 96       	adiw	r30, 0x01	; 1
    2708:	81 e0       	ldi	r24, 0x01	; 1
    270a:	ad b7       	in	r26, 0x3d	; 61
    270c:	be b7       	in	r27, 0x3e	; 62
    270e:	11 96       	adiw	r26, 0x01	; 1
    2710:	8c 93       	st	X, r24
    2712:	85 e9       	ldi	r24, 0x95	; 149
    2714:	93 e0       	ldi	r25, 0x03	; 3
    2716:	92 83       	std	Z+2, r25	; 0x02
    2718:	81 83       	std	Z+1, r24	; 0x01
    271a:	34 83       	std	Z+4, r19	; 0x04
    271c:	23 83       	std	Z+3, r18	; 0x03
    271e:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <rprintf1RamRom>
    2722:	0f 90       	pop	r0
    2724:	0f 90       	pop	r0
    2726:	0f 90       	pop	r0
    2728:	0f 90       	pop	r0
    272a:	0f 90       	pop	r0
    272c:	c8 01       	movw	r24, r16
    272e:	0e 94 b8 0c 	call	0x1970	; 0x1970 <rprintfInit>
    2732:	1f 91       	pop	r17
    2734:	0f 91       	pop	r16
    2736:	ff 90       	pop	r15
    2738:	ef 90       	pop	r14
    273a:	df 90       	pop	r13
    273c:	08 95       	ret

0000273e <compareDetach>:
    273e:	cf 93       	push	r28
    2740:	df 93       	push	r29
    2742:	ec 01       	movw	r28, r24
    2744:	22 96       	adiw	r28, 0x02	; 2
    2746:	fe 01       	movw	r30, r28
    2748:	94 91       	lpm	r25, Z+
    274a:	22 97       	sbiw	r28, 0x02	; 2
    274c:	8c e2       	ldi	r24, 0x2C	; 44
    274e:	98 9f       	mul	r25, r24
    2750:	f0 01       	movw	r30, r0
    2752:	11 24       	eor	r1, r1
    2754:	ee 5b       	subi	r30, 0xBE	; 190
    2756:	fd 4f       	sbci	r31, 0xFD	; 253
    2758:	e4 91       	lpm	r30, Z+
    275a:	ee 23       	and	r30, r30
    275c:	09 f1       	breq	.+66     	; 0x27a0 <compareDetach+0x62>
    275e:	ce 01       	movw	r24, r28
    2760:	03 96       	adiw	r24, 0x03	; 3
    2762:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    2766:	ce 01       	movw	r24, r28
    2768:	0b 96       	adiw	r24, 0x0b	; 11
    276a:	fc 01       	movw	r30, r24
    276c:	a5 91       	lpm	r26, Z+
    276e:	b4 91       	lpm	r27, Z+
    2770:	2d 96       	adiw	r28, 0x0d	; 13
    2772:	fe 01       	movw	r30, r28
    2774:	84 91       	lpm	r24, Z+
    2776:	2d 97       	sbiw	r28, 0x0d	; 13
    2778:	21 e0       	ldi	r18, 0x01	; 1
    277a:	30 e0       	ldi	r19, 0x00	; 0
    277c:	02 c0       	rjmp	.+4      	; 0x2782 <compareDetach+0x44>
    277e:	22 0f       	add	r18, r18
    2780:	33 1f       	adc	r19, r19
    2782:	8a 95       	dec	r24
    2784:	e2 f7       	brpl	.-8      	; 0x277e <compareDetach+0x40>
    2786:	9c 91       	ld	r25, X
    2788:	82 2f       	mov	r24, r18
    278a:	88 0f       	add	r24, r24
    278c:	82 2b       	or	r24, r18
    278e:	80 95       	com	r24
    2790:	89 23       	and	r24, r25
    2792:	8c 93       	st	X, r24
    2794:	fe 01       	movw	r30, r28
    2796:	a5 91       	lpm	r26, Z+
    2798:	b4 91       	lpm	r27, Z+
    279a:	1d 92       	st	X+, r1
    279c:	1c 92       	st	X, r1
    279e:	03 c0       	rjmp	.+6      	; 0x27a6 <compareDetach+0x68>
    27a0:	8d ef       	ldi	r24, 0xFD	; 253
    27a2:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    27a6:	df 91       	pop	r29
    27a8:	cf 91       	pop	r28
    27aa:	08 95       	ret

000027ac <compareSetThreshold>:
    27ac:	cf 93       	push	r28
    27ae:	df 93       	push	r29
    27b0:	9c 01       	movw	r18, r24
    27b2:	2e 5f       	subi	r18, 0xFE	; 254
    27b4:	3f 4f       	sbci	r19, 0xFF	; 255
    27b6:	f9 01       	movw	r30, r18
    27b8:	84 91       	lpm	r24, Z+
    27ba:	22 50       	subi	r18, 0x02	; 2
    27bc:	30 40       	sbci	r19, 0x00	; 0
    27be:	9c e2       	ldi	r25, 0x2C	; 44
    27c0:	89 9f       	mul	r24, r25
    27c2:	a0 01       	movw	r20, r0
    27c4:	11 24       	eor	r1, r1
    27c6:	46 5c       	subi	r20, 0xC6	; 198
    27c8:	5d 4f       	sbci	r21, 0xFD	; 253
    27ca:	48 5f       	subi	r20, 0xF8	; 248
    27cc:	5f 4f       	sbci	r21, 0xFF	; 255
    27ce:	fa 01       	movw	r30, r20
    27d0:	84 91       	lpm	r24, Z+
    27d2:	48 50       	subi	r20, 0x08	; 8
    27d4:	50 40       	sbci	r21, 0x00	; 0
    27d6:	88 23       	and	r24, r24
    27d8:	c1 f0       	breq	.+48     	; 0x280a <compareSetThreshold+0x5e>
    27da:	c9 01       	movw	r24, r18
    27dc:	06 96       	adiw	r24, 0x06	; 6
    27de:	fc 01       	movw	r30, r24
    27e0:	c5 91       	lpm	r28, Z+
    27e2:	d4 91       	lpm	r29, Z+
    27e4:	fa 01       	movw	r30, r20
    27e6:	36 96       	adiw	r30, 0x06	; 6
    27e8:	e4 91       	lpm	r30, Z+
    27ea:	ee 23       	and	r30, r30
    27ec:	19 f0       	breq	.+6      	; 0x27f4 <compareSetThreshold+0x48>
    27ee:	79 83       	std	Y+1, r23	; 0x01
    27f0:	68 83       	st	Y, r22
    27f2:	0e c0       	rjmp	.+28     	; 0x2810 <compareSetThreshold+0x64>
    27f4:	6f 3f       	cpi	r22, 0xFF	; 255
    27f6:	71 05       	cpc	r23, r1
    27f8:	31 f0       	breq	.+12     	; 0x2806 <compareSetThreshold+0x5a>
    27fa:	28 f0       	brcs	.+10     	; 0x2806 <compareSetThreshold+0x5a>
    27fc:	8e ef       	ldi	r24, 0xFE	; 254
    27fe:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2802:	6f ef       	ldi	r22, 0xFF	; 255
    2804:	70 e0       	ldi	r23, 0x00	; 0
    2806:	68 83       	st	Y, r22
    2808:	03 c0       	rjmp	.+6      	; 0x2810 <compareSetThreshold+0x64>
    280a:	8d ef       	ldi	r24, 0xFD	; 253
    280c:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2810:	df 91       	pop	r29
    2812:	cf 91       	pop	r28
    2814:	08 95       	ret

00002816 <compareGetThreshold>:
    2816:	9c 01       	movw	r18, r24
    2818:	2e 5f       	subi	r18, 0xFE	; 254
    281a:	3f 4f       	sbci	r19, 0xFF	; 255
    281c:	f9 01       	movw	r30, r18
    281e:	84 91       	lpm	r24, Z+
    2820:	22 50       	subi	r18, 0x02	; 2
    2822:	30 40       	sbci	r19, 0x00	; 0
    2824:	9c e2       	ldi	r25, 0x2C	; 44
    2826:	89 9f       	mul	r24, r25
    2828:	a0 01       	movw	r20, r0
    282a:	11 24       	eor	r1, r1
    282c:	46 5c       	subi	r20, 0xC6	; 198
    282e:	5d 4f       	sbci	r21, 0xFD	; 253
    2830:	48 5f       	subi	r20, 0xF8	; 248
    2832:	5f 4f       	sbci	r21, 0xFF	; 255
    2834:	fa 01       	movw	r30, r20
    2836:	84 91       	lpm	r24, Z+
    2838:	48 50       	subi	r20, 0x08	; 8
    283a:	50 40       	sbci	r21, 0x00	; 0
    283c:	88 23       	and	r24, r24
    283e:	89 f0       	breq	.+34     	; 0x2862 <compareGetThreshold+0x4c>
    2840:	c9 01       	movw	r24, r18
    2842:	06 96       	adiw	r24, 0x06	; 6
    2844:	fc 01       	movw	r30, r24
    2846:	a5 91       	lpm	r26, Z+
    2848:	b4 91       	lpm	r27, Z+
    284a:	fa 01       	movw	r30, r20
    284c:	36 96       	adiw	r30, 0x06	; 6
    284e:	e4 91       	lpm	r30, Z+
    2850:	ee 23       	and	r30, r30
    2852:	19 f0       	breq	.+6      	; 0x285a <compareGetThreshold+0x44>
    2854:	2d 91       	ld	r18, X+
    2856:	3c 91       	ld	r19, X
    2858:	09 c0       	rjmp	.+18     	; 0x286c <compareGetThreshold+0x56>
    285a:	8c 91       	ld	r24, X
    285c:	28 2f       	mov	r18, r24
    285e:	30 e0       	ldi	r19, 0x00	; 0
    2860:	05 c0       	rjmp	.+10     	; 0x286c <compareGetThreshold+0x56>
    2862:	8d ef       	ldi	r24, 0xFD	; 253
    2864:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2868:	2f ef       	ldi	r18, 0xFF	; 255
    286a:	30 e0       	ldi	r19, 0x00	; 0
    286c:	c9 01       	movw	r24, r18
    286e:	08 95       	ret

00002870 <timerGetTOP>:
    2870:	cf 93       	push	r28
    2872:	df 93       	push	r29
    2874:	ec 01       	movw	r28, r24
    2876:	04 96       	adiw	r24, 0x04	; 4
    2878:	fc 01       	movw	r30, r24
    287a:	a5 91       	lpm	r26, Z+
    287c:	b4 91       	lpm	r27, Z+
    287e:	8c 91       	ld	r24, X
    2880:	90 e0       	ldi	r25, 0x00	; 0
    2882:	87 70       	andi	r24, 0x07	; 7
    2884:	90 70       	andi	r25, 0x00	; 0
    2886:	89 2b       	or	r24, r25
    2888:	09 f4       	brne	.+2      	; 0x288c <timerGetTOP+0x1c>
    288a:	41 c0       	rjmp	.+130    	; 0x290e <timerGetTOP+0x9e>
    288c:	fe 01       	movw	r30, r28
    288e:	a5 91       	lpm	r26, Z+
    2890:	b4 91       	lpm	r27, Z+
    2892:	1e 96       	adiw	r26, 0x0e	; 14
    2894:	8c 91       	ld	r24, X
    2896:	87 30       	cpi	r24, 0x07	; 7
    2898:	39 f1       	breq	.+78     	; 0x28e8 <timerGetTOP+0x78>
    289a:	88 30       	cpi	r24, 0x08	; 8
    289c:	70 f4       	brcc	.+28     	; 0x28ba <timerGetTOP+0x4a>
    289e:	83 30       	cpi	r24, 0x03	; 3
    28a0:	19 f1       	breq	.+70     	; 0x28e8 <timerGetTOP+0x78>
    28a2:	84 30       	cpi	r24, 0x04	; 4
    28a4:	28 f4       	brcc	.+10     	; 0x28b0 <timerGetTOP+0x40>
    28a6:	81 30       	cpi	r24, 0x01	; 1
    28a8:	c9 f0       	breq	.+50     	; 0x28dc <timerGetTOP+0x6c>
    28aa:	82 30       	cpi	r24, 0x02	; 2
    28ac:	d0 f4       	brcc	.+52     	; 0x28e2 <timerGetTOP+0x72>
    28ae:	13 c0       	rjmp	.+38     	; 0x28d6 <timerGetTOP+0x66>
    28b0:	85 30       	cpi	r24, 0x05	; 5
    28b2:	a1 f0       	breq	.+40     	; 0x28dc <timerGetTOP+0x6c>
    28b4:	86 30       	cpi	r24, 0x06	; 6
    28b6:	a8 f4       	brcc	.+42     	; 0x28e2 <timerGetTOP+0x72>
    28b8:	1a c0       	rjmp	.+52     	; 0x28ee <timerGetTOP+0x7e>
    28ba:	8b 30       	cpi	r24, 0x0B	; 11
    28bc:	c1 f0       	breq	.+48     	; 0x28ee <timerGetTOP+0x7e>
    28be:	8c 30       	cpi	r24, 0x0C	; 12
    28c0:	18 f4       	brcc	.+6      	; 0x28c8 <timerGetTOP+0x58>
    28c2:	89 30       	cpi	r24, 0x09	; 9
    28c4:	e1 f4       	brne	.+56     	; 0x28fe <timerGetTOP+0x8e>
    28c6:	13 c0       	rjmp	.+38     	; 0x28ee <timerGetTOP+0x7e>
    28c8:	8e 30       	cpi	r24, 0x0E	; 14
    28ca:	c9 f0       	breq	.+50     	; 0x28fe <timerGetTOP+0x8e>
    28cc:	8f 30       	cpi	r24, 0x0F	; 15
    28ce:	79 f0       	breq	.+30     	; 0x28ee <timerGetTOP+0x7e>
    28d0:	8c 30       	cpi	r24, 0x0C	; 12
    28d2:	e9 f4       	brne	.+58     	; 0x290e <timerGetTOP+0x9e>
    28d4:	14 c0       	rjmp	.+40     	; 0x28fe <timerGetTOP+0x8e>
    28d6:	2f ef       	ldi	r18, 0xFF	; 255
    28d8:	3f ef       	ldi	r19, 0xFF	; 255
    28da:	1b c0       	rjmp	.+54     	; 0x2912 <timerGetTOP+0xa2>
    28dc:	2f ef       	ldi	r18, 0xFF	; 255
    28de:	30 e0       	ldi	r19, 0x00	; 0
    28e0:	18 c0       	rjmp	.+48     	; 0x2912 <timerGetTOP+0xa2>
    28e2:	2f ef       	ldi	r18, 0xFF	; 255
    28e4:	31 e0       	ldi	r19, 0x01	; 1
    28e6:	15 c0       	rjmp	.+42     	; 0x2912 <timerGetTOP+0xa2>
    28e8:	2f ef       	ldi	r18, 0xFF	; 255
    28ea:	33 e0       	ldi	r19, 0x03	; 3
    28ec:	12 c0       	rjmp	.+36     	; 0x2912 <timerGetTOP+0xa2>
    28ee:	fe 01       	movw	r30, r28
    28f0:	77 96       	adiw	r30, 0x17	; 23
    28f2:	85 91       	lpm	r24, Z+
    28f4:	94 91       	lpm	r25, Z+
    28f6:	0e 94 0b 14 	call	0x2816	; 0x2816 <compareGetThreshold>
    28fa:	9c 01       	movw	r18, r24
    28fc:	0a c0       	rjmp	.+20     	; 0x2912 <timerGetTOP+0xa2>
    28fe:	ce 01       	movw	r24, r28
    2900:	4f 96       	adiw	r24, 0x1f	; 31
    2902:	fc 01       	movw	r30, r24
    2904:	a5 91       	lpm	r26, Z+
    2906:	b4 91       	lpm	r27, Z+
    2908:	2d 91       	ld	r18, X+
    290a:	3c 91       	ld	r19, X
    290c:	02 c0       	rjmp	.+4      	; 0x2912 <timerGetTOP+0xa2>
    290e:	20 e0       	ldi	r18, 0x00	; 0
    2910:	30 e0       	ldi	r19, 0x00	; 0
    2912:	26 96       	adiw	r28, 0x06	; 6
    2914:	fe 01       	movw	r30, r28
    2916:	84 91       	lpm	r24, Z+
    2918:	88 23       	and	r24, r24
    291a:	09 f4       	brne	.+2      	; 0x291e <timerGetTOP+0xae>
    291c:	30 70       	andi	r19, 0x00	; 0
    291e:	c9 01       	movw	r24, r18
    2920:	df 91       	pop	r29
    2922:	cf 91       	pop	r28
    2924:	08 95       	ret

00002926 <timerGetBestPrescaler>:
    2926:	3f 92       	push	r3
    2928:	4f 92       	push	r4
    292a:	5f 92       	push	r5
    292c:	6f 92       	push	r6
    292e:	7f 92       	push	r7
    2930:	8f 92       	push	r8
    2932:	9f 92       	push	r9
    2934:	af 92       	push	r10
    2936:	bf 92       	push	r11
    2938:	cf 92       	push	r12
    293a:	df 92       	push	r13
    293c:	ef 92       	push	r14
    293e:	ff 92       	push	r15
    2940:	0f 93       	push	r16
    2942:	1f 93       	push	r17
    2944:	cf 93       	push	r28
    2946:	df 93       	push	r29
    2948:	ec 01       	movw	r28, r24
    294a:	26 96       	adiw	r28, 0x06	; 6
    294c:	fe 01       	movw	r30, r28
    294e:	84 91       	lpm	r24, Z+
    2950:	26 97       	sbiw	r28, 0x06	; 6
    2952:	88 23       	and	r24, r24
    2954:	31 f4       	brne	.+12     	; 0x2962 <timerGetBestPrescaler+0x3c>
    2956:	ff ef       	ldi	r31, 0xFF	; 255
    2958:	af 2e       	mov	r10, r31
    295a:	b1 2c       	mov	r11, r1
    295c:	c1 2c       	mov	r12, r1
    295e:	d1 2c       	mov	r13, r1
    2960:	06 c0       	rjmp	.+12     	; 0x296e <timerGetBestPrescaler+0x48>
    2962:	ef ef       	ldi	r30, 0xFF	; 255
    2964:	ae 2e       	mov	r10, r30
    2966:	ef ef       	ldi	r30, 0xFF	; 255
    2968:	be 2e       	mov	r11, r30
    296a:	c1 2c       	mov	r12, r1
    296c:	d1 2c       	mov	r13, r1
    296e:	27 96       	adiw	r28, 0x07	; 7
    2970:	80 e0       	ldi	r24, 0x00	; 0
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	20 91 04 02 	lds	r18, 0x0204
    2978:	30 91 05 02 	lds	r19, 0x0205
    297c:	40 e0       	ldi	r20, 0x00	; 0
    297e:	50 e0       	ldi	r21, 0x00	; 0
    2980:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    2984:	3b 01       	movw	r6, r22
    2986:	4c 01       	movw	r8, r24
    2988:	01 e0       	ldi	r16, 0x01	; 1
    298a:	10 e0       	ldi	r17, 0x00	; 0
    298c:	61 e0       	ldi	r22, 0x01	; 1
    298e:	46 2e       	mov	r4, r22
    2990:	51 2c       	mov	r5, r1
    2992:	ee 24       	eor	r14, r14
    2994:	ff 24       	eor	r15, r15
    2996:	fe 01       	movw	r30, r28
    2998:	34 90       	lpm	r3, Z+
    299a:	33 20       	and	r3, r3
    299c:	21 f4       	brne	.+8      	; 0x29a6 <timerGetBestPrescaler+0x80>
    299e:	63 e6       	ldi	r22, 0x63	; 99
    29a0:	73 e0       	ldi	r23, 0x03	; 3
    29a2:	86 e0       	ldi	r24, 0x06	; 6
    29a4:	03 c0       	rjmp	.+6      	; 0x29ac <timerGetBestPrescaler+0x86>
    29a6:	6f e6       	ldi	r22, 0x6F	; 111
    29a8:	73 e0       	ldi	r23, 0x03	; 3
    29aa:	88 e0       	ldi	r24, 0x08	; 8
    29ac:	48 2f       	mov	r20, r24
    29ae:	41 50       	subi	r20, 0x01	; 1
    29b0:	24 2f       	mov	r18, r20
    29b2:	33 27       	eor	r19, r19
    29b4:	27 fd       	sbrc	r18, 7
    29b6:	30 95       	com	r19
    29b8:	22 0f       	add	r18, r18
    29ba:	33 1f       	adc	r19, r19
    29bc:	26 0f       	add	r18, r22
    29be:	37 1f       	adc	r19, r23
    29c0:	09 c0       	rjmp	.+18     	; 0x29d4 <timerGetBestPrescaler+0xae>
    29c2:	f9 01       	movw	r30, r18
    29c4:	85 91       	lpm	r24, Z+
    29c6:	94 91       	lpm	r25, Z+
    29c8:	22 50       	subi	r18, 0x02	; 2
    29ca:	30 40       	sbci	r19, 0x00	; 0
    29cc:	80 17       	cp	r24, r16
    29ce:	91 07       	cpc	r25, r17
    29d0:	21 f0       	breq	.+8      	; 0x29da <timerGetBestPrescaler+0xb4>
    29d2:	41 50       	subi	r20, 0x01	; 1
    29d4:	47 ff       	sbrs	r20, 7
    29d6:	f5 cf       	rjmp	.-22     	; 0x29c2 <timerGetBestPrescaler+0x9c>
    29d8:	0d c0       	rjmp	.+26     	; 0x29f4 <timerGetBestPrescaler+0xce>
    29da:	98 01       	movw	r18, r16
    29dc:	40 e0       	ldi	r20, 0x00	; 0
    29de:	50 e0       	ldi	r21, 0x00	; 0
    29e0:	c4 01       	movw	r24, r8
    29e2:	b3 01       	movw	r22, r6
    29e4:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    29e8:	a2 16       	cp	r10, r18
    29ea:	b3 06       	cpc	r11, r19
    29ec:	c4 06       	cpc	r12, r20
    29ee:	d5 06       	cpc	r13, r21
    29f0:	70 f4       	brcc	.+28     	; 0x2a0e <timerGetBestPrescaler+0xe8>
    29f2:	28 01       	movw	r4, r16
    29f4:	00 0f       	add	r16, r16
    29f6:	11 1f       	adc	r17, r17
    29f8:	08 94       	sec
    29fa:	e1 1c       	adc	r14, r1
    29fc:	f1 1c       	adc	r15, r1
    29fe:	fb e0       	ldi	r31, 0x0B	; 11
    2a00:	ef 16       	cp	r14, r31
    2a02:	f1 04       	cpc	r15, r1
    2a04:	51 f6       	brne	.-108    	; 0x299a <timerGetBestPrescaler+0x74>
    2a06:	88 ef       	ldi	r24, 0xF8	; 248
    2a08:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2a0c:	82 01       	movw	r16, r4
    2a0e:	c8 01       	movw	r24, r16
    2a10:	df 91       	pop	r29
    2a12:	cf 91       	pop	r28
    2a14:	1f 91       	pop	r17
    2a16:	0f 91       	pop	r16
    2a18:	ff 90       	pop	r15
    2a1a:	ef 90       	pop	r14
    2a1c:	df 90       	pop	r13
    2a1e:	cf 90       	pop	r12
    2a20:	bf 90       	pop	r11
    2a22:	af 90       	pop	r10
    2a24:	9f 90       	pop	r9
    2a26:	8f 90       	pop	r8
    2a28:	7f 90       	pop	r7
    2a2a:	6f 90       	pop	r6
    2a2c:	5f 90       	pop	r5
    2a2e:	4f 90       	pop	r4
    2a30:	3f 90       	pop	r3
    2a32:	08 95       	ret

00002a34 <timerSetPrescaler>:
    2a34:	1f 93       	push	r17
    2a36:	cf 93       	push	r28
    2a38:	df 93       	push	r29
    2a3a:	ac 01       	movw	r20, r24
    2a3c:	eb 01       	movw	r28, r22
    2a3e:	fc 01       	movw	r30, r24
    2a40:	34 96       	adiw	r30, 0x04	; 4
    2a42:	a5 91       	lpm	r26, Z+
    2a44:	b4 91       	lpm	r27, Z+
    2a46:	1f b7       	in	r17, 0x3f	; 63
    2a48:	f8 94       	cli
    2a4a:	49 5f       	subi	r20, 0xF9	; 249
    2a4c:	5f 4f       	sbci	r21, 0xFF	; 255
    2a4e:	fa 01       	movw	r30, r20
    2a50:	84 91       	lpm	r24, Z+
    2a52:	47 50       	subi	r20, 0x07	; 7
    2a54:	50 40       	sbci	r21, 0x00	; 0
    2a56:	88 23       	and	r24, r24
    2a58:	21 f4       	brne	.+8      	; 0x2a62 <timerSetPrescaler+0x2e>
    2a5a:	e3 e6       	ldi	r30, 0x63	; 99
    2a5c:	f3 e0       	ldi	r31, 0x03	; 3
    2a5e:	86 e0       	ldi	r24, 0x06	; 6
    2a60:	03 c0       	rjmp	.+6      	; 0x2a68 <timerSetPrescaler+0x34>
    2a62:	ef e6       	ldi	r30, 0x6F	; 111
    2a64:	f3 e0       	ldi	r31, 0x03	; 3
    2a66:	88 e0       	ldi	r24, 0x08	; 8
    2a68:	68 2f       	mov	r22, r24
    2a6a:	61 50       	subi	r22, 0x01	; 1
    2a6c:	26 2f       	mov	r18, r22
    2a6e:	33 27       	eor	r19, r19
    2a70:	27 fd       	sbrc	r18, 7
    2a72:	30 95       	com	r19
    2a74:	22 0f       	add	r18, r18
    2a76:	33 1f       	adc	r19, r19
    2a78:	2e 0f       	add	r18, r30
    2a7a:	3f 1f       	adc	r19, r31
    2a7c:	16 c0       	rjmp	.+44     	; 0x2aaa <timerSetPrescaler+0x76>
    2a7e:	f9 01       	movw	r30, r18
    2a80:	85 91       	lpm	r24, Z+
    2a82:	94 91       	lpm	r25, Z+
    2a84:	22 50       	subi	r18, 0x02	; 2
    2a86:	30 40       	sbci	r19, 0x00	; 0
    2a88:	8c 17       	cp	r24, r28
    2a8a:	9d 07       	cpc	r25, r29
    2a8c:	69 f4       	brne	.+26     	; 0x2aa8 <timerSetPrescaler+0x74>
    2a8e:	fa 01       	movw	r30, r20
    2a90:	25 91       	lpm	r18, Z+
    2a92:	34 91       	lpm	r19, Z+
    2a94:	f9 01       	movw	r30, r18
    2a96:	d1 83       	std	Z+1, r29	; 0x01
    2a98:	c0 83       	st	Z, r28
    2a9a:	8c 91       	ld	r24, X
    2a9c:	88 7f       	andi	r24, 0xF8	; 248
    2a9e:	8c 93       	st	X, r24
    2aa0:	8c 91       	ld	r24, X
    2aa2:	86 2b       	or	r24, r22
    2aa4:	8c 93       	st	X, r24
    2aa6:	04 c0       	rjmp	.+8      	; 0x2ab0 <timerSetPrescaler+0x7c>
    2aa8:	61 50       	subi	r22, 0x01	; 1
    2aaa:	67 ff       	sbrs	r22, 7
    2aac:	e8 cf       	rjmp	.-48     	; 0x2a7e <timerSetPrescaler+0x4a>
    2aae:	05 c0       	rjmp	.+10     	; 0x2aba <timerSetPrescaler+0x86>
    2ab0:	1f bf       	out	0x3f, r17	; 63
    2ab2:	df 91       	pop	r29
    2ab4:	cf 91       	pop	r28
    2ab6:	1f 91       	pop	r17
    2ab8:	08 95       	ret
    2aba:	8a ef       	ldi	r24, 0xFA	; 250
    2abc:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2ac0:	f7 cf       	rjmp	.-18     	; 0x2ab0 <timerSetPrescaler+0x7c>

00002ac2 <timerInit>:
    2ac2:	7f 92       	push	r7
    2ac4:	8f 92       	push	r8
    2ac6:	9f 92       	push	r9
    2ac8:	af 92       	push	r10
    2aca:	bf 92       	push	r11
    2acc:	cf 92       	push	r12
    2ace:	df 92       	push	r13
    2ad0:	ef 92       	push	r14
    2ad2:	ff 92       	push	r15
    2ad4:	0f 93       	push	r16
    2ad6:	1f 93       	push	r17
    2ad8:	cf 93       	push	r28
    2ada:	df 93       	push	r29
    2adc:	ec 01       	movw	r28, r24
    2ade:	fc 01       	movw	r30, r24
    2ae0:	32 96       	adiw	r30, 0x02	; 2
    2ae2:	05 91       	lpm	r16, Z+
    2ae4:	14 91       	lpm	r17, Z+
    2ae6:	fc 01       	movw	r30, r24
    2ae8:	c5 90       	lpm	r12, Z+
    2aea:	d4 90       	lpm	r13, Z+
    2aec:	7f b6       	in	r7, 0x3f	; 63
    2aee:	f8 94       	cli
    2af0:	04 96       	adiw	r24, 0x04	; 4
    2af2:	fc 01       	movw	r30, r24
    2af4:	a5 91       	lpm	r26, Z+
    2af6:	b4 91       	lpm	r27, Z+
    2af8:	8c 91       	ld	r24, X
    2afa:	88 7f       	andi	r24, 0xF8	; 248
    2afc:	8c 93       	st	X, r24
    2afe:	99 e1       	ldi	r25, 0x19	; 25
    2b00:	89 2e       	mov	r8, r25
    2b02:	91 2c       	mov	r9, r1
    2b04:	8c 0e       	add	r8, r28
    2b06:	9d 1e       	adc	r9, r29
    2b08:	c4 01       	movw	r24, r8
    2b0a:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    2b0e:	f8 01       	movw	r30, r16
    2b10:	10 82       	st	Z, r1
    2b12:	f6 01       	movw	r30, r12
    2b14:	12 82       	std	Z+2, r1	; 0x02
    2b16:	13 82       	std	Z+3, r1	; 0x03
    2b18:	14 82       	std	Z+4, r1	; 0x04
    2b1a:	15 82       	std	Z+5, r1	; 0x05
    2b1c:	60 81       	ld	r22, Z
    2b1e:	71 81       	ldd	r23, Z+1	; 0x01
    2b20:	ce 01       	movw	r24, r28
    2b22:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <timerSetPrescaler>
    2b26:	28 96       	adiw	r28, 0x08	; 8
    2b28:	fe 01       	movw	r30, r28
    2b2a:	e4 90       	lpm	r14, Z+
    2b2c:	2f 96       	adiw	r28, 0x0f	; 15
    2b2e:	ff 24       	eor	r15, r15
    2b30:	00 e0       	ldi	r16, 0x00	; 0
    2b32:	10 e0       	ldi	r17, 0x00	; 0
    2b34:	fe 01       	movw	r30, r28
    2b36:	a5 90       	lpm	r10, Z+
    2b38:	b4 90       	lpm	r11, Z+
    2b3a:	67 97       	sbiw	r28, 0x17	; 23
    2b3c:	09 c0       	rjmp	.+18     	; 0x2b50 <timerInit+0x8e>
    2b3e:	c5 01       	movw	r24, r10
    2b40:	80 0f       	add	r24, r16
    2b42:	91 1f       	adc	r25, r17
    2b44:	08 96       	adiw	r24, 0x08	; 8
    2b46:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    2b4a:	f3 94       	inc	r15
    2b4c:	00 5f       	subi	r16, 0xF0	; 240
    2b4e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b50:	fe 14       	cp	r15, r14
    2b52:	a8 f3       	brcs	.-22     	; 0x2b3e <timerInit+0x7c>
    2b54:	ce 01       	movw	r24, r28
    2b56:	4c 96       	adiw	r24, 0x1c	; 28
    2b58:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    2b5c:	f6 01       	movw	r30, r12
    2b5e:	86 81       	ldd	r24, Z+6	; 0x06
    2b60:	97 81       	ldd	r25, Z+7	; 0x07
    2b62:	89 2b       	or	r24, r25
    2b64:	19 f0       	breq	.+6      	; 0x2b6c <timerInit+0xaa>
    2b66:	c4 01       	movw	r24, r8
    2b68:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    2b6c:	7f be       	out	0x3f, r7	; 63
    2b6e:	df 91       	pop	r29
    2b70:	cf 91       	pop	r28
    2b72:	1f 91       	pop	r17
    2b74:	0f 91       	pop	r16
    2b76:	ff 90       	pop	r15
    2b78:	ef 90       	pop	r14
    2b7a:	df 90       	pop	r13
    2b7c:	cf 90       	pop	r12
    2b7e:	bf 90       	pop	r11
    2b80:	af 90       	pop	r10
    2b82:	9f 90       	pop	r9
    2b84:	8f 90       	pop	r8
    2b86:	7f 90       	pop	r7
    2b88:	08 95       	ret

00002b8a <timerSetMode>:
    2b8a:	df 92       	push	r13
    2b8c:	ef 92       	push	r14
    2b8e:	ff 92       	push	r15
    2b90:	0f 93       	push	r16
    2b92:	1f 93       	push	r17
    2b94:	cf 93       	push	r28
    2b96:	df 93       	push	r29
    2b98:	8c 01       	movw	r16, r24
    2b9a:	66 23       	and	r22, r22
    2b9c:	41 f0       	breq	.+16     	; 0x2bae <timerSetMode+0x24>
    2b9e:	fc 01       	movw	r30, r24
    2ba0:	a5 91       	lpm	r26, Z+
    2ba2:	b4 91       	lpm	r27, Z+
    2ba4:	1e 96       	adiw	r26, 0x0e	; 14
    2ba6:	8c 91       	ld	r24, X
    2ba8:	86 17       	cp	r24, r22
    2baa:	09 f4       	brne	.+2      	; 0x2bae <timerSetMode+0x24>
    2bac:	7a c0       	rjmp	.+244    	; 0x2ca2 <timerSetMode+0x118>
    2bae:	f8 01       	movw	r30, r16
    2bb0:	39 96       	adiw	r30, 0x09	; 9
    2bb2:	25 91       	lpm	r18, Z+
    2bb4:	34 91       	lpm	r19, Z+
    2bb6:	81 e0       	ldi	r24, 0x01	; 1
    2bb8:	90 e0       	ldi	r25, 0x00	; 0
    2bba:	06 2e       	mov	r0, r22
    2bbc:	02 c0       	rjmp	.+4      	; 0x2bc2 <timerSetMode+0x38>
    2bbe:	88 0f       	add	r24, r24
    2bc0:	99 1f       	adc	r25, r25
    2bc2:	0a 94       	dec	r0
    2bc4:	e2 f7       	brpl	.-8      	; 0x2bbe <timerSetMode+0x34>
    2bc6:	82 23       	and	r24, r18
    2bc8:	93 23       	and	r25, r19
    2bca:	89 2b       	or	r24, r25
    2bcc:	09 f4       	brne	.+2      	; 0x2bd0 <timerSetMode+0x46>
    2bce:	66 c0       	rjmp	.+204    	; 0x2c9c <timerSetMode+0x112>
    2bd0:	f8 01       	movw	r30, r16
    2bd2:	a5 91       	lpm	r26, Z+
    2bd4:	b4 91       	lpm	r27, Z+
    2bd6:	1e 96       	adiw	r26, 0x0e	; 14
    2bd8:	6c 93       	st	X, r22
    2bda:	ff ed       	ldi	r31, 0xDF	; 223
    2bdc:	2f 3f       	cpi	r18, 0xFF	; 255
    2bde:	3f 07       	cpc	r19, r31
    2be0:	11 f4       	brne	.+4      	; 0x2be6 <timerSetMode+0x5c>
    2be2:	d6 2e       	mov	r13, r22
    2be4:	13 c0       	rjmp	.+38     	; 0x2c0c <timerSetMode+0x82>
    2be6:	88 e8       	ldi	r24, 0x88	; 136
    2be8:	23 33       	cpi	r18, 0x33	; 51
    2bea:	38 07       	cpc	r19, r24
    2bec:	31 f4       	brne	.+12     	; 0x2bfa <timerSetMode+0x70>
    2bee:	e6 2f       	mov	r30, r22
    2bf0:	f0 e0       	ldi	r31, 0x00	; 0
    2bf2:	e1 58       	subi	r30, 0x81	; 129
    2bf4:	fc 4f       	sbci	r31, 0xFC	; 252
    2bf6:	d4 90       	lpm	r13, Z+
    2bf8:	09 c0       	rjmp	.+18     	; 0x2c0c <timerSetMode+0x82>
    2bfa:	23 33       	cpi	r18, 0x33	; 51
    2bfc:	31 05       	cpc	r19, r1
    2bfe:	09 f0       	breq	.+2      	; 0x2c02 <timerSetMode+0x78>
    2c00:	4d c0       	rjmp	.+154    	; 0x2c9c <timerSetMode+0x112>
    2c02:	e6 2f       	mov	r30, r22
    2c04:	f0 e0       	ldi	r31, 0x00	; 0
    2c06:	e1 57       	subi	r30, 0x71	; 113
    2c08:	fc 4f       	sbci	r31, 0xFC	; 252
    2c0a:	d4 90       	lpm	r13, Z+
    2c0c:	ef ef       	ldi	r30, 0xFF	; 255
    2c0e:	de 16       	cp	r13, r30
    2c10:	09 f4       	brne	.+2      	; 0x2c14 <timerSetMode+0x8a>
    2c12:	44 c0       	rjmp	.+136    	; 0x2c9c <timerSetMode+0x112>
    2c14:	c8 01       	movw	r24, r16
    2c16:	04 96       	adiw	r24, 0x04	; 4
    2c18:	fc 01       	movw	r30, r24
    2c1a:	a5 91       	lpm	r26, Z+
    2c1c:	b4 91       	lpm	r27, Z+
    2c1e:	8c 91       	ld	r24, X
    2c20:	88 7f       	andi	r24, 0xF8	; 248
    2c22:	8c 93       	st	X, r24
    2c24:	e8 01       	movw	r28, r16
    2c26:	2b 96       	adiw	r28, 0x0b	; 11
    2c28:	ee 24       	eor	r14, r14
    2c2a:	ff 24       	eor	r15, r15
    2c2c:	e8 81       	ld	r30, Y
    2c2e:	f9 81       	ldd	r31, Y+1	; 0x01
    2c30:	85 91       	lpm	r24, Z+
    2c32:	94 91       	lpm	r25, Z+
    2c34:	89 2b       	or	r24, r25
    2c36:	99 f0       	breq	.+38     	; 0x2c5e <timerSetMode+0xd4>
    2c38:	d0 fe       	sbrs	r13, 0
    2c3a:	04 c0       	rjmp	.+8      	; 0x2c44 <timerSetMode+0xba>
    2c3c:	ce 01       	movw	r24, r28
    2c3e:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    2c42:	03 c0       	rjmp	.+6      	; 0x2c4a <timerSetMode+0xc0>
    2c44:	ce 01       	movw	r24, r28
    2c46:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    2c4a:	08 94       	sec
    2c4c:	e1 1c       	adc	r14, r1
    2c4e:	f1 1c       	adc	r15, r1
    2c50:	f4 e0       	ldi	r31, 0x04	; 4
    2c52:	ef 16       	cp	r14, r31
    2c54:	f1 04       	cpc	r15, r1
    2c56:	19 f0       	breq	.+6      	; 0x2c5e <timerSetMode+0xd4>
    2c58:	d6 94       	lsr	r13
    2c5a:	23 96       	adiw	r28, 0x03	; 3
    2c5c:	e7 cf       	rjmp	.-50     	; 0x2c2c <timerSetMode+0xa2>
    2c5e:	08 5f       	subi	r16, 0xF8	; 248
    2c60:	1f 4f       	sbci	r17, 0xFF	; 255
    2c62:	f8 01       	movw	r30, r16
    2c64:	f4 90       	lpm	r15, Z+
    2c66:	fa 94       	dec	r15
    2c68:	01 5f       	subi	r16, 0xF1	; 241
    2c6a:	1f 4f       	sbci	r17, 0xFF	; 255
    2c6c:	f8 01       	movw	r30, r16
    2c6e:	c5 91       	lpm	r28, Z+
    2c70:	d4 91       	lpm	r29, Z+
    2c72:	07 51       	subi	r16, 0x17	; 23
    2c74:	10 40       	sbci	r17, 0x00	; 0
    2c76:	0c c0       	rjmp	.+24     	; 0x2c90 <timerSetMode+0x106>
    2c78:	8f 2d       	mov	r24, r15
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	24 e0       	ldi	r18, 0x04	; 4
    2c7e:	88 0f       	add	r24, r24
    2c80:	99 1f       	adc	r25, r25
    2c82:	2a 95       	dec	r18
    2c84:	e1 f7       	brne	.-8      	; 0x2c7e <timerSetMode+0xf4>
    2c86:	8c 0f       	add	r24, r28
    2c88:	9d 1f       	adc	r25, r29
    2c8a:	0e 94 9f 13 	call	0x273e	; 0x273e <compareDetach>
    2c8e:	fa 94       	dec	r15
    2c90:	f7 fe       	sbrs	r15, 7
    2c92:	f2 cf       	rjmp	.-28     	; 0x2c78 <timerSetMode+0xee>
    2c94:	c8 01       	movw	r24, r16
    2c96:	0e 94 61 15 	call	0x2ac2	; 0x2ac2 <timerInit>
    2c9a:	03 c0       	rjmp	.+6      	; 0x2ca2 <timerSetMode+0x118>
    2c9c:	86 ef       	ldi	r24, 0xF6	; 246
    2c9e:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2ca2:	df 91       	pop	r29
    2ca4:	cf 91       	pop	r28
    2ca6:	1f 91       	pop	r17
    2ca8:	0f 91       	pop	r16
    2caa:	ff 90       	pop	r15
    2cac:	ef 90       	pop	r14
    2cae:	df 90       	pop	r13
    2cb0:	08 95       	ret

00002cb2 <initTimers>:
    2cb2:	0f 93       	push	r16
    2cb4:	1f 93       	push	r17
    2cb6:	cf 93       	push	r28
    2cb8:	df 93       	push	r29
    2cba:	f8 94       	cli
    2cbc:	00 91 0a 02 	lds	r16, 0x020A
    2cc0:	ca e3       	ldi	r28, 0x3A	; 58
    2cc2:	d2 e0       	ldi	r29, 0x02	; 2
    2cc4:	10 e0       	ldi	r17, 0x00	; 0
    2cc6:	18 c0       	rjmp	.+48     	; 0x2cf8 <initTimers+0x46>
    2cc8:	ce 01       	movw	r24, r28
    2cca:	60 e0       	ldi	r22, 0x00	; 0
    2ccc:	70 e0       	ldi	r23, 0x00	; 0
    2cce:	40 e0       	ldi	r20, 0x00	; 0
    2cd0:	50 e0       	ldi	r21, 0x00	; 0
    2cd2:	0e 94 3a 1a 	call	0x3474	; 0x3474 <timerOverflowAttach>
    2cd6:	ce 01       	movw	r24, r28
    2cd8:	0e 94 6d 19 	call	0x32da	; 0x32da <timerCaptureDetach>
    2cdc:	ce 01       	movw	r24, r28
    2cde:	60 e0       	ldi	r22, 0x00	; 0
    2ce0:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <timerSetMode>
    2ce4:	ce 01       	movw	r24, r28
    2ce6:	04 96       	adiw	r24, 0x04	; 4
    2ce8:	fc 01       	movw	r30, r24
    2cea:	a5 91       	lpm	r26, Z+
    2cec:	b4 91       	lpm	r27, Z+
    2cee:	8c 91       	ld	r24, X
    2cf0:	88 7f       	andi	r24, 0xF8	; 248
    2cf2:	8c 93       	st	X, r24
    2cf4:	1f 5f       	subi	r17, 0xFF	; 255
    2cf6:	ac 96       	adiw	r28, 0x2c	; 44
    2cf8:	10 17       	cp	r17, r16
    2cfa:	30 f3       	brcs	.-52     	; 0x2cc8 <initTimers+0x16>
    2cfc:	78 94       	sei
    2cfe:	df 91       	pop	r29
    2d00:	cf 91       	pop	r28
    2d02:	1f 91       	pop	r17
    2d04:	0f 91       	pop	r16
    2d06:	08 95       	ret

00002d08 <compareAttach>:
    2d08:	6f 92       	push	r6
    2d0a:	7f 92       	push	r7
    2d0c:	8f 92       	push	r8
    2d0e:	9f 92       	push	r9
    2d10:	af 92       	push	r10
    2d12:	bf 92       	push	r11
    2d14:	cf 92       	push	r12
    2d16:	df 92       	push	r13
    2d18:	ef 92       	push	r14
    2d1a:	ff 92       	push	r15
    2d1c:	0f 93       	push	r16
    2d1e:	1f 93       	push	r17
    2d20:	cf 93       	push	r28
    2d22:	df 93       	push	r29
    2d24:	7c 01       	movw	r14, r24
    2d26:	5b 01       	movw	r10, r22
    2d28:	4a 01       	movw	r8, r20
    2d2a:	39 01       	movw	r6, r18
    2d2c:	22 e0       	ldi	r18, 0x02	; 2
    2d2e:	30 e0       	ldi	r19, 0x00	; 0
    2d30:	e2 0e       	add	r14, r18
    2d32:	f3 1e       	adc	r15, r19
    2d34:	f7 01       	movw	r30, r14
    2d36:	84 91       	lpm	r24, Z+
    2d38:	2e ef       	ldi	r18, 0xFE	; 254
    2d3a:	3f ef       	ldi	r19, 0xFF	; 255
    2d3c:	e2 0e       	add	r14, r18
    2d3e:	f3 1e       	adc	r15, r19
    2d40:	9c e2       	ldi	r25, 0x2C	; 44
    2d42:	89 9f       	mul	r24, r25
    2d44:	e0 01       	movw	r28, r0
    2d46:	11 24       	eor	r1, r1
    2d48:	c6 5c       	subi	r28, 0xC6	; 198
    2d4a:	dd 4f       	sbci	r29, 0xFD	; 253
    2d4c:	28 96       	adiw	r28, 0x08	; 8
    2d4e:	fe 01       	movw	r30, r28
    2d50:	84 91       	lpm	r24, Z+
    2d52:	28 97       	sbiw	r28, 0x08	; 8
    2d54:	88 23       	and	r24, r24
    2d56:	69 f1       	breq	.+90     	; 0x2db2 <compareAttach+0xaa>
    2d58:	f7 01       	movw	r30, r14
    2d5a:	c5 90       	lpm	r12, Z+
    2d5c:	d4 90       	lpm	r13, Z+
    2d5e:	61 15       	cp	r22, r1
    2d60:	71 05       	cpc	r23, r1
    2d62:	41 f0       	breq	.+16     	; 0x2d74 <compareAttach+0x6c>
    2d64:	f6 01       	movw	r30, r12
    2d66:	80 81       	ld	r24, Z
    2d68:	91 81       	ldd	r25, Z+1	; 0x01
    2d6a:	89 2b       	or	r24, r25
    2d6c:	19 f0       	breq	.+6      	; 0x2d74 <compareAttach+0x6c>
    2d6e:	8b ef       	ldi	r24, 0xFB	; 251
    2d70:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2d74:	ce 01       	movw	r24, r28
    2d76:	fe 01       	movw	r30, r28
    2d78:	a5 91       	lpm	r26, Z+
    2d7a:	b4 91       	lpm	r27, Z+
    2d7c:	6d 91       	ld	r22, X+
    2d7e:	7c 91       	ld	r23, X
    2d80:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <timerSetPrescaler>
    2d84:	87 01       	movw	r16, r14
    2d86:	0d 5f       	subi	r16, 0xFD	; 253
    2d88:	1f 4f       	sbci	r17, 0xFF	; 255
    2d8a:	c8 01       	movw	r24, r16
    2d8c:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    2d90:	c7 01       	movw	r24, r14
    2d92:	b4 01       	movw	r22, r8
    2d94:	0e 94 d6 13 	call	0x27ac	; 0x27ac <compareSetThreshold>
    2d98:	f6 01       	movw	r30, r12
    2d9a:	b1 82       	std	Z+1, r11	; 0x01
    2d9c:	a0 82       	st	Z, r10
    2d9e:	73 82       	std	Z+3, r7	; 0x03
    2da0:	62 82       	std	Z+2, r6	; 0x02
    2da2:	c7 01       	movw	r24, r14
    2da4:	08 96       	adiw	r24, 0x08	; 8
    2da6:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    2daa:	c8 01       	movw	r24, r16
    2dac:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    2db0:	03 c0       	rjmp	.+6      	; 0x2db8 <compareAttach+0xb0>
    2db2:	8d ef       	ldi	r24, 0xFD	; 253
    2db4:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    2db8:	df 91       	pop	r29
    2dba:	cf 91       	pop	r28
    2dbc:	1f 91       	pop	r17
    2dbe:	0f 91       	pop	r16
    2dc0:	ff 90       	pop	r15
    2dc2:	ef 90       	pop	r14
    2dc4:	df 90       	pop	r13
    2dc6:	cf 90       	pop	r12
    2dc8:	bf 90       	pop	r11
    2dca:	af 90       	pop	r10
    2dcc:	9f 90       	pop	r9
    2dce:	8f 90       	pop	r8
    2dd0:	7f 90       	pop	r7
    2dd2:	6f 90       	pop	r6
    2dd4:	08 95       	ret

00002dd6 <__clockInit>:
    2dd6:	2f 92       	push	r2
    2dd8:	3f 92       	push	r3
    2dda:	4f 92       	push	r4
    2ddc:	5f 92       	push	r5
    2dde:	6f 92       	push	r6
    2de0:	7f 92       	push	r7
    2de2:	8f 92       	push	r8
    2de4:	9f 92       	push	r9
    2de6:	af 92       	push	r10
    2de8:	bf 92       	push	r11
    2dea:	cf 92       	push	r12
    2dec:	df 92       	push	r13
    2dee:	ef 92       	push	r14
    2df0:	ff 92       	push	r15
    2df2:	0f 93       	push	r16
    2df4:	1f 93       	push	r17
    2df6:	df 93       	push	r29
    2df8:	cf 93       	push	r28
    2dfa:	cd b7       	in	r28, 0x3d	; 61
    2dfc:	de b7       	in	r29, 0x3e	; 62
    2dfe:	2e 97       	sbiw	r28, 0x0e	; 14
    2e00:	0f b6       	in	r0, 0x3f	; 63
    2e02:	f8 94       	cli
    2e04:	de bf       	out	0x3e, r29	; 62
    2e06:	0f be       	out	0x3f, r0	; 63
    2e08:	cd bf       	out	0x3d, r28	; 61
    2e0a:	10 92 b7 03 	sts	0x03B7, r1
    2e0e:	10 92 b6 03 	sts	0x03B6, r1
    2e12:	b0 90 0a 02 	lds	r11, 0x020A
    2e16:	ba 94       	dec	r11
    2e18:	80 91 04 02 	lds	r24, 0x0204
    2e1c:	90 91 05 02 	lds	r25, 0x0205
    2e20:	9c 01       	movw	r18, r24
    2e22:	40 e0       	ldi	r20, 0x00	; 0
    2e24:	50 e0       	ldi	r21, 0x00	; 0
    2e26:	2d 83       	std	Y+5, r18	; 0x05
    2e28:	3e 83       	std	Y+6, r19	; 0x06
    2e2a:	4f 83       	std	Y+7, r20	; 0x07
    2e2c:	58 87       	std	Y+8, r21	; 0x08
    2e2e:	ca 01       	movw	r24, r20
    2e30:	b9 01       	movw	r22, r18
    2e32:	2c e0       	ldi	r18, 0x0C	; 12
    2e34:	30 e0       	ldi	r19, 0x00	; 0
    2e36:	40 e0       	ldi	r20, 0x00	; 0
    2e38:	50 e0       	ldi	r21, 0x00	; 0
    2e3a:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    2e3e:	2b 01       	movw	r4, r22
    2e40:	3c 01       	movw	r6, r24
    2e42:	8c e2       	ldi	r24, 0x2C	; 44
    2e44:	3b 2d       	mov	r19, r11
    2e46:	38 02       	muls	r19, r24
    2e48:	10 01       	movw	r2, r0
    2e4a:	11 24       	eor	r1, r1
    2e4c:	4a e3       	ldi	r20, 0x3A	; 58
    2e4e:	52 e0       	ldi	r21, 0x02	; 2
    2e50:	24 0e       	add	r2, r20
    2e52:	35 1e       	adc	r3, r21
    2e54:	1c 86       	std	Y+12, r1	; 0x0c
    2e56:	1b 86       	std	Y+11, r1	; 0x0b
    2e58:	1a 86       	std	Y+10, r1	; 0x0a
    2e5a:	19 86       	std	Y+9, r1	; 0x09
    2e5c:	88 24       	eor	r8, r8
    2e5e:	99 24       	eor	r9, r9
    2e60:	51 c0       	rjmp	.+162    	; 0x2f04 <__clockInit+0x12e>
    2e62:	c1 01       	movw	r24, r2
    2e64:	04 96       	adiw	r24, 0x04	; 4
    2e66:	fc 01       	movw	r30, r24
    2e68:	a5 91       	lpm	r26, Z+
    2e6a:	b4 91       	lpm	r27, Z+
    2e6c:	8c 91       	ld	r24, X
    2e6e:	90 e0       	ldi	r25, 0x00	; 0
    2e70:	87 70       	andi	r24, 0x07	; 7
    2e72:	90 70       	andi	r25, 0x00	; 0
    2e74:	89 2b       	or	r24, r25
    2e76:	09 f0       	breq	.+2      	; 0x2e7a <__clockInit+0xa4>
    2e78:	40 c0       	rjmp	.+128    	; 0x2efa <__clockInit+0x124>
    2e7a:	f8 c0       	rjmp	.+496    	; 0x306c <__clockInit+0x296>
    2e7c:	28 e0       	ldi	r18, 0x08	; 8
    2e7e:	30 e0       	ldi	r19, 0x00	; 0
    2e80:	22 0e       	add	r2, r18
    2e82:	33 1e       	adc	r3, r19
    2e84:	f1 01       	movw	r30, r2
    2e86:	84 91       	lpm	r24, Z+
    2e88:	28 ef       	ldi	r18, 0xF8	; 248
    2e8a:	3f ef       	ldi	r19, 0xFF	; 255
    2e8c:	22 0e       	add	r2, r18
    2e8e:	33 1e       	adc	r3, r19
    2e90:	82 30       	cpi	r24, 0x02	; 2
    2e92:	98 f1       	brcs	.+102    	; 0x2efa <__clockInit+0x124>
    2e94:	4b 85       	ldd	r20, Y+11	; 0x0b
    2e96:	5c 85       	ldd	r21, Y+12	; 0x0c
    2e98:	4f 3f       	cpi	r20, 0xFF	; 255
    2e9a:	51 05       	cpc	r21, r1
    2e9c:	69 f0       	breq	.+26     	; 0x2eb8 <__clockInit+0xe2>
    2e9e:	60 f0       	brcs	.+24     	; 0x2eb8 <__clockInit+0xe2>
    2ea0:	86 e0       	ldi	r24, 0x06	; 6
    2ea2:	90 e0       	ldi	r25, 0x00	; 0
    2ea4:	28 0e       	add	r2, r24
    2ea6:	39 1e       	adc	r3, r25
    2ea8:	f1 01       	movw	r30, r2
    2eaa:	84 91       	lpm	r24, Z+
    2eac:	2a ef       	ldi	r18, 0xFA	; 250
    2eae:	3f ef       	ldi	r19, 0xFF	; 255
    2eb0:	22 0e       	add	r2, r18
    2eb2:	33 1e       	adc	r3, r19
    2eb4:	88 23       	and	r24, r24
    2eb6:	09 f1       	breq	.+66     	; 0x2efa <__clockInit+0x124>
    2eb8:	c1 01       	movw	r24, r2
    2eba:	6c e0       	ldi	r22, 0x0C	; 12
    2ebc:	70 e0       	ldi	r23, 0x00	; 0
    2ebe:	0e 94 93 14 	call	0x2926	; 0x2926 <timerGetBestPrescaler>
    2ec2:	6c 01       	movw	r12, r24
    2ec4:	9c 01       	movw	r18, r24
    2ec6:	40 e0       	ldi	r20, 0x00	; 0
    2ec8:	50 e0       	ldi	r21, 0x00	; 0
    2eca:	c3 01       	movw	r24, r6
    2ecc:	b2 01       	movw	r22, r4
    2ece:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    2ed2:	79 01       	movw	r14, r18
    2ed4:	8a 01       	movw	r16, r20
    2ed6:	81 14       	cp	r8, r1
    2ed8:	91 04       	cpc	r9, r1
    2eda:	51 f0       	breq	.+20     	; 0x2ef0 <__clockInit+0x11a>
    2edc:	4b 85       	ldd	r20, Y+11	; 0x0b
    2ede:	5c 85       	ldd	r21, Y+12	; 0x0c
    2ee0:	ca 01       	movw	r24, r20
    2ee2:	a0 e0       	ldi	r26, 0x00	; 0
    2ee4:	b0 e0       	ldi	r27, 0x00	; 0
    2ee6:	8e 15       	cp	r24, r14
    2ee8:	9f 05       	cpc	r25, r15
    2eea:	a0 07       	cpc	r26, r16
    2eec:	b1 07       	cpc	r27, r17
    2eee:	28 f4       	brcc	.+10     	; 0x2efa <__clockInit+0x124>
    2ef0:	fc 86       	std	Y+12, r15	; 0x0c
    2ef2:	eb 86       	std	Y+11, r14	; 0x0b
    2ef4:	da 86       	std	Y+10, r13	; 0x0a
    2ef6:	c9 86       	std	Y+9, r12	; 0x09
    2ef8:	41 01       	movw	r8, r2
    2efa:	ba 94       	dec	r11
    2efc:	84 ed       	ldi	r24, 0xD4	; 212
    2efe:	9f ef       	ldi	r25, 0xFF	; 255
    2f00:	28 0e       	add	r2, r24
    2f02:	39 1e       	adc	r3, r25
    2f04:	b7 fe       	sbrs	r11, 7
    2f06:	ad cf       	rjmp	.-166    	; 0x2e62 <__clockInit+0x8c>
    2f08:	81 14       	cp	r8, r1
    2f0a:	91 04       	cpc	r9, r1
    2f0c:	09 f4       	brne	.+2      	; 0x2f10 <__clockInit+0x13a>
    2f0e:	a5 c0       	rjmp	.+330    	; 0x305a <__clockInit+0x284>
    2f10:	a6 e0       	ldi	r26, 0x06	; 6
    2f12:	b0 e0       	ldi	r27, 0x00	; 0
    2f14:	8a 0e       	add	r8, r26
    2f16:	9b 1e       	adc	r9, r27
    2f18:	f4 01       	movw	r30, r8
    2f1a:	84 91       	lpm	r24, Z+
    2f1c:	2a ef       	ldi	r18, 0xFA	; 250
    2f1e:	3f ef       	ldi	r19, 0xFF	; 255
    2f20:	82 0e       	add	r8, r18
    2f22:	93 1e       	adc	r9, r19
    2f24:	88 23       	and	r24, r24
    2f26:	31 f4       	brne	.+12     	; 0x2f34 <__clockInit+0x15e>
    2f28:	5f ef       	ldi	r21, 0xFF	; 255
    2f2a:	a5 2e       	mov	r10, r21
    2f2c:	b1 2c       	mov	r11, r1
    2f2e:	c1 2c       	mov	r12, r1
    2f30:	d1 2c       	mov	r13, r1
    2f32:	06 c0       	rjmp	.+12     	; 0x2f40 <__clockInit+0x16a>
    2f34:	4f ef       	ldi	r20, 0xFF	; 255
    2f36:	a4 2e       	mov	r10, r20
    2f38:	4f ef       	ldi	r20, 0xFF	; 255
    2f3a:	b4 2e       	mov	r11, r20
    2f3c:	c1 2c       	mov	r12, r1
    2f3e:	d1 2c       	mov	r13, r1
    2f40:	a9 85       	ldd	r26, Y+9	; 0x09
    2f42:	ba 85       	ldd	r27, Y+10	; 0x0a
    2f44:	cd 01       	movw	r24, r26
    2f46:	a0 e0       	ldi	r26, 0x00	; 0
    2f48:	b0 e0       	ldi	r27, 0x00	; 0
    2f4a:	89 83       	std	Y+1, r24	; 0x01
    2f4c:	9a 83       	std	Y+2, r25	; 0x02
    2f4e:	ab 83       	std	Y+3, r26	; 0x03
    2f50:	bc 83       	std	Y+4, r27	; 0x04
    2f52:	6d 81       	ldd	r22, Y+5	; 0x05
    2f54:	7e 81       	ldd	r23, Y+6	; 0x06
    2f56:	8f 81       	ldd	r24, Y+7	; 0x07
    2f58:	98 85       	ldd	r25, Y+8	; 0x08
    2f5a:	29 81       	ldd	r18, Y+1	; 0x01
    2f5c:	3a 81       	ldd	r19, Y+2	; 0x02
    2f5e:	4b 81       	ldd	r20, Y+3	; 0x03
    2f60:	5c 81       	ldd	r21, Y+4	; 0x04
    2f62:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    2f66:	79 01       	movw	r14, r18
    2f68:	8a 01       	movw	r16, r20
    2f6a:	08 94       	sec
    2f6c:	e1 1c       	adc	r14, r1
    2f6e:	f1 1c       	adc	r15, r1
    2f70:	01 1d       	adc	r16, r1
    2f72:	11 1d       	adc	r17, r1
    2f74:	3c e0       	ldi	r19, 0x0C	; 12
    2f76:	63 2e       	mov	r6, r19
    2f78:	71 2c       	mov	r7, r1
    2f7a:	eb 85       	ldd	r30, Y+11	; 0x0b
    2f7c:	fc 85       	ldd	r31, Y+12	; 0x0c
    2f7e:	1f 01       	movw	r2, r30
    2f80:	44 24       	eor	r4, r4
    2f82:	55 24       	eor	r5, r5
    2f84:	d2 01       	movw	r26, r4
    2f86:	c1 01       	movw	r24, r2
    2f88:	8e 0d       	add	r24, r14
    2f8a:	9f 1d       	adc	r25, r15
    2f8c:	a0 1f       	adc	r26, r16
    2f8e:	b1 1f       	adc	r27, r17
    2f90:	8a 15       	cp	r24, r10
    2f92:	9b 05       	cpc	r25, r11
    2f94:	ac 05       	cpc	r26, r12
    2f96:	bd 05       	cpc	r27, r13
    2f98:	80 f5       	brcc	.+96     	; 0x2ffa <__clockInit+0x224>
    2f9a:	93 01       	movw	r18, r6
    2f9c:	2f 5f       	subi	r18, 0xFF	; 255
    2f9e:	3f 4f       	sbci	r19, 0xFF	; 255
    2fa0:	3e 87       	std	Y+14, r19	; 0x0e
    2fa2:	2d 87       	std	Y+13, r18	; 0x0d
    2fa4:	c4 01       	movw	r24, r8
    2fa6:	b9 01       	movw	r22, r18
    2fa8:	0e 94 93 14 	call	0x2926	; 0x2926 <timerGetBestPrescaler>
    2fac:	49 85       	ldd	r20, Y+9	; 0x09
    2fae:	5a 85       	ldd	r21, Y+10	; 0x0a
    2fb0:	84 17       	cp	r24, r20
    2fb2:	95 07       	cpc	r25, r21
    2fb4:	11 f5       	brne	.+68     	; 0x2ffa <__clockInit+0x224>
    2fb6:	ad 85       	ldd	r26, Y+13	; 0x0d
    2fb8:	be 85       	ldd	r27, Y+14	; 0x0e
    2fba:	bd 01       	movw	r22, r26
    2fbc:	80 e0       	ldi	r24, 0x00	; 0
    2fbe:	90 e0       	ldi	r25, 0x00	; 0
    2fc0:	2d 81       	ldd	r18, Y+5	; 0x05
    2fc2:	3e 81       	ldd	r19, Y+6	; 0x06
    2fc4:	4f 81       	ldd	r20, Y+7	; 0x07
    2fc6:	58 85       	ldd	r21, Y+8	; 0x08
    2fc8:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    2fcc:	29 81       	ldd	r18, Y+1	; 0x01
    2fce:	3a 81       	ldd	r19, Y+2	; 0x02
    2fd0:	4b 81       	ldd	r20, Y+3	; 0x03
    2fd2:	5c 81       	ldd	r21, Y+4	; 0x04
    2fd4:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    2fd8:	c9 01       	movw	r24, r18
    2fda:	da 01       	movw	r26, r20
    2fdc:	a8 16       	cp	r10, r24
    2fde:	b9 06       	cpc	r11, r25
    2fe0:	ca 06       	cpc	r12, r26
    2fe2:	db 06       	cpc	r13, r27
    2fe4:	50 f0       	brcs	.+20     	; 0x2ffa <__clockInit+0x224>
    2fe6:	28 16       	cp	r2, r24
    2fe8:	39 06       	cpc	r3, r25
    2fea:	4a 06       	cpc	r4, r26
    2fec:	5b 06       	cpc	r5, r27
    2fee:	28 f4       	brcc	.+10     	; 0x2ffa <__clockInit+0x224>
    2ff0:	3c 87       	std	Y+12, r19	; 0x0c
    2ff2:	2b 87       	std	Y+11, r18	; 0x0b
    2ff4:	6d 84       	ldd	r6, Y+13	; 0x0d
    2ff6:	7e 84       	ldd	r7, Y+14	; 0x0e
    2ff8:	c0 cf       	rjmp	.-128    	; 0x2f7a <__clockInit+0x1a4>
    2ffa:	90 92 b7 03 	sts	0x03B7, r9
    2ffe:	80 92 b6 03 	sts	0x03B6, r8
    3002:	b3 01       	movw	r22, r6
    3004:	80 e0       	ldi	r24, 0x00	; 0
    3006:	90 e0       	ldi	r25, 0x00	; 0
    3008:	28 ee       	ldi	r18, 0xE8	; 232
    300a:	33 e0       	ldi	r19, 0x03	; 3
    300c:	40 e0       	ldi	r20, 0x00	; 0
    300e:	50 e0       	ldi	r21, 0x00	; 0
    3010:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    3014:	60 93 79 03 	sts	0x0379, r22
    3018:	70 93 7a 03 	sts	0x037A, r23
    301c:	80 93 7b 03 	sts	0x037B, r24
    3020:	90 93 7c 03 	sts	0x037C, r25
    3024:	c4 01       	movw	r24, r8
    3026:	69 85       	ldd	r22, Y+9	; 0x09
    3028:	7a 85       	ldd	r23, Y+10	; 0x0a
    302a:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <timerSetPrescaler>
    302e:	80 91 b6 03 	lds	r24, 0x03B6
    3032:	90 91 b7 03 	lds	r25, 0x03B7
    3036:	64 e0       	ldi	r22, 0x04	; 4
    3038:	0e 94 c5 15 	call	0x2b8a	; 0x2b8a <timerSetMode>
    303c:	e0 91 b6 03 	lds	r30, 0x03B6
    3040:	f0 91 b7 03 	lds	r31, 0x03B7
    3044:	77 96       	adiw	r30, 0x17	; 23
    3046:	85 91       	lpm	r24, Z+
    3048:	94 91       	lpm	r25, Z+
    304a:	69 e3       	ldi	r22, 0x39	; 57
    304c:	7a e1       	ldi	r23, 0x1A	; 26
    304e:	4b 85       	ldd	r20, Y+11	; 0x0b
    3050:	5c 85       	ldd	r21, Y+12	; 0x0c
    3052:	20 e0       	ldi	r18, 0x00	; 0
    3054:	30 e0       	ldi	r19, 0x00	; 0
    3056:	0e 94 84 16 	call	0x2d08	; 0x2d08 <compareAttach>
    305a:	80 91 b1 03 	lds	r24, 0x03B1
    305e:	88 23       	and	r24, r24
    3060:	61 f0       	breq	.+24     	; 0x307a <__clockInit+0x2a4>
    3062:	10 92 b1 03 	sts	0x03B1, r1
    3066:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    306a:	07 c0       	rjmp	.+14     	; 0x307a <__clockInit+0x2a4>
    306c:	f1 01       	movw	r30, r2
    306e:	39 96       	adiw	r30, 0x09	; 9
    3070:	85 91       	lpm	r24, Z+
    3072:	94 91       	lpm	r25, Z+
    3074:	84 fd       	sbrc	r24, 4
    3076:	02 cf       	rjmp	.-508    	; 0x2e7c <__clockInit+0xa6>
    3078:	40 cf       	rjmp	.-384    	; 0x2efa <__clockInit+0x124>
    307a:	2e 96       	adiw	r28, 0x0e	; 14
    307c:	0f b6       	in	r0, 0x3f	; 63
    307e:	f8 94       	cli
    3080:	de bf       	out	0x3e, r29	; 62
    3082:	0f be       	out	0x3f, r0	; 63
    3084:	cd bf       	out	0x3d, r28	; 61
    3086:	cf 91       	pop	r28
    3088:	df 91       	pop	r29
    308a:	1f 91       	pop	r17
    308c:	0f 91       	pop	r16
    308e:	ff 90       	pop	r15
    3090:	ef 90       	pop	r14
    3092:	df 90       	pop	r13
    3094:	cf 90       	pop	r12
    3096:	bf 90       	pop	r11
    3098:	af 90       	pop	r10
    309a:	9f 90       	pop	r9
    309c:	8f 90       	pop	r8
    309e:	7f 90       	pop	r7
    30a0:	6f 90       	pop	r6
    30a2:	5f 90       	pop	r5
    30a4:	4f 90       	pop	r4
    30a6:	3f 90       	pop	r3
    30a8:	2f 90       	pop	r2
    30aa:	08 95       	ret

000030ac <clockHasElapsedGetOverflow>:
    30ac:	8f 92       	push	r8
    30ae:	9f 92       	push	r9
    30b0:	af 92       	push	r10
    30b2:	bf 92       	push	r11
    30b4:	cf 92       	push	r12
    30b6:	df 92       	push	r13
    30b8:	ef 92       	push	r14
    30ba:	ff 92       	push	r15
    30bc:	0f 93       	push	r16
    30be:	1f 93       	push	r17
    30c0:	cf 93       	push	r28
    30c2:	df 93       	push	r29
    30c4:	6b 01       	movw	r12, r22
    30c6:	7c 01       	movw	r14, r24
    30c8:	49 01       	movw	r8, r18
    30ca:	5a 01       	movw	r10, r20
    30cc:	e8 01       	movw	r28, r16
    30ce:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <clockGetus>
    30d2:	6c 19       	sub	r22, r12
    30d4:	7d 09       	sbc	r23, r13
    30d6:	8e 09       	sbc	r24, r14
    30d8:	9f 09       	sbc	r25, r15
    30da:	86 16       	cp	r8, r22
    30dc:	97 06       	cpc	r9, r23
    30de:	a8 06       	cpc	r10, r24
    30e0:	b9 06       	cpc	r11, r25
    30e2:	50 f4       	brcc	.+20     	; 0x30f8 <clockHasElapsedGetOverflow+0x4c>
    30e4:	68 19       	sub	r22, r8
    30e6:	79 09       	sbc	r23, r9
    30e8:	8a 09       	sbc	r24, r10
    30ea:	9b 09       	sbc	r25, r11
    30ec:	68 83       	st	Y, r22
    30ee:	79 83       	std	Y+1, r23	; 0x01
    30f0:	8a 83       	std	Y+2, r24	; 0x02
    30f2:	9b 83       	std	Y+3, r25	; 0x03
    30f4:	8f ef       	ldi	r24, 0xFF	; 255
    30f6:	09 c0       	rjmp	.+18     	; 0x310a <clockHasElapsedGetOverflow+0x5e>
    30f8:	86 1a       	sub	r8, r22
    30fa:	97 0a       	sbc	r9, r23
    30fc:	a8 0a       	sbc	r10, r24
    30fe:	b9 0a       	sbc	r11, r25
    3100:	88 82       	st	Y, r8
    3102:	99 82       	std	Y+1, r9	; 0x01
    3104:	aa 82       	std	Y+2, r10	; 0x02
    3106:	bb 82       	std	Y+3, r11	; 0x03
    3108:	80 e0       	ldi	r24, 0x00	; 0
    310a:	df 91       	pop	r29
    310c:	cf 91       	pop	r28
    310e:	1f 91       	pop	r17
    3110:	0f 91       	pop	r16
    3112:	ff 90       	pop	r15
    3114:	ef 90       	pop	r14
    3116:	df 90       	pop	r13
    3118:	cf 90       	pop	r12
    311a:	bf 90       	pop	r11
    311c:	af 90       	pop	r10
    311e:	9f 90       	pop	r9
    3120:	8f 90       	pop	r8
    3122:	08 95       	ret

00003124 <clockWaitus>:
    3124:	af 92       	push	r10
    3126:	bf 92       	push	r11
    3128:	cf 92       	push	r12
    312a:	df 92       	push	r13
    312c:	ef 92       	push	r14
    312e:	ff 92       	push	r15
    3130:	0f 93       	push	r16
    3132:	1f 93       	push	r17
    3134:	5b 01       	movw	r10, r22
    3136:	6c 01       	movw	r12, r24
    3138:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <clockGetus>
    313c:	7b 01       	movw	r14, r22
    313e:	8c 01       	movw	r16, r24
    3140:	01 c0       	rjmp	.+2      	; 0x3144 <clockWaitus+0x20>
    3142:	00 00       	nop
    3144:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <clockGetus>
    3148:	6e 19       	sub	r22, r14
    314a:	7f 09       	sbc	r23, r15
    314c:	80 0b       	sbc	r24, r16
    314e:	91 0b       	sbc	r25, r17
    3150:	6a 15       	cp	r22, r10
    3152:	7b 05       	cpc	r23, r11
    3154:	8c 05       	cpc	r24, r12
    3156:	9d 05       	cpc	r25, r13
    3158:	a0 f3       	brcs	.-24     	; 0x3142 <clockWaitus+0x1e>
    315a:	1f 91       	pop	r17
    315c:	0f 91       	pop	r16
    315e:	ff 90       	pop	r15
    3160:	ef 90       	pop	r14
    3162:	df 90       	pop	r13
    3164:	cf 90       	pop	r12
    3166:	bf 90       	pop	r11
    3168:	af 90       	pop	r10
    316a:	08 95       	ret

0000316c <clockWaitms>:
    316c:	28 ee       	ldi	r18, 0xE8	; 232
    316e:	33 e0       	ldi	r19, 0x03	; 3
    3170:	40 e0       	ldi	r20, 0x00	; 0
    3172:	50 e0       	ldi	r21, 0x00	; 0
    3174:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    3178:	0e 94 92 18 	call	0x3124	; 0x3124 <clockWaitus>
    317c:	08 95       	ret

0000317e <delay_ms>:
    317e:	ef 92       	push	r14
    3180:	ff 92       	push	r15
    3182:	0f 93       	push	r16
    3184:	1f 93       	push	r17
    3186:	7b 01       	movw	r14, r22
    3188:	8c 01       	movw	r16, r24
    318a:	80 91 b6 03 	lds	r24, 0x03B6
    318e:	90 91 b7 03 	lds	r25, 0x03B7
    3192:	89 2b       	or	r24, r25
    3194:	29 f0       	breq	.+10     	; 0x31a0 <delay_ms+0x22>
    3196:	c8 01       	movw	r24, r16
    3198:	b7 01       	movw	r22, r14
    319a:	0e 94 b6 18 	call	0x316c	; 0x316c <clockWaitms>
    319e:	0c c0       	rjmp	.+24     	; 0x31b8 <delay_ms+0x3a>
    31a0:	20 91 04 02 	lds	r18, 0x0204
    31a4:	30 91 05 02 	lds	r19, 0x0205
    31a8:	40 e0       	ldi	r20, 0x00	; 0
    31aa:	50 e0       	ldi	r21, 0x00	; 0
    31ac:	c8 01       	movw	r24, r16
    31ae:	b7 01       	movw	r22, r14
    31b0:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    31b4:	0e 94 72 10 	call	0x20e4	; 0x20e4 <delay_cycles>
    31b8:	1f 91       	pop	r17
    31ba:	0f 91       	pop	r16
    31bc:	ff 90       	pop	r15
    31be:	ef 90       	pop	r14
    31c0:	08 95       	ret

000031c2 <delay_us>:
    31c2:	ef 92       	push	r14
    31c4:	ff 92       	push	r15
    31c6:	0f 93       	push	r16
    31c8:	1f 93       	push	r17
    31ca:	7b 01       	movw	r14, r22
    31cc:	8c 01       	movw	r16, r24
    31ce:	80 91 b6 03 	lds	r24, 0x03B6
    31d2:	90 91 b7 03 	lds	r25, 0x03B7
    31d6:	89 2b       	or	r24, r25
    31d8:	59 f0       	breq	.+22     	; 0x31f0 <delay_us+0x2e>
    31da:	85 e6       	ldi	r24, 0x65	; 101
    31dc:	e8 16       	cp	r14, r24
    31de:	f1 04       	cpc	r15, r1
    31e0:	01 05       	cpc	r16, r1
    31e2:	11 05       	cpc	r17, r1
    31e4:	28 f0       	brcs	.+10     	; 0x31f0 <delay_us+0x2e>
    31e6:	c8 01       	movw	r24, r16
    31e8:	b7 01       	movw	r22, r14
    31ea:	0e 94 92 18 	call	0x3124	; 0x3124 <clockWaitus>
    31ee:	14 c0       	rjmp	.+40     	; 0x3218 <delay_us+0x56>
    31f0:	20 91 04 02 	lds	r18, 0x0204
    31f4:	30 91 05 02 	lds	r19, 0x0205
    31f8:	40 e0       	ldi	r20, 0x00	; 0
    31fa:	50 e0       	ldi	r21, 0x00	; 0
    31fc:	c8 01       	movw	r24, r16
    31fe:	b7 01       	movw	r22, r14
    3200:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    3204:	28 ee       	ldi	r18, 0xE8	; 232
    3206:	33 e0       	ldi	r19, 0x03	; 3
    3208:	40 e0       	ldi	r20, 0x00	; 0
    320a:	50 e0       	ldi	r21, 0x00	; 0
    320c:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    3210:	ca 01       	movw	r24, r20
    3212:	b9 01       	movw	r22, r18
    3214:	0e 94 72 10 	call	0x20e4	; 0x20e4 <delay_cycles>
    3218:	1f 91       	pop	r17
    321a:	0f 91       	pop	r16
    321c:	ff 90       	pop	r15
    321e:	ef 90       	pop	r14
    3220:	08 95       	ret

00003222 <clockHasElapsed>:
    3222:	af 92       	push	r10
    3224:	bf 92       	push	r11
    3226:	cf 92       	push	r12
    3228:	df 92       	push	r13
    322a:	ef 92       	push	r14
    322c:	ff 92       	push	r15
    322e:	0f 93       	push	r16
    3230:	1f 93       	push	r17
    3232:	7b 01       	movw	r14, r22
    3234:	8c 01       	movw	r16, r24
    3236:	59 01       	movw	r10, r18
    3238:	6a 01       	movw	r12, r20
    323a:	0e 94 d8 12 	call	0x25b0	; 0x25b0 <clockGetus>
    323e:	6e 19       	sub	r22, r14
    3240:	7f 09       	sbc	r23, r15
    3242:	80 0b       	sbc	r24, r16
    3244:	91 0b       	sbc	r25, r17
    3246:	6a 15       	cp	r22, r10
    3248:	7b 05       	cpc	r23, r11
    324a:	8c 05       	cpc	r24, r12
    324c:	9d 05       	cpc	r25, r13
    324e:	10 f4       	brcc	.+4      	; 0x3254 <clockHasElapsed+0x32>
    3250:	80 e0       	ldi	r24, 0x00	; 0
    3252:	01 c0       	rjmp	.+2      	; 0x3256 <clockHasElapsed+0x34>
    3254:	8f ef       	ldi	r24, 0xFF	; 255
    3256:	1f 91       	pop	r17
    3258:	0f 91       	pop	r16
    325a:	ff 90       	pop	r15
    325c:	ef 90       	pop	r14
    325e:	df 90       	pop	r13
    3260:	cf 90       	pop	r12
    3262:	bf 90       	pop	r11
    3264:	af 90       	pop	r10
    3266:	08 95       	ret

00003268 <timerGetTicks>:
    3268:	0f 93       	push	r16
    326a:	1f 93       	push	r17
    326c:	df 93       	push	r29
    326e:	cf 93       	push	r28
    3270:	00 d0       	rcall	.+0      	; 0x3272 <timerGetTicks+0xa>
    3272:	00 d0       	rcall	.+0      	; 0x3274 <timerGetTicks+0xc>
    3274:	00 d0       	rcall	.+0      	; 0x3276 <timerGetTicks+0xe>
    3276:	cd b7       	in	r28, 0x3d	; 61
    3278:	de b7       	in	r29, 0x3e	; 62
    327a:	8c 01       	movw	r16, r24
    327c:	be 01       	movw	r22, r28
    327e:	6d 5f       	subi	r22, 0xFD	; 253
    3280:	7f 4f       	sbci	r23, 0xFF	; 255
    3282:	ae 01       	movw	r20, r28
    3284:	4f 5f       	subi	r20, 0xFF	; 255
    3286:	5f 4f       	sbci	r21, 0xFF	; 255
    3288:	0e 94 1d 12 	call	0x243a	; 0x243a <__timerRead>
    328c:	c8 01       	movw	r24, r16
    328e:	0e 94 38 14 	call	0x2870	; 0x2870 <timerGetTOP>
    3292:	a0 e0       	ldi	r26, 0x00	; 0
    3294:	b0 e0       	ldi	r27, 0x00	; 0
    3296:	01 96       	adiw	r24, 0x01	; 1
    3298:	a1 1d       	adc	r26, r1
    329a:	b1 1d       	adc	r27, r1
    329c:	2b 81       	ldd	r18, Y+3	; 0x03
    329e:	3c 81       	ldd	r19, Y+4	; 0x04
    32a0:	4d 81       	ldd	r20, Y+5	; 0x05
    32a2:	5e 81       	ldd	r21, Y+6	; 0x06
    32a4:	bc 01       	movw	r22, r24
    32a6:	cd 01       	movw	r24, r26
    32a8:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    32ac:	9b 01       	movw	r18, r22
    32ae:	ac 01       	movw	r20, r24
    32b0:	89 81       	ldd	r24, Y+1	; 0x01
    32b2:	9a 81       	ldd	r25, Y+2	; 0x02
    32b4:	a0 e0       	ldi	r26, 0x00	; 0
    32b6:	b0 e0       	ldi	r27, 0x00	; 0
    32b8:	28 0f       	add	r18, r24
    32ba:	39 1f       	adc	r19, r25
    32bc:	4a 1f       	adc	r20, r26
    32be:	5b 1f       	adc	r21, r27
    32c0:	b9 01       	movw	r22, r18
    32c2:	ca 01       	movw	r24, r20
    32c4:	26 96       	adiw	r28, 0x06	; 6
    32c6:	0f b6       	in	r0, 0x3f	; 63
    32c8:	f8 94       	cli
    32ca:	de bf       	out	0x3e, r29	; 62
    32cc:	0f be       	out	0x3f, r0	; 63
    32ce:	cd bf       	out	0x3d, r28	; 61
    32d0:	cf 91       	pop	r28
    32d2:	df 91       	pop	r29
    32d4:	1f 91       	pop	r17
    32d6:	0f 91       	pop	r16
    32d8:	08 95       	ret

000032da <timerCaptureDetach>:
    32da:	ef 92       	push	r14
    32dc:	ff 92       	push	r15
    32de:	0f 93       	push	r16
    32e0:	1f 93       	push	r17
    32e2:	8c 01       	movw	r16, r24
    32e4:	fc 01       	movw	r30, r24
    32e6:	e5 90       	lpm	r14, Z+
    32e8:	f4 90       	lpm	r15, Z+
    32ea:	81 96       	adiw	r24, 0x21	; 33
    32ec:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    32f0:	c8 01       	movw	r24, r16
    32f2:	84 96       	adiw	r24, 0x24	; 36
    32f4:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    32f8:	f7 01       	movw	r30, r14
    32fa:	13 86       	std	Z+11, r1	; 0x0b
    32fc:	12 86       	std	Z+10, r1	; 0x0a
    32fe:	1f 91       	pop	r17
    3300:	0f 91       	pop	r16
    3302:	ff 90       	pop	r15
    3304:	ef 90       	pop	r14
    3306:	08 95       	ret

00003308 <timerCaptureAttach>:
    3308:	af 92       	push	r10
    330a:	bf 92       	push	r11
    330c:	cf 92       	push	r12
    330e:	df 92       	push	r13
    3310:	ef 92       	push	r14
    3312:	ff 92       	push	r15
    3314:	0f 93       	push	r16
    3316:	1f 93       	push	r17
    3318:	cf 93       	push	r28
    331a:	df 93       	push	r29
    331c:	8c 01       	movw	r16, r24
    331e:	7b 01       	movw	r14, r22
    3320:	6a 01       	movw	r12, r20
    3322:	b2 2e       	mov	r11, r18
    3324:	fc 01       	movw	r30, r24
    3326:	c5 91       	lpm	r28, Z+
    3328:	d4 91       	lpm	r29, Z+
    332a:	8a 85       	ldd	r24, Y+10	; 0x0a
    332c:	9b 85       	ldd	r25, Y+11	; 0x0b
    332e:	89 2b       	or	r24, r25
    3330:	19 f0       	breq	.+6      	; 0x3338 <timerCaptureAttach+0x30>
    3332:	8a ee       	ldi	r24, 0xEA	; 234
    3334:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    3338:	af b6       	in	r10, 0x3f	; 63
    333a:	f8 94       	cli
    333c:	fb 86       	std	Y+11, r15	; 0x0b
    333e:	ea 86       	std	Y+10, r14	; 0x0a
    3340:	dd 86       	std	Y+13, r13	; 0x0d
    3342:	cc 86       	std	Y+12, r12	; 0x0c
    3344:	c8 01       	movw	r24, r16
    3346:	87 96       	adiw	r24, 0x27	; 39
    3348:	bb 20       	and	r11, r11
    334a:	19 f0       	breq	.+6      	; 0x3352 <timerCaptureAttach+0x4a>
    334c:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    3350:	02 c0       	rjmp	.+4      	; 0x3356 <timerCaptureAttach+0x4e>
    3352:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    3356:	c8 01       	movw	r24, r16
    3358:	84 96       	adiw	r24, 0x24	; 36
    335a:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    335e:	c8 01       	movw	r24, r16
    3360:	81 96       	adiw	r24, 0x21	; 33
    3362:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    3366:	af be       	out	0x3f, r10	; 63
    3368:	df 91       	pop	r29
    336a:	cf 91       	pop	r28
    336c:	1f 91       	pop	r17
    336e:	0f 91       	pop	r16
    3370:	ff 90       	pop	r15
    3372:	ef 90       	pop	r14
    3374:	df 90       	pop	r13
    3376:	cf 90       	pop	r12
    3378:	bf 90       	pop	r11
    337a:	af 90       	pop	r10
    337c:	08 95       	ret

0000337e <compareIsInUse>:
    337e:	9c 01       	movw	r18, r24
    3380:	fc 01       	movw	r30, r24
    3382:	a5 91       	lpm	r26, Z+
    3384:	b4 91       	lpm	r27, Z+
    3386:	8d 91       	ld	r24, X+
    3388:	9c 91       	ld	r25, X
    338a:	89 2b       	or	r24, r25
    338c:	11 f5       	brne	.+68     	; 0x33d2 <compareIsInUse+0x54>
    338e:	2e 5f       	subi	r18, 0xFE	; 254
    3390:	3f 4f       	sbci	r19, 0xFF	; 255
    3392:	f9 01       	movw	r30, r18
    3394:	94 91       	lpm	r25, Z+
    3396:	22 50       	subi	r18, 0x02	; 2
    3398:	30 40       	sbci	r19, 0x00	; 0
    339a:	8c e2       	ldi	r24, 0x2C	; 44
    339c:	98 9f       	mul	r25, r24
    339e:	b0 01       	movw	r22, r0
    33a0:	11 24       	eor	r1, r1
    33a2:	66 5c       	subi	r22, 0xC6	; 198
    33a4:	7d 4f       	sbci	r23, 0xFD	; 253
    33a6:	ab 01       	movw	r20, r22
    33a8:	49 5e       	subi	r20, 0xE9	; 233
    33aa:	5f 4f       	sbci	r21, 0xFF	; 255
    33ac:	fa 01       	movw	r30, r20
    33ae:	85 91       	lpm	r24, Z+
    33b0:	94 91       	lpm	r25, Z+
    33b2:	28 17       	cp	r18, r24
    33b4:	39 07       	cpc	r19, r25
    33b6:	79 f4       	brne	.+30     	; 0x33d6 <compareIsInUse+0x58>
    33b8:	fb 01       	movw	r30, r22
    33ba:	a5 91       	lpm	r26, Z+
    33bc:	b4 91       	lpm	r27, Z+
    33be:	1e 96       	adiw	r26, 0x0e	; 14
    33c0:	8c 91       	ld	r24, X
    33c2:	84 30       	cpi	r24, 0x04	; 4
    33c4:	31 f0       	breq	.+12     	; 0x33d2 <compareIsInUse+0x54>
    33c6:	89 30       	cpi	r24, 0x09	; 9
    33c8:	21 f0       	breq	.+8      	; 0x33d2 <compareIsInUse+0x54>
    33ca:	8b 30       	cpi	r24, 0x0B	; 11
    33cc:	11 f0       	breq	.+4      	; 0x33d2 <compareIsInUse+0x54>
    33ce:	8f 30       	cpi	r24, 0x0F	; 15
    33d0:	11 f4       	brne	.+4      	; 0x33d6 <compareIsInUse+0x58>
    33d2:	8f ef       	ldi	r24, 0xFF	; 255
    33d4:	08 95       	ret
    33d6:	80 e0       	ldi	r24, 0x00	; 0
    33d8:	08 95       	ret

000033da <compareFromIOPin>:
    33da:	bf 92       	push	r11
    33dc:	cf 92       	push	r12
    33de:	df 92       	push	r13
    33e0:	ef 92       	push	r14
    33e2:	ff 92       	push	r15
    33e4:	0f 93       	push	r16
    33e6:	1f 93       	push	r17
    33e8:	cf 93       	push	r28
    33ea:	df 93       	push	r29
    33ec:	6c 01       	movw	r12, r24
    33ee:	b0 90 0a 02 	lds	r11, 0x020A
    33f2:	2a e3       	ldi	r18, 0x3A	; 58
    33f4:	32 e0       	ldi	r19, 0x02	; 2
    33f6:	90 e0       	ldi	r25, 0x00	; 0
    33f8:	c0 e0       	ldi	r28, 0x00	; 0
    33fa:	d0 e0       	ldi	r29, 0x00	; 0
    33fc:	2d c0       	rjmp	.+90     	; 0x3458 <compareFromIOPin+0x7e>
    33fe:	28 5f       	subi	r18, 0xF8	; 248
    3400:	3f 4f       	sbci	r19, 0xFF	; 255
    3402:	f9 01       	movw	r30, r18
    3404:	e4 90       	lpm	r14, Z+
    3406:	28 50       	subi	r18, 0x08	; 8
    3408:	30 40       	sbci	r19, 0x00	; 0
    340a:	f9 01       	movw	r30, r18
    340c:	77 96       	adiw	r30, 0x17	; 23
    340e:	2a 5f       	subi	r18, 0xFA	; 250
    3410:	3f 4f       	sbci	r19, 0xFF	; 255
    3412:	80 e0       	ldi	r24, 0x00	; 0
    3414:	a0 e0       	ldi	r26, 0x00	; 0
    3416:	b0 e0       	ldi	r27, 0x00	; 0
    3418:	05 91       	lpm	r16, Z+
    341a:	14 91       	lpm	r17, Z+
    341c:	f9 01       	movw	r30, r18
    341e:	f4 90       	lpm	r15, Z+
    3420:	26 50       	subi	r18, 0x06	; 6
    3422:	30 40       	sbci	r19, 0x00	; 0
    3424:	14 c0       	rjmp	.+40     	; 0x344e <compareFromIOPin+0x74>
    3426:	b8 01       	movw	r22, r16
    3428:	6a 0f       	add	r22, r26
    342a:	7b 1f       	adc	r23, r27
    342c:	fb 01       	movw	r30, r22
    342e:	3e 96       	adiw	r30, 0x0e	; 14
    3430:	45 91       	lpm	r20, Z+
    3432:	54 91       	lpm	r21, Z+
    3434:	41 15       	cp	r20, r1
    3436:	51 05       	cpc	r21, r1
    3438:	41 f0       	breq	.+16     	; 0x344a <compareFromIOPin+0x70>
    343a:	4c 15       	cp	r20, r12
    343c:	5d 05       	cpc	r21, r13
    343e:	29 f4       	brne	.+10     	; 0x344a <compareFromIOPin+0x70>
    3440:	ff 20       	and	r15, r15
    3442:	11 f0       	breq	.+4      	; 0x3448 <compareFromIOPin+0x6e>
    3444:	eb 01       	movw	r28, r22
    3446:	0a c0       	rjmp	.+20     	; 0x345c <compareFromIOPin+0x82>
    3448:	eb 01       	movw	r28, r22
    344a:	8f 5f       	subi	r24, 0xFF	; 255
    344c:	50 96       	adiw	r26, 0x10	; 16
    344e:	8e 15       	cp	r24, r14
    3450:	50 f3       	brcs	.-44     	; 0x3426 <compareFromIOPin+0x4c>
    3452:	9f 5f       	subi	r25, 0xFF	; 255
    3454:	24 5d       	subi	r18, 0xD4	; 212
    3456:	3f 4f       	sbci	r19, 0xFF	; 255
    3458:	9b 15       	cp	r25, r11
    345a:	88 f2       	brcs	.-94     	; 0x33fe <compareFromIOPin+0x24>
    345c:	ce 01       	movw	r24, r28
    345e:	df 91       	pop	r29
    3460:	cf 91       	pop	r28
    3462:	1f 91       	pop	r17
    3464:	0f 91       	pop	r16
    3466:	ff 90       	pop	r15
    3468:	ef 90       	pop	r14
    346a:	df 90       	pop	r13
    346c:	cf 90       	pop	r12
    346e:	bf 90       	pop	r11
    3470:	08 95       	ret

00003472 <nullTimerCompareCallback>:
    3472:	08 95       	ret

00003474 <timerOverflowAttach>:
    3474:	df 92       	push	r13
    3476:	ef 92       	push	r14
    3478:	ff 92       	push	r15
    347a:	0f 93       	push	r16
    347c:	1f 93       	push	r17
    347e:	cf 93       	push	r28
    3480:	df 93       	push	r29
    3482:	ec 01       	movw	r28, r24
    3484:	8b 01       	movw	r16, r22
    3486:	7a 01       	movw	r14, r20
    3488:	df b6       	in	r13, 0x3f	; 63
    348a:	f8 94       	cli
    348c:	61 15       	cp	r22, r1
    348e:	71 05       	cpc	r23, r1
    3490:	61 f0       	breq	.+24     	; 0x34aa <timerOverflowAttach+0x36>
    3492:	fc 01       	movw	r30, r24
    3494:	a5 91       	lpm	r26, Z+
    3496:	b4 91       	lpm	r27, Z+
    3498:	16 96       	adiw	r26, 0x06	; 6
    349a:	8d 91       	ld	r24, X+
    349c:	9c 91       	ld	r25, X
    349e:	17 97       	sbiw	r26, 0x07	; 7
    34a0:	89 2b       	or	r24, r25
    34a2:	19 f0       	breq	.+6      	; 0x34aa <timerOverflowAttach+0x36>
    34a4:	8c ef       	ldi	r24, 0xFC	; 252
    34a6:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    34aa:	ce 01       	movw	r24, r28
    34ac:	fe 01       	movw	r30, r28
    34ae:	a5 91       	lpm	r26, Z+
    34b0:	b4 91       	lpm	r27, Z+
    34b2:	17 96       	adiw	r26, 0x07	; 7
    34b4:	1c 93       	st	X, r17
    34b6:	0e 93       	st	-X, r16
    34b8:	16 97       	sbiw	r26, 0x06	; 6
    34ba:	19 96       	adiw	r26, 0x09	; 9
    34bc:	fc 92       	st	X, r15
    34be:	ee 92       	st	-X, r14
    34c0:	18 97       	sbiw	r26, 0x08	; 8
    34c2:	49 96       	adiw	r24, 0x19	; 25
    34c4:	01 2b       	or	r16, r17
    34c6:	19 f0       	breq	.+6      	; 0x34ce <timerOverflowAttach+0x5a>
    34c8:	0e 94 f4 0a 	call	0x15e8	; 0x15e8 <__portMaskSet>
    34cc:	02 c0       	rjmp	.+4      	; 0x34d2 <timerOverflowAttach+0x5e>
    34ce:	0e 94 0d 0b 	call	0x161a	; 0x161a <__portMaskClear>
    34d2:	df be       	out	0x3f, r13	; 63
    34d4:	df 91       	pop	r29
    34d6:	cf 91       	pop	r28
    34d8:	1f 91       	pop	r17
    34da:	0f 91       	pop	r16
    34dc:	ff 90       	pop	r15
    34de:	ef 90       	pop	r14
    34e0:	df 90       	pop	r13
    34e2:	08 95       	ret

000034e4 <__uartHWSetBaudRate>:
    34e4:	bf 92       	push	r11
    34e6:	cf 92       	push	r12
    34e8:	df 92       	push	r13
    34ea:	ef 92       	push	r14
    34ec:	ff 92       	push	r15
    34ee:	0f 93       	push	r16
    34f0:	1f 93       	push	r17
    34f2:	cf 93       	push	r28
    34f4:	df 93       	push	r29
    34f6:	7a 01       	movw	r14, r20
    34f8:	8b 01       	movw	r16, r22
    34fa:	ec 01       	movw	r28, r24
    34fc:	bf b6       	in	r11, 0x3f	; 63
    34fe:	f8 94       	cli
    3500:	4f 3f       	cpi	r20, 0xFF	; 255
    3502:	8f ef       	ldi	r24, 0xFF	; 255
    3504:	58 07       	cpc	r21, r24
    3506:	8f ef       	ldi	r24, 0xFF	; 255
    3508:	68 07       	cpc	r22, r24
    350a:	8f ef       	ldi	r24, 0xFF	; 255
    350c:	78 07       	cpc	r23, r24
    350e:	21 f4       	brne	.+8      	; 0x3518 <__uartHWSetBaudRate+0x34>
    3510:	a1 e0       	ldi	r26, 0x01	; 1
    3512:	ca 2e       	mov	r12, r26
    3514:	d1 2c       	mov	r13, r1
    3516:	24 c0       	rjmp	.+72     	; 0x3560 <__uartHWSetBaudRate+0x7c>
    3518:	cb 01       	movw	r24, r22
    351a:	ba 01       	movw	r22, r20
    351c:	f3 e0       	ldi	r31, 0x03	; 3
    351e:	66 0f       	add	r22, r22
    3520:	77 1f       	adc	r23, r23
    3522:	88 1f       	adc	r24, r24
    3524:	99 1f       	adc	r25, r25
    3526:	fa 95       	dec	r31
    3528:	d1 f7       	brne	.-12     	; 0x351e <__uartHWSetBaudRate+0x3a>
    352a:	20 91 00 02 	lds	r18, 0x0200
    352e:	30 91 01 02 	lds	r19, 0x0201
    3532:	40 91 02 02 	lds	r20, 0x0202
    3536:	50 91 03 02 	lds	r21, 0x0203
    353a:	62 0f       	add	r22, r18
    353c:	73 1f       	adc	r23, r19
    353e:	84 1f       	adc	r24, r20
    3540:	95 1f       	adc	r25, r21
    3542:	a8 01       	movw	r20, r16
    3544:	97 01       	movw	r18, r14
    3546:	e4 e0       	ldi	r30, 0x04	; 4
    3548:	22 0f       	add	r18, r18
    354a:	33 1f       	adc	r19, r19
    354c:	44 1f       	adc	r20, r20
    354e:	55 1f       	adc	r21, r21
    3550:	ea 95       	dec	r30
    3552:	d1 f7       	brne	.-12     	; 0x3548 <__uartHWSetBaudRate+0x64>
    3554:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    3558:	69 01       	movw	r12, r18
    355a:	08 94       	sec
    355c:	c1 08       	sbc	r12, r1
    355e:	d1 08       	sbc	r13, r1
    3560:	9c a1       	ldd	r25, Y+36	; 0x24
    3562:	99 23       	and	r25, r25
    3564:	c9 f1       	breq	.+114    	; 0x35d8 <__uartHWSetBaudRate+0xf4>
    3566:	e8 8d       	ldd	r30, Y+24	; 0x18
    3568:	f9 8d       	ldd	r31, Y+25	; 0x19
    356a:	80 81       	ld	r24, Z
    356c:	90 95       	com	r25
    356e:	89 23       	and	r24, r25
    3570:	80 83       	st	Z, r24
    3572:	8f ef       	ldi	r24, 0xFF	; 255
    3574:	e8 16       	cp	r14, r24
    3576:	8f ef       	ldi	r24, 0xFF	; 255
    3578:	f8 06       	cpc	r15, r24
    357a:	8f ef       	ldi	r24, 0xFF	; 255
    357c:	08 07       	cpc	r16, r24
    357e:	8f ef       	ldi	r24, 0xFF	; 255
    3580:	18 07       	cpc	r17, r24
    3582:	19 f4       	brne	.+6      	; 0x358a <__uartHWSetBaudRate+0xa6>
    3584:	21 e0       	ldi	r18, 0x01	; 1
    3586:	30 e0       	ldi	r19, 0x00	; 0
    3588:	1d c0       	rjmp	.+58     	; 0x35c4 <__uartHWSetBaudRate+0xe0>
    358a:	32 e0       	ldi	r19, 0x02	; 2
    358c:	ee 0c       	add	r14, r14
    358e:	ff 1c       	adc	r15, r15
    3590:	00 1f       	adc	r16, r16
    3592:	11 1f       	adc	r17, r17
    3594:	3a 95       	dec	r19
    3596:	d1 f7       	brne	.-12     	; 0x358c <__uartHWSetBaudRate+0xa8>
    3598:	60 91 00 02 	lds	r22, 0x0200
    359c:	70 91 01 02 	lds	r23, 0x0201
    35a0:	80 91 02 02 	lds	r24, 0x0202
    35a4:	90 91 03 02 	lds	r25, 0x0203
    35a8:	6e 0d       	add	r22, r14
    35aa:	7f 1d       	adc	r23, r15
    35ac:	80 1f       	adc	r24, r16
    35ae:	91 1f       	adc	r25, r17
    35b0:	ee 0c       	add	r14, r14
    35b2:	ff 1c       	adc	r15, r15
    35b4:	00 1f       	adc	r16, r16
    35b6:	11 1f       	adc	r17, r17
    35b8:	a8 01       	movw	r20, r16
    35ba:	97 01       	movw	r18, r14
    35bc:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    35c0:	21 50       	subi	r18, 0x01	; 1
    35c2:	30 40       	sbci	r19, 0x00	; 0
    35c4:	2c 15       	cp	r18, r12
    35c6:	3d 05       	cpc	r19, r13
    35c8:	38 f0       	brcs	.+14     	; 0x35d8 <__uartHWSetBaudRate+0xf4>
    35ca:	e8 8d       	ldd	r30, Y+24	; 0x18
    35cc:	f9 8d       	ldd	r31, Y+25	; 0x19
    35ce:	80 81       	ld	r24, Z
    35d0:	9c a1       	ldd	r25, Y+36	; 0x24
    35d2:	89 2b       	or	r24, r25
    35d4:	80 83       	st	Z, r24
    35d6:	69 01       	movw	r12, r18
    35d8:	ec 8d       	ldd	r30, Y+28	; 0x1c
    35da:	fd 8d       	ldd	r31, Y+29	; 0x1d
    35dc:	c0 82       	st	Z, r12
    35de:	ee 8d       	ldd	r30, Y+30	; 0x1e
    35e0:	ff 8d       	ldd	r31, Y+31	; 0x1f
    35e2:	d0 82       	st	Z, r13
    35e4:	bf be       	out	0x3f, r11	; 63
    35e6:	df 91       	pop	r29
    35e8:	cf 91       	pop	r28
    35ea:	1f 91       	pop	r17
    35ec:	0f 91       	pop	r16
    35ee:	ff 90       	pop	r15
    35f0:	ef 90       	pop	r14
    35f2:	df 90       	pop	r13
    35f4:	cf 90       	pop	r12
    35f6:	bf 90       	pop	r11
    35f8:	08 95       	ret

000035fa <__uartHWOff>:
    35fa:	dc 01       	movw	r26, r24
    35fc:	5a 96       	adiw	r26, 0x1a	; 26
    35fe:	ed 91       	ld	r30, X+
    3600:	fc 91       	ld	r31, X
    3602:	5b 97       	sbiw	r26, 0x1b	; 27
    3604:	80 81       	ld	r24, Z
    3606:	87 72       	andi	r24, 0x27	; 39
    3608:	80 83       	st	Z, r24
    360a:	94 96       	adiw	r26, 0x24	; 36
    360c:	9c 91       	ld	r25, X
    360e:	94 97       	sbiw	r26, 0x24	; 36
    3610:	99 23       	and	r25, r25
    3612:	41 f0       	breq	.+16     	; 0x3624 <__uartHWOff+0x2a>
    3614:	58 96       	adiw	r26, 0x18	; 24
    3616:	ed 91       	ld	r30, X+
    3618:	fc 91       	ld	r31, X
    361a:	59 97       	sbiw	r26, 0x19	; 25
    361c:	80 81       	ld	r24, Z
    361e:	90 95       	com	r25
    3620:	89 23       	and	r24, r25
    3622:	80 83       	st	Z, r24
    3624:	08 95       	ret

00003626 <oneWireReceiveMode>:
    3626:	dc 01       	movw	r26, r24
    3628:	53 96       	adiw	r26, 0x13	; 19
    362a:	8c 91       	ld	r24, X
    362c:	53 97       	sbiw	r26, 0x13	; 19
    362e:	88 23       	and	r24, r24
    3630:	71 f0       	breq	.+28     	; 0x364e <oneWireReceiveMode+0x28>
    3632:	5a 96       	adiw	r26, 0x1a	; 26
    3634:	ed 91       	ld	r30, X+
    3636:	fc 91       	ld	r31, X
    3638:	5b 97       	sbiw	r26, 0x1b	; 27
    363a:	80 81       	ld	r24, Z
    363c:	87 7b       	andi	r24, 0xB7	; 183
    363e:	80 83       	st	Z, r24
    3640:	5a 96       	adiw	r26, 0x1a	; 26
    3642:	ed 91       	ld	r30, X+
    3644:	fc 91       	ld	r31, X
    3646:	5b 97       	sbiw	r26, 0x1b	; 27
    3648:	80 81       	ld	r24, Z
    364a:	80 69       	ori	r24, 0x90	; 144
    364c:	80 83       	st	Z, r24
    364e:	08 95       	ret

00003650 <__uartHWStartXmit>:
    3650:	dc 01       	movw	r26, r24
    3652:	90 96       	adiw	r26, 0x20	; 32
    3654:	ed 91       	ld	r30, X+
    3656:	fc 91       	ld	r31, X
    3658:	91 97       	sbiw	r26, 0x21	; 33
    365a:	60 83       	st	Z, r22
    365c:	08 95       	ret

0000365e <startXmitMode>:
    365e:	dc 01       	movw	r26, r24
    3660:	53 96       	adiw	r26, 0x13	; 19
    3662:	8c 91       	ld	r24, X
    3664:	53 97       	sbiw	r26, 0x13	; 19
    3666:	88 23       	and	r24, r24
    3668:	71 f0       	breq	.+28     	; 0x3686 <startXmitMode+0x28>
    366a:	5a 96       	adiw	r26, 0x1a	; 26
    366c:	ed 91       	ld	r30, X+
    366e:	fc 91       	ld	r31, X
    3670:	5b 97       	sbiw	r26, 0x1b	; 27
    3672:	80 81       	ld	r24, Z
    3674:	8f 76       	andi	r24, 0x6F	; 111
    3676:	80 83       	st	Z, r24
    3678:	5a 96       	adiw	r26, 0x1a	; 26
    367a:	ed 91       	ld	r30, X+
    367c:	fc 91       	ld	r31, X
    367e:	5b 97       	sbiw	r26, 0x1b	; 27
    3680:	80 81       	ld	r24, Z
    3682:	88 64       	ori	r24, 0x48	; 72
    3684:	80 83       	st	Z, r24
    3686:	08 95       	ret

00003688 <uartReceivePollingMode>:
    3688:	dc 01       	movw	r26, r24
    368a:	5a 96       	adiw	r26, 0x1a	; 26
    368c:	ed 91       	ld	r30, X+
    368e:	fc 91       	ld	r31, X
    3690:	5b 97       	sbiw	r26, 0x1b	; 27
    3692:	66 23       	and	r22, r22
    3694:	19 f0       	breq	.+6      	; 0x369c <uartReceivePollingMode+0x14>
    3696:	80 81       	ld	r24, Z
    3698:	8f 77       	andi	r24, 0x7F	; 127
    369a:	02 c0       	rjmp	.+4      	; 0x36a0 <uartReceivePollingMode+0x18>
    369c:	80 81       	ld	r24, Z
    369e:	80 68       	ori	r24, 0x80	; 128
    36a0:	80 83       	st	Z, r24
    36a2:	08 95       	ret

000036a4 <uartPollByte>:
    36a4:	dc 01       	movw	r26, r24
    36a6:	58 96       	adiw	r26, 0x18	; 24
    36a8:	ed 91       	ld	r30, X+
    36aa:	fc 91       	ld	r31, X
    36ac:	59 97       	sbiw	r26, 0x19	; 25
    36ae:	80 81       	ld	r24, Z
    36b0:	87 fd       	sbrc	r24, 7
    36b2:	03 c0       	rjmp	.+6      	; 0x36ba <uartPollByte+0x16>
    36b4:	2f ef       	ldi	r18, 0xFF	; 255
    36b6:	3f ef       	ldi	r19, 0xFF	; 255
    36b8:	07 c0       	rjmp	.+14     	; 0x36c8 <uartPollByte+0x24>
    36ba:	90 96       	adiw	r26, 0x20	; 32
    36bc:	ed 91       	ld	r30, X+
    36be:	fc 91       	ld	r31, X
    36c0:	91 97       	sbiw	r26, 0x21	; 33
    36c2:	80 81       	ld	r24, Z
    36c4:	28 2f       	mov	r18, r24
    36c6:	30 e0       	ldi	r19, 0x00	; 0
    36c8:	c9 01       	movw	r24, r18
    36ca:	08 95       	ret

000036cc <__uartHWInit>:
    36cc:	0f 93       	push	r16
    36ce:	1f 93       	push	r17
    36d0:	8c 01       	movw	r16, r24
    36d2:	0e 94 14 09 	call	0x1228	; 0x1228 <_uartSetBaudRate>
    36d6:	d8 01       	movw	r26, r16
    36d8:	53 96       	adiw	r26, 0x13	; 19
    36da:	8c 91       	ld	r24, X
    36dc:	53 97       	sbiw	r26, 0x13	; 19
    36de:	5a 96       	adiw	r26, 0x1a	; 26
    36e0:	ed 91       	ld	r30, X+
    36e2:	fc 91       	ld	r31, X
    36e4:	5b 97       	sbiw	r26, 0x1b	; 27
    36e6:	88 23       	and	r24, r24
    36e8:	11 f0       	breq	.+4      	; 0x36ee <__uartHWInit+0x22>
    36ea:	80 e9       	ldi	r24, 0x90	; 144
    36ec:	01 c0       	rjmp	.+2      	; 0x36f0 <__uartHWInit+0x24>
    36ee:	88 ed       	ldi	r24, 0xD8	; 216
    36f0:	80 83       	st	Z, r24
    36f2:	1f 91       	pop	r17
    36f4:	0f 91       	pop	r16
    36f6:	08 95       	ret

000036f8 <interpolateU>:
    36f8:	4f 92       	push	r4
    36fa:	5f 92       	push	r5
    36fc:	6f 92       	push	r6
    36fe:	7f 92       	push	r7
    3700:	8f 92       	push	r8
    3702:	9f 92       	push	r9
    3704:	af 92       	push	r10
    3706:	bf 92       	push	r11
    3708:	cf 92       	push	r12
    370a:	df 92       	push	r13
    370c:	ef 92       	push	r14
    370e:	ff 92       	push	r15
    3710:	0f 93       	push	r16
    3712:	1f 93       	push	r17
    3714:	2b 01       	movw	r4, r22
    3716:	5a 01       	movw	r10, r20
    3718:	39 01       	movw	r6, r18
    371a:	78 01       	movw	r14, r16
    371c:	e2 1a       	sub	r14, r18
    371e:	f3 0a       	sbc	r15, r19
    3720:	00 e0       	ldi	r16, 0x00	; 0
    3722:	10 e0       	ldi	r17, 0x00	; 0
    3724:	9c 01       	movw	r18, r24
    3726:	26 1b       	sub	r18, r22
    3728:	37 0b       	sbc	r19, r23
    372a:	44 27       	eor	r20, r20
    372c:	37 fd       	sbrc	r19, 7
    372e:	40 95       	com	r20
    3730:	54 2f       	mov	r21, r20
    3732:	c8 01       	movw	r24, r16
    3734:	b7 01       	movw	r22, r14
    3736:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    373a:	a4 18       	sub	r10, r4
    373c:	b5 08       	sbc	r11, r5
    373e:	cc 24       	eor	r12, r12
    3740:	b7 fc       	sbrc	r11, 7
    3742:	c0 94       	com	r12
    3744:	dc 2c       	mov	r13, r12
    3746:	a6 01       	movw	r20, r12
    3748:	95 01       	movw	r18, r10
    374a:	0e 94 c5 1d 	call	0x3b8a	; 0x3b8a <__divmodsi4>
    374e:	88 24       	eor	r8, r8
    3750:	99 24       	eor	r9, r9
    3752:	26 0d       	add	r18, r6
    3754:	37 1d       	adc	r19, r7
    3756:	48 1d       	adc	r20, r8
    3758:	59 1d       	adc	r21, r9
    375a:	c9 01       	movw	r24, r18
    375c:	1f 91       	pop	r17
    375e:	0f 91       	pop	r16
    3760:	ff 90       	pop	r15
    3762:	ef 90       	pop	r14
    3764:	df 90       	pop	r13
    3766:	cf 90       	pop	r12
    3768:	bf 90       	pop	r11
    376a:	af 90       	pop	r10
    376c:	9f 90       	pop	r9
    376e:	8f 90       	pop	r8
    3770:	7f 90       	pop	r7
    3772:	6f 90       	pop	r6
    3774:	5f 90       	pop	r5
    3776:	4f 90       	pop	r4
    3778:	08 95       	ret

0000377a <__scheduleUpdate>:
    377a:	2f 92       	push	r2
    377c:	3f 92       	push	r3
    377e:	4f 92       	push	r4
    3780:	5f 92       	push	r5
    3782:	6f 92       	push	r6
    3784:	7f 92       	push	r7
    3786:	8f 92       	push	r8
    3788:	9f 92       	push	r9
    378a:	af 92       	push	r10
    378c:	bf 92       	push	r11
    378e:	cf 92       	push	r12
    3790:	df 92       	push	r13
    3792:	ef 92       	push	r14
    3794:	ff 92       	push	r15
    3796:	0f 93       	push	r16
    3798:	1f 93       	push	r17
    379a:	df 93       	push	r29
    379c:	cf 93       	push	r28
    379e:	cd b7       	in	r28, 0x3d	; 61
    37a0:	de b7       	in	r29, 0x3e	; 62
    37a2:	29 97       	sbiw	r28, 0x09	; 9
    37a4:	0f b6       	in	r0, 0x3f	; 63
    37a6:	f8 94       	cli
    37a8:	de bf       	out	0x3e, r29	; 62
    37aa:	0f be       	out	0x3f, r0	; 63
    37ac:	cd bf       	out	0x3d, r28	; 61
    37ae:	99 87       	std	Y+9, r25	; 0x09
    37b0:	88 87       	std	Y+8, r24	; 0x08
    37b2:	0e 94 9f 13 	call	0x273e	; 0x273e <compareDetach>
    37b6:	2f b7       	in	r18, 0x3f	; 63
    37b8:	2f 83       	std	Y+7, r18	; 0x07
    37ba:	78 94       	sei
    37bc:	8f ef       	ldi	r24, 0xFF	; 255
    37be:	80 93 bb 03 	sts	0x03BB, r24
    37c2:	10 92 ba 03 	sts	0x03BA, r1
    37c6:	80 91 08 02 	lds	r24, 0x0208
    37ca:	a8 2f       	mov	r26, r24
    37cc:	b0 e0       	ldi	r27, 0x00	; 0
    37ce:	11 97       	sbiw	r26, 0x01	; 1
    37d0:	be 83       	std	Y+6, r27	; 0x06
    37d2:	ad 83       	std	Y+5, r26	; 0x05
    37d4:	ed e0       	ldi	r30, 0x0D	; 13
    37d6:	f0 e0       	ldi	r31, 0x00	; 0
    37d8:	ae 9f       	mul	r26, r30
    37da:	50 01       	movw	r10, r0
    37dc:	af 9f       	mul	r26, r31
    37de:	b0 0c       	add	r11, r0
    37e0:	be 9f       	mul	r27, r30
    37e2:	b0 0c       	add	r11, r0
    37e4:	11 24       	eor	r1, r1
    37e6:	2d e7       	ldi	r18, 0x7D	; 125
    37e8:	33 e0       	ldi	r19, 0x03	; 3
    37ea:	a2 0e       	add	r10, r18
    37ec:	b3 1e       	adc	r11, r19
    37ee:	22 24       	eor	r2, r2
    37f0:	33 24       	eor	r3, r3
    37f2:	21 01       	movw	r4, r2
    37f4:	5a c0       	rjmp	.+180    	; 0x38aa <__scheduleUpdate+0x130>
    37f6:	d5 01       	movw	r26, r10
    37f8:	8c 91       	ld	r24, X
    37fa:	88 23       	and	r24, r24
    37fc:	09 f4       	brne	.+2      	; 0x3800 <__scheduleUpdate+0x86>
    37fe:	4c c0       	rjmp	.+152    	; 0x3898 <__scheduleUpdate+0x11e>
    3800:	19 96       	adiw	r26, 0x09	; 9
    3802:	6d 90       	ld	r6, X+
    3804:	7d 90       	ld	r7, X+
    3806:	8d 90       	ld	r8, X+
    3808:	9c 90       	ld	r9, X
    380a:	1c 97       	sbiw	r26, 0x0c	; 12
    380c:	15 96       	adiw	r26, 0x05	; 5
    380e:	cd 90       	ld	r12, X+
    3810:	dd 90       	ld	r13, X+
    3812:	ed 90       	ld	r14, X+
    3814:	fc 90       	ld	r15, X
    3816:	18 97       	sbiw	r26, 0x08	; 8
    3818:	c4 01       	movw	r24, r8
    381a:	b3 01       	movw	r22, r6
    381c:	a7 01       	movw	r20, r14
    381e:	96 01       	movw	r18, r12
    3820:	8e 01       	movw	r16, r28
    3822:	0f 5f       	subi	r16, 0xFF	; 255
    3824:	1f 4f       	sbci	r17, 0xFF	; 255
    3826:	0e 94 56 18 	call	0x30ac	; 0x30ac <clockHasElapsedGetOverflow>
    382a:	88 23       	and	r24, r24
    382c:	19 f1       	breq	.+70     	; 0x3874 <__scheduleUpdate+0xfa>
    382e:	d5 01       	movw	r26, r10
    3830:	11 96       	adiw	r26, 0x01	; 1
    3832:	ed 91       	ld	r30, X+
    3834:	fc 91       	ld	r31, X
    3836:	12 97       	sbiw	r26, 0x02	; 2
    3838:	13 96       	adiw	r26, 0x03	; 3
    383a:	8d 91       	ld	r24, X+
    383c:	9c 91       	ld	r25, X
    383e:	14 97       	sbiw	r26, 0x04	; 4
    3840:	1c 92       	st	X, r1
    3842:	20 91 b8 03 	lds	r18, 0x03B8
    3846:	30 91 b9 03 	lds	r19, 0x03B9
    384a:	21 50       	subi	r18, 0x01	; 1
    384c:	30 40       	sbci	r19, 0x00	; 0
    384e:	30 93 b9 03 	sts	0x03B9, r19
    3852:	20 93 b8 03 	sts	0x03B8, r18
    3856:	c6 0c       	add	r12, r6
    3858:	d7 1c       	adc	r13, r7
    385a:	e8 1c       	adc	r14, r8
    385c:	f9 1c       	adc	r15, r9
    385e:	09 81       	ldd	r16, Y+1	; 0x01
    3860:	1a 81       	ldd	r17, Y+2	; 0x02
    3862:	2b 81       	ldd	r18, Y+3	; 0x03
    3864:	3c 81       	ldd	r19, Y+4	; 0x04
    3866:	b7 01       	movw	r22, r14
    3868:	a6 01       	movw	r20, r12
    386a:	09 95       	icall
    386c:	bf ef       	ldi	r27, 0xFF	; 255
    386e:	b0 93 ba 03 	sts	0x03BA, r27
    3872:	12 c0       	rjmp	.+36     	; 0x3898 <__scheduleUpdate+0x11e>
    3874:	21 14       	cp	r2, r1
    3876:	31 04       	cpc	r3, r1
    3878:	41 04       	cpc	r4, r1
    387a:	51 04       	cpc	r5, r1
    387c:	49 f0       	breq	.+18     	; 0x3890 <__scheduleUpdate+0x116>
    387e:	89 81       	ldd	r24, Y+1	; 0x01
    3880:	9a 81       	ldd	r25, Y+2	; 0x02
    3882:	ab 81       	ldd	r26, Y+3	; 0x03
    3884:	bc 81       	ldd	r27, Y+4	; 0x04
    3886:	82 15       	cp	r24, r2
    3888:	93 05       	cpc	r25, r3
    388a:	a4 05       	cpc	r26, r4
    388c:	b5 05       	cpc	r27, r5
    388e:	20 f4       	brcc	.+8      	; 0x3898 <__scheduleUpdate+0x11e>
    3890:	29 80       	ldd	r2, Y+1	; 0x01
    3892:	3a 80       	ldd	r3, Y+2	; 0x02
    3894:	4b 80       	ldd	r4, Y+3	; 0x03
    3896:	5c 80       	ldd	r5, Y+4	; 0x04
    3898:	ed 81       	ldd	r30, Y+5	; 0x05
    389a:	fe 81       	ldd	r31, Y+6	; 0x06
    389c:	31 97       	sbiw	r30, 0x01	; 1
    389e:	fe 83       	std	Y+6, r31	; 0x06
    38a0:	ed 83       	std	Y+5, r30	; 0x05
    38a2:	23 ef       	ldi	r18, 0xF3	; 243
    38a4:	3f ef       	ldi	r19, 0xFF	; 255
    38a6:	a2 0e       	add	r10, r18
    38a8:	b3 1e       	adc	r11, r19
    38aa:	8d 81       	ldd	r24, Y+5	; 0x05
    38ac:	9e 81       	ldd	r25, Y+6	; 0x06
    38ae:	8f 5f       	subi	r24, 0xFF	; 255
    38b0:	9f 4f       	sbci	r25, 0xFF	; 255
    38b2:	09 f0       	breq	.+2      	; 0x38b6 <__scheduleUpdate+0x13c>
    38b4:	a0 cf       	rjmp	.-192    	; 0x37f6 <__scheduleUpdate+0x7c>
    38b6:	80 91 ba 03 	lds	r24, 0x03BA
    38ba:	88 23       	and	r24, r24
    38bc:	09 f0       	breq	.+2      	; 0x38c0 <__scheduleUpdate+0x146>
    38be:	81 cf       	rjmp	.-254    	; 0x37c2 <__scheduleUpdate+0x48>
    38c0:	10 92 bb 03 	sts	0x03BB, r1
    38c4:	80 91 b8 03 	lds	r24, 0x03B8
    38c8:	90 91 b9 03 	lds	r25, 0x03B9
    38cc:	18 16       	cp	r1, r24
    38ce:	19 06       	cpc	r1, r25
    38d0:	0c f0       	brlt	.+2      	; 0x38d4 <__scheduleUpdate+0x15a>
    38d2:	44 c0       	rjmp	.+136    	; 0x395c <__scheduleUpdate+0x1e2>
    38d4:	f0 90 b6 03 	lds	r15, 0x03B6
    38d8:	e0 90 b7 03 	lds	r14, 0x03B7
    38dc:	ef 2d       	mov	r30, r15
    38de:	fe 2d       	mov	r31, r14
    38e0:	05 91       	lpm	r16, Z+
    38e2:	14 91       	lpm	r17, Z+
    38e4:	20 91 06 02 	lds	r18, 0x0206
    38e8:	30 91 07 02 	lds	r19, 0x0207
    38ec:	40 e0       	ldi	r20, 0x00	; 0
    38ee:	50 e0       	ldi	r21, 0x00	; 0
    38f0:	c2 01       	movw	r24, r4
    38f2:	b1 01       	movw	r22, r2
    38f4:	0e 94 70 1d 	call	0x3ae0	; 0x3ae0 <__mulsi3>
    38f8:	f8 01       	movw	r30, r16
    38fa:	20 81       	ld	r18, Z
    38fc:	31 81       	ldd	r19, Z+1	; 0x01
    38fe:	40 e0       	ldi	r20, 0x00	; 0
    3900:	50 e0       	ldi	r21, 0x00	; 0
    3902:	0e 94 a3 1d 	call	0x3b46	; 0x3b46 <__udivmodsi4>
    3906:	59 01       	movw	r10, r18
    3908:	6a 01       	movw	r12, r20
    390a:	8f 2d       	mov	r24, r15
    390c:	9e 2d       	mov	r25, r14
    390e:	0e 94 38 14 	call	0x2870	; 0x2870 <timerGetTOP>
    3912:	7c 01       	movw	r14, r24
    3914:	00 e0       	ldi	r16, 0x00	; 0
    3916:	10 e0       	ldi	r17, 0x00	; 0
    3918:	ae 14       	cp	r10, r14
    391a:	bf 04       	cpc	r11, r15
    391c:	c0 06       	cpc	r12, r16
    391e:	d1 06       	cpc	r13, r17
    3920:	10 f4       	brcc	.+4      	; 0x3926 <__scheduleUpdate+0x1ac>
    3922:	86 01       	movw	r16, r12
    3924:	75 01       	movw	r14, r10
    3926:	80 91 b6 03 	lds	r24, 0x03B6
    392a:	90 91 b7 03 	lds	r25, 0x03B7
    392e:	0e 94 38 14 	call	0x2870	; 0x2870 <timerGetTOP>
    3932:	8c 01       	movw	r16, r24
    3934:	80 91 b6 03 	lds	r24, 0x03B6
    3938:	90 91 b7 03 	lds	r25, 0x03B7
    393c:	0e 94 04 11 	call	0x2208	; 0x2208 <timerGetCounter>
    3940:	8e 0d       	add	r24, r14
    3942:	9f 1d       	adc	r25, r15
    3944:	b8 01       	movw	r22, r16
    3946:	0e 94 8f 1d 	call	0x3b1e	; 0x3b1e <__udivmodhi4>
    394a:	ac 01       	movw	r20, r24
    394c:	88 85       	ldd	r24, Y+8	; 0x08
    394e:	99 85       	ldd	r25, Y+9	; 0x09
    3950:	6d eb       	ldi	r22, 0xBD	; 189
    3952:	7b e1       	ldi	r23, 0x1B	; 27
    3954:	20 e0       	ldi	r18, 0x00	; 0
    3956:	30 e0       	ldi	r19, 0x00	; 0
    3958:	0e 94 84 16 	call	0x2d08	; 0x2d08 <compareAttach>
    395c:	ff 81       	ldd	r31, Y+7	; 0x07
    395e:	ff bf       	out	0x3f, r31	; 63
    3960:	29 96       	adiw	r28, 0x09	; 9
    3962:	0f b6       	in	r0, 0x3f	; 63
    3964:	f8 94       	cli
    3966:	de bf       	out	0x3e, r29	; 62
    3968:	0f be       	out	0x3f, r0	; 63
    396a:	cd bf       	out	0x3d, r28	; 61
    396c:	cf 91       	pop	r28
    396e:	df 91       	pop	r29
    3970:	1f 91       	pop	r17
    3972:	0f 91       	pop	r16
    3974:	ff 90       	pop	r15
    3976:	ef 90       	pop	r14
    3978:	df 90       	pop	r13
    397a:	cf 90       	pop	r12
    397c:	bf 90       	pop	r11
    397e:	af 90       	pop	r10
    3980:	9f 90       	pop	r9
    3982:	8f 90       	pop	r8
    3984:	7f 90       	pop	r7
    3986:	6f 90       	pop	r6
    3988:	5f 90       	pop	r5
    398a:	4f 90       	pop	r4
    398c:	3f 90       	pop	r3
    398e:	2f 90       	pop	r2
    3990:	08 95       	ret

00003992 <scheduleJob>:
    3992:	2f 92       	push	r2
    3994:	3f 92       	push	r3
    3996:	4f 92       	push	r4
    3998:	5f 92       	push	r5
    399a:	6f 92       	push	r6
    399c:	7f 92       	push	r7
    399e:	8f 92       	push	r8
    39a0:	9f 92       	push	r9
    39a2:	af 92       	push	r10
    39a4:	bf 92       	push	r11
    39a6:	cf 92       	push	r12
    39a8:	df 92       	push	r13
    39aa:	ef 92       	push	r14
    39ac:	ff 92       	push	r15
    39ae:	0f 93       	push	r16
    39b0:	1f 93       	push	r17
    39b2:	df 93       	push	r29
    39b4:	cf 93       	push	r28
    39b6:	00 d0       	rcall	.+0      	; 0x39b8 <scheduleJob+0x26>
    39b8:	00 d0       	rcall	.+0      	; 0x39ba <scheduleJob+0x28>
    39ba:	cd b7       	in	r28, 0x3d	; 61
    39bc:	de b7       	in	r29, 0x3e	; 62
    39be:	1c 01       	movw	r2, r24
    39c0:	2b 01       	movw	r4, r22
    39c2:	49 01       	movw	r8, r18
    39c4:	5a 01       	movw	r10, r20
    39c6:	67 01       	movw	r12, r14
    39c8:	78 01       	movw	r14, r16
    39ca:	88 ee       	ldi	r24, 0xE8	; 232
    39cc:	c8 16       	cp	r12, r24
    39ce:	83 e0       	ldi	r24, 0x03	; 3
    39d0:	d8 06       	cpc	r13, r24
    39d2:	80 e0       	ldi	r24, 0x00	; 0
    39d4:	e8 06       	cpc	r14, r24
    39d6:	80 e0       	ldi	r24, 0x00	; 0
    39d8:	f8 06       	cpc	r15, r24
    39da:	38 f4       	brcc	.+14     	; 0x39ea <scheduleJob+0x58>
    39dc:	80 91 bb 03 	lds	r24, 0x03BB
    39e0:	88 23       	and	r24, r24
    39e2:	c1 f1       	breq	.+112    	; 0x3a54 <scheduleJob+0xc2>
    39e4:	8f ef       	ldi	r24, 0xFF	; 255
    39e6:	80 93 ba 03 	sts	0x03BA, r24
    39ea:	6f b7       	in	r22, 0x3f	; 63
    39ec:	f8 94       	cli
    39ee:	80 91 08 02 	lds	r24, 0x0208
    39f2:	48 2f       	mov	r20, r24
    39f4:	50 e0       	ldi	r21, 0x00	; 0
    39f6:	ad e7       	ldi	r26, 0x7D	; 125
    39f8:	b3 e0       	ldi	r27, 0x03	; 3
    39fa:	20 e0       	ldi	r18, 0x00	; 0
    39fc:	30 e0       	ldi	r19, 0x00	; 0
    39fe:	20 c0       	rjmp	.+64     	; 0x3a40 <scheduleJob+0xae>
    3a00:	fd 01       	movw	r30, r26
    3a02:	8c 91       	ld	r24, X
    3a04:	1d 96       	adiw	r26, 0x0d	; 13
    3a06:	88 23       	and	r24, r24
    3a08:	c9 f4       	brne	.+50     	; 0x3a3c <scheduleJob+0xaa>
    3a0a:	8f ef       	ldi	r24, 0xFF	; 255
    3a0c:	80 83       	st	Z, r24
    3a0e:	32 82       	std	Z+2, r3	; 0x02
    3a10:	21 82       	std	Z+1, r2	; 0x01
    3a12:	54 82       	std	Z+4, r5	; 0x04
    3a14:	43 82       	std	Z+3, r4	; 0x03
    3a16:	81 86       	std	Z+9, r8	; 0x09
    3a18:	92 86       	std	Z+10, r9	; 0x0a
    3a1a:	a3 86       	std	Z+11, r10	; 0x0b
    3a1c:	b4 86       	std	Z+12, r11	; 0x0c
    3a1e:	c5 82       	std	Z+5, r12	; 0x05
    3a20:	d6 82       	std	Z+6, r13	; 0x06
    3a22:	e7 82       	std	Z+7, r14	; 0x07
    3a24:	f0 86       	std	Z+8, r15	; 0x08
    3a26:	80 91 b8 03 	lds	r24, 0x03B8
    3a2a:	90 91 b9 03 	lds	r25, 0x03B9
    3a2e:	01 96       	adiw	r24, 0x01	; 1
    3a30:	90 93 b9 03 	sts	0x03B9, r25
    3a34:	80 93 b8 03 	sts	0x03B8, r24
    3a38:	8f ef       	ldi	r24, 0xFF	; 255
    3a3a:	06 c0       	rjmp	.+12     	; 0x3a48 <scheduleJob+0xb6>
    3a3c:	2f 5f       	subi	r18, 0xFF	; 255
    3a3e:	3f 4f       	sbci	r19, 0xFF	; 255
    3a40:	24 17       	cp	r18, r20
    3a42:	35 07       	cpc	r19, r21
    3a44:	ec f2       	brlt	.-70     	; 0x3a00 <scheduleJob+0x6e>
    3a46:	80 e0       	ldi	r24, 0x00	; 0
    3a48:	6f bf       	out	0x3f, r22	; 63
    3a4a:	88 23       	and	r24, r24
    3a4c:	59 f5       	brne	.+86     	; 0x3aa4 <scheduleJob+0x112>
    3a4e:	8f ef       	ldi	r24, 0xFF	; 255
    3a50:	0e 94 33 13 	call	0x2666	; 0x2666 <setError>
    3a54:	3e 01       	movw	r6, r28
    3a56:	08 94       	sec
    3a58:	61 1c       	adc	r6, r1
    3a5a:	71 1c       	adc	r7, r1
    3a5c:	c5 01       	movw	r24, r10
    3a5e:	b4 01       	movw	r22, r8
    3a60:	a7 01       	movw	r20, r14
    3a62:	96 01       	movw	r18, r12
    3a64:	83 01       	movw	r16, r6
    3a66:	0e 94 56 18 	call	0x30ac	; 0x30ac <clockHasElapsedGetOverflow>
    3a6a:	88 23       	and	r24, r24
    3a6c:	b9 f3       	breq	.-18     	; 0x3a5c <scheduleJob+0xca>
    3a6e:	c8 0c       	add	r12, r8
    3a70:	d9 1c       	adc	r13, r9
    3a72:	ea 1c       	adc	r14, r10
    3a74:	fb 1c       	adc	r15, r11
    3a76:	09 81       	ldd	r16, Y+1	; 0x01
    3a78:	1a 81       	ldd	r17, Y+2	; 0x02
    3a7a:	2b 81       	ldd	r18, Y+3	; 0x03
    3a7c:	3c 81       	ldd	r19, Y+4	; 0x04
    3a7e:	c2 01       	movw	r24, r4
    3a80:	b7 01       	movw	r22, r14
    3a82:	a6 01       	movw	r20, r12
    3a84:	f1 01       	movw	r30, r2
    3a86:	09 95       	icall
    3a88:	11 c0       	rjmp	.+34     	; 0x3aac <scheduleJob+0x11a>
    3a8a:	e0 91 b6 03 	lds	r30, 0x03B6
    3a8e:	f0 91 b7 03 	lds	r31, 0x03B7
    3a92:	77 96       	adiw	r30, 0x17	; 23
    3a94:	85 91       	lpm	r24, Z+
    3a96:	94 91       	lpm	r25, Z+
    3a98:	40 96       	adiw	r24, 0x10	; 16
    3a9a:	60 e0       	ldi	r22, 0x00	; 0
    3a9c:	70 e0       	ldi	r23, 0x00	; 0
    3a9e:	0e 94 bd 1b 	call	0x377a	; 0x377a <__scheduleUpdate>
    3aa2:	04 c0       	rjmp	.+8      	; 0x3aac <scheduleJob+0x11a>
    3aa4:	80 91 bb 03 	lds	r24, 0x03BB
    3aa8:	88 23       	and	r24, r24
    3aaa:	79 f3       	breq	.-34     	; 0x3a8a <scheduleJob+0xf8>
    3aac:	0f 90       	pop	r0
    3aae:	0f 90       	pop	r0
    3ab0:	0f 90       	pop	r0
    3ab2:	0f 90       	pop	r0
    3ab4:	cf 91       	pop	r28
    3ab6:	df 91       	pop	r29
    3ab8:	1f 91       	pop	r17
    3aba:	0f 91       	pop	r16
    3abc:	ff 90       	pop	r15
    3abe:	ef 90       	pop	r14
    3ac0:	df 90       	pop	r13
    3ac2:	cf 90       	pop	r12
    3ac4:	bf 90       	pop	r11
    3ac6:	af 90       	pop	r10
    3ac8:	9f 90       	pop	r9
    3aca:	8f 90       	pop	r8
    3acc:	7f 90       	pop	r7
    3ace:	6f 90       	pop	r6
    3ad0:	5f 90       	pop	r5
    3ad2:	4f 90       	pop	r4
    3ad4:	3f 90       	pop	r3
    3ad6:	2f 90       	pop	r2
    3ad8:	08 95       	ret

00003ada <exit>:
    3ada:	f8 94       	cli
    3adc:	0c 94 e0 1d 	jmp	0x3bc0	; 0x3bc0 <_exit>

00003ae0 <__mulsi3>:
    3ae0:	62 9f       	mul	r22, r18
    3ae2:	d0 01       	movw	r26, r0
    3ae4:	73 9f       	mul	r23, r19
    3ae6:	f0 01       	movw	r30, r0
    3ae8:	82 9f       	mul	r24, r18
    3aea:	e0 0d       	add	r30, r0
    3aec:	f1 1d       	adc	r31, r1
    3aee:	64 9f       	mul	r22, r20
    3af0:	e0 0d       	add	r30, r0
    3af2:	f1 1d       	adc	r31, r1
    3af4:	92 9f       	mul	r25, r18
    3af6:	f0 0d       	add	r31, r0
    3af8:	83 9f       	mul	r24, r19
    3afa:	f0 0d       	add	r31, r0
    3afc:	74 9f       	mul	r23, r20
    3afe:	f0 0d       	add	r31, r0
    3b00:	65 9f       	mul	r22, r21
    3b02:	f0 0d       	add	r31, r0
    3b04:	99 27       	eor	r25, r25
    3b06:	72 9f       	mul	r23, r18
    3b08:	b0 0d       	add	r27, r0
    3b0a:	e1 1d       	adc	r30, r1
    3b0c:	f9 1f       	adc	r31, r25
    3b0e:	63 9f       	mul	r22, r19
    3b10:	b0 0d       	add	r27, r0
    3b12:	e1 1d       	adc	r30, r1
    3b14:	f9 1f       	adc	r31, r25
    3b16:	bd 01       	movw	r22, r26
    3b18:	cf 01       	movw	r24, r30
    3b1a:	11 24       	eor	r1, r1
    3b1c:	08 95       	ret

00003b1e <__udivmodhi4>:
    3b1e:	aa 1b       	sub	r26, r26
    3b20:	bb 1b       	sub	r27, r27
    3b22:	51 e1       	ldi	r21, 0x11	; 17
    3b24:	07 c0       	rjmp	.+14     	; 0x3b34 <__udivmodhi4_ep>

00003b26 <__udivmodhi4_loop>:
    3b26:	aa 1f       	adc	r26, r26
    3b28:	bb 1f       	adc	r27, r27
    3b2a:	a6 17       	cp	r26, r22
    3b2c:	b7 07       	cpc	r27, r23
    3b2e:	10 f0       	brcs	.+4      	; 0x3b34 <__udivmodhi4_ep>
    3b30:	a6 1b       	sub	r26, r22
    3b32:	b7 0b       	sbc	r27, r23

00003b34 <__udivmodhi4_ep>:
    3b34:	88 1f       	adc	r24, r24
    3b36:	99 1f       	adc	r25, r25
    3b38:	5a 95       	dec	r21
    3b3a:	a9 f7       	brne	.-22     	; 0x3b26 <__udivmodhi4_loop>
    3b3c:	80 95       	com	r24
    3b3e:	90 95       	com	r25
    3b40:	bc 01       	movw	r22, r24
    3b42:	cd 01       	movw	r24, r26
    3b44:	08 95       	ret

00003b46 <__udivmodsi4>:
    3b46:	a1 e2       	ldi	r26, 0x21	; 33
    3b48:	1a 2e       	mov	r1, r26
    3b4a:	aa 1b       	sub	r26, r26
    3b4c:	bb 1b       	sub	r27, r27
    3b4e:	fd 01       	movw	r30, r26
    3b50:	0d c0       	rjmp	.+26     	; 0x3b6c <__udivmodsi4_ep>

00003b52 <__udivmodsi4_loop>:
    3b52:	aa 1f       	adc	r26, r26
    3b54:	bb 1f       	adc	r27, r27
    3b56:	ee 1f       	adc	r30, r30
    3b58:	ff 1f       	adc	r31, r31
    3b5a:	a2 17       	cp	r26, r18
    3b5c:	b3 07       	cpc	r27, r19
    3b5e:	e4 07       	cpc	r30, r20
    3b60:	f5 07       	cpc	r31, r21
    3b62:	20 f0       	brcs	.+8      	; 0x3b6c <__udivmodsi4_ep>
    3b64:	a2 1b       	sub	r26, r18
    3b66:	b3 0b       	sbc	r27, r19
    3b68:	e4 0b       	sbc	r30, r20
    3b6a:	f5 0b       	sbc	r31, r21

00003b6c <__udivmodsi4_ep>:
    3b6c:	66 1f       	adc	r22, r22
    3b6e:	77 1f       	adc	r23, r23
    3b70:	88 1f       	adc	r24, r24
    3b72:	99 1f       	adc	r25, r25
    3b74:	1a 94       	dec	r1
    3b76:	69 f7       	brne	.-38     	; 0x3b52 <__udivmodsi4_loop>
    3b78:	60 95       	com	r22
    3b7a:	70 95       	com	r23
    3b7c:	80 95       	com	r24
    3b7e:	90 95       	com	r25
    3b80:	9b 01       	movw	r18, r22
    3b82:	ac 01       	movw	r20, r24
    3b84:	bd 01       	movw	r22, r26
    3b86:	cf 01       	movw	r24, r30
    3b88:	08 95       	ret

00003b8a <__divmodsi4>:
    3b8a:	97 fb       	bst	r25, 7
    3b8c:	09 2e       	mov	r0, r25
    3b8e:	05 26       	eor	r0, r21
    3b90:	0e d0       	rcall	.+28     	; 0x3bae <__divmodsi4_neg1>
    3b92:	57 fd       	sbrc	r21, 7
    3b94:	04 d0       	rcall	.+8      	; 0x3b9e <__divmodsi4_neg2>
    3b96:	d7 df       	rcall	.-82     	; 0x3b46 <__udivmodsi4>
    3b98:	0a d0       	rcall	.+20     	; 0x3bae <__divmodsi4_neg1>
    3b9a:	00 1c       	adc	r0, r0
    3b9c:	38 f4       	brcc	.+14     	; 0x3bac <__divmodsi4_exit>

00003b9e <__divmodsi4_neg2>:
    3b9e:	50 95       	com	r21
    3ba0:	40 95       	com	r20
    3ba2:	30 95       	com	r19
    3ba4:	21 95       	neg	r18
    3ba6:	3f 4f       	sbci	r19, 0xFF	; 255
    3ba8:	4f 4f       	sbci	r20, 0xFF	; 255
    3baa:	5f 4f       	sbci	r21, 0xFF	; 255

00003bac <__divmodsi4_exit>:
    3bac:	08 95       	ret

00003bae <__divmodsi4_neg1>:
    3bae:	f6 f7       	brtc	.-4      	; 0x3bac <__divmodsi4_exit>
    3bb0:	90 95       	com	r25
    3bb2:	80 95       	com	r24
    3bb4:	70 95       	com	r23
    3bb6:	61 95       	neg	r22
    3bb8:	7f 4f       	sbci	r23, 0xFF	; 255
    3bba:	8f 4f       	sbci	r24, 0xFF	; 255
    3bbc:	9f 4f       	sbci	r25, 0xFF	; 255
    3bbe:	08 95       	ret

00003bc0 <_exit>:
    3bc0:	f8 94       	cli

00003bc2 <__stop_program>:
    3bc2:	ff cf       	rjmp	.-2      	; 0x3bc2 <__stop_program>
